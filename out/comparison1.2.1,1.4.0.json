[{"id":"f28ccf87d3f844b3415bd770fd6c6c7b80c32303","instances":[{"path":"./1.2.1/src/fx.js","lines":[100,114],"code":"\tstart = e.cur(true) || 0;\n\nif ( parts ) {\n\tvar end = parseFloat(parts[2]),\n\t\tunit = parts[3] || \"px\";\n\n\t// We need to compute starting value\n\tif ( unit != \"px\" ) {\n\t\tself.style[ name ] = (end || 1) + unit;\n\t\tstart = ((end || 1) / e.cur(true)) * start;\n\t\tself.style[ name ] = start + unit;\n\t}\n\n\t// If a +=/-= token was provided, we're doing a relative animation\n\tif ( parts[1] )"},{"path":"./1.4.0/src/effects.js","lines":[162,176],"code":"\tstart = e.cur(true) || 0;\n\nif ( parts ) {\n\tvar end = parseFloat( parts[2] ),\n\t\tunit = parts[3] || \"px\";\n\n\t// We need to compute starting value\n\tif ( unit !== \"px\" ) {\n\t\tself.style[ name ] = (end || 1) + unit;\n\t\tstart = ((end || 1) / e.cur(true)) * start;\n\t\tself.style[ name ] = start + unit;\n\t}\n\n\t// If a +=/-= token was provided, we're doing a relative animation\n\tif ( parts[1] ) {"}]},
{"id":"7dd58c83203ffc415f017bc790700a9ca5e4a1a0","instances":[{"path":"./1.4.0/src/offset.js","lines":[1,16],"code":"if ( \"getBoundingClientRect\" in document.documentElement ) {\n\tjQuery.fn.offset = function( options ) {\n\t\tvar elem = this[0];\n\n\t\tif ( !elem || !elem.ownerDocument ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif ( options ) { \n\t\t\treturn this.each(function( i ) {\n\t\t\t\tjQuery.offset.setOffset( this, options, i );\n\t\t\t});\n\t\t}\n\n\t\tif ( elem === elem.ownerDocument.body ) {\n\t\t\treturn jQuery.offset.bodyOffset( elem );"},{"path":"./1.4.0/src/offset.js","lines":[24,42],"code":"\t\treturn { top: top, left: left };\n\t};\n\n} else {\n\tjQuery.fn.offset = function( options ) {\n\t\tvar elem = this[0];\n\n\t\tif ( !elem || !elem.ownerDocument ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif ( options ) { \n\t\t\treturn this.each(function( i ) {\n\t\t\t\tjQuery.offset.setOffset( this, options, i );\n\t\t\t});\n\t\t}\n\n\t\tif ( elem === elem.ownerDocument.body ) {\n\t\t\treturn jQuery.offset.bodyOffset( elem );"}]}]
