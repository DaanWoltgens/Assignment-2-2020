[{"id":"cf40f4b1a1140eefe5dde7d5f179221330c60221","instances":[{"path":"./1.1/src/ajax/ajaxTest.js","lines":[100,108],"code":"expect(8);\nstop();\nvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\tsuccess = function() { counter.success++ },\n\terror = function() { counter.error++ },\n\tcomplete = function() { counter.complete++ },\n\tsend = function() { counter.send++ };\n\n$('#foo').ajaxStart(complete).ajaxStop(complete).ajaxSend(send).ajaxComplete(complete).ajaxError(error).ajaxSuccess(success);"},{"path":"./1.1/src/ajax/ajaxTest.js","lines":[128,135],"code":"expect(8);\nstop();\nvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\tsuccess = function() { counter.success++ },\n\terror = function() { counter.error++ },\n\tcomplete = function() { counter.complete++ },\n\tsend = function() { counter.send++ };\n$.ajaxTimeout(0);"},{"path":"./1.1.4/src/ajax/ajaxTest.js","lines":[189,198],"code":"expect( isLocal ? 4 : 8 );\nstop();\n\nvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\tsuccess = function() { counter.success++ },\n\terror = function() { counter.error++ },\n\tcomplete = function() { counter.complete++ },\n\tsend = function() { counter.send++ };\n\n$('#foo').ajaxStart(complete).ajaxStop(complete).ajaxSend(send).ajaxComplete(complete).ajaxError(error).ajaxSuccess(success);"},{"path":"./1.1.4/src/ajax/ajaxTest.js","lines":[224,233],"code":"expect( isLocal ? 4 : 8 );\nstop();\n\nvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\tsuccess = function() { counter.success++ },\n\terror = function() { counter.error++ },\n\tcomplete = function() { counter.complete++ },\n\tsend = function() { counter.send++ };\n\t\n$.ajaxTimeout(0);"}]},
{"id":"d5c81ce92c78389096c759ae70f09db111928d6a","instances":[{"path":"./1.1/src/jquery/coreTest.js","lines":[295,395],"code":"test(\"before(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\r\n\texpect(4);\r\n\tvar expected = 'This is a normal link: bugaYahoo';\r\n\t$('#yahoo').before('<b>buga</b>');\r\n\tok( expected == $('#en').text(), 'Insert String before' );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: Try them out:Yahoo\";\r\n\t$('#yahoo').before(document.getElementById('first'));\r\n\tok( expected == $('#en').text(), \"Insert element before\" );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\r\n\t$('#yahoo').before([document.getElementById('first'), document.getElementById('mark')]);\r\n\tok( expected == $('#en').text(), \"Insert array of elements before\" );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\r\n\t$('#yahoo').before($(\"#first, #mark\"));\r\n\tok( expected == $('#en').text(), \"Insert jQuery before\" );\r\n});\r\n\r\ntest(\"insertBefore(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\r\n\texpect(4);\r\n\tvar expected = 'This is a normal link: bugaYahoo';\r\n\t$('<b>buga</b>').insertBefore('#yahoo');\r\n\tok( expected == $('#en').text(), 'Insert String before' );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: Try them out:Yahoo\";\r\n\t$(document.getElementById('first')).insertBefore('#yahoo');\r\n\tok( expected == $('#en').text(), \"Insert element before\" );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\r\n\t$([document.getElementById('first'), document.getElementById('mark')]).insertBefore('#yahoo');\r\n\tok( expected == $('#en').text(), \"Insert array of elements before\" );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\r\n\t$(\"#first, #mark\").insertBefore('#yahoo');\r\n\tok( expected == $('#en').text(), \"Insert jQuery before\" );\r\n});\r\n\r\ntest(\"after(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\r\n\texpect(4);\r\n\tvar expected = 'This is a normal link: Yahoobuga';\r\n\t$('#yahoo').after('<b>buga</b>');\r\n\tok( expected == $('#en').text(), 'Insert String after' );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: YahooTry them out:\";\r\n\t$('#yahoo').after(document.getElementById('first'));\r\n\tok( expected == $('#en').text(), \"Insert element after\" );\r\n\r\n\treset();\r\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\r\n\t$('#yahoo').after([document.getElementById('first'), document.getElementById('mark')]);\r\n\tok( expected == $('#en').text(), \"Insert array of elements after\" );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\r\n\t$('#yahoo').after($(\"#first, #mark\"));\r\n\tok( expected == $('#en').text(), \"Insert jQuery after\" );\r\n});\r\n\r\ntest(\"insertAfter(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\r\n\texpect(4);\r\n\tvar expected = 'This is a normal link: Yahoobuga';\r\n\t$('<b>buga</b>').insertAfter('#yahoo');\r\n\tok( expected == $('#en').text(), 'Insert String after' );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: YahooTry them out:\";\r\n\t$(document.getElementById('first')).insertAfter('#yahoo');\r\n\tok( expected == $('#en').text(), \"Insert element after\" );\r\n\r\n\treset();\r\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\r\n\t$([document.getElementById('mark'), document.getElementById('first')]).insertAfter('#yahoo');\r\n\tok( expected == $('#en').text(), \"Insert array of elements after\" );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\r\n\t$(\"#mark, #first\").insertAfter('#yahoo');\r\n\tok( expected == $('#en').text(), \"Insert jQuery after\" );\r\n});\r\n\r\ntest(\"end()\", function() {\r\n\texpect(3);\r\n\tok( 'Yahoo' == $('#yahoo').parent().end().text(), 'Check for end' );\r\n\tok( $('#yahoo').end(), 'Check for end with nothing to end' );\r\n\t\r\n\tvar x = $('#yahoo');\r\n\tx.parent();\r\n\tok( 'Yahoo' == $('#yahoo').text(), 'Check for non-destructive behaviour' );\r\n});\r\n\r\ntest(\"find(String)\", function() {\r\n\tok( 'Yahoo' == $('#foo').find('.blogTest').text(), 'Check for find' );\r"},{"path":"./1.1.4/src/jquery/coreTest.js","lines":[519,620],"code":"test(\"before(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(4);\n\tvar expected = 'This is a normal link: bugaYahoo';\n\t$('#yahoo').before('<b>buga</b>');\n\tok( expected == $('#en').text(), 'Insert String before' );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:Yahoo\";\n\t$('#yahoo').before(document.getElementById('first'));\n\tok( expected == $('#en').text(), \"Insert element before\" );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\n\t$('#yahoo').before([document.getElementById('first'), document.getElementById('mark')]);\n\tok( expected == $('#en').text(), \"Insert array of elements before\" );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\n\t$('#yahoo').before($(\"#first, #mark\"));\n\tok( expected == $('#en').text(), \"Insert jQuery before\" );\n});\n\ntest(\"insertBefore(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(4);\n\tvar expected = 'This is a normal link: bugaYahoo';\n\t$('<b>buga</b>').insertBefore('#yahoo');\n\tok( expected == $('#en').text(), 'Insert String before' );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:Yahoo\";\n\t$(document.getElementById('first')).insertBefore('#yahoo');\n\tok( expected == $('#en').text(), \"Insert element before\" );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\n\t$([document.getElementById('first'), document.getElementById('mark')]).insertBefore('#yahoo');\n\tok( expected == $('#en').text(), \"Insert array of elements before\" );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\n\t$(\"#first, #mark\").insertBefore('#yahoo');\n\tok( expected == $('#en').text(), \"Insert jQuery before\" );\n});\n\ntest(\"after(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(4);\n\tvar expected = 'This is a normal link: Yahoobuga';\n\t$('#yahoo').after('<b>buga</b>');\n\tok( expected == $('#en').text(), 'Insert String after' );\n\t\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:\";\n\t$('#yahoo').after(document.getElementById('first'));\n\tok( expected == $('#en').text(), \"Insert element after\" );\n\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\n\t$('#yahoo').after([document.getElementById('first'), document.getElementById('mark')]);\n\tok( expected == $('#en').text(), \"Insert array of elements after\" );\n\t\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\n\t$('#yahoo').after($(\"#first, #mark\"));\n\tok( expected == $('#en').text(), \"Insert jQuery after\" );\n});\n\ntest(\"insertAfter(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(4);\n\tvar expected = 'This is a normal link: Yahoobuga';\n\t$('<b>buga</b>').insertAfter('#yahoo');\n\tok( expected == $('#en').text(), 'Insert String after' );\n\t\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:\";\n\t$(document.getElementById('first')).insertAfter('#yahoo');\n\tok( expected == $('#en').text(), \"Insert element after\" );\n\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\n\t$([document.getElementById('mark'), document.getElementById('first')]).insertAfter('#yahoo');\n\tok( expected == $('#en').text(), \"Insert array of elements after\" );\n\t\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\n\t$(\"#mark, #first\").insertAfter('#yahoo');\n\tok( expected == $('#en').text(), \"Insert jQuery after\" );\n});\n\ntest(\"end()\", function() {\n\texpect(3);\n\tok( 'Yahoo' == $('#yahoo').parent().end().text(), 'Check for end' );\n\tok( $('#yahoo').end(), 'Check for end with nothing to end' );\n\t\n\tvar x = $('#yahoo');\n\tx.parent();\n\tok( 'Yahoo' == $('#yahoo').text(), 'Check for non-destructive behaviour' );\n});\n\ntest(\"find(String)\", function() {\n\texpect(1);"}]},
{"id":"d5c81ce92c78389096c759ae70f09db111928d6a","instances":[{"path":"./1.1/src/jquery/coreTest.js","lines":[295,395],"code":"test(\"before(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\r\n\texpect(4);\r\n\tvar expected = 'This is a normal link: bugaYahoo';\r\n\t$('#yahoo').before('<b>buga</b>');\r\n\tok( expected == $('#en').text(), 'Insert String before' );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: Try them out:Yahoo\";\r\n\t$('#yahoo').before(document.getElementById('first'));\r\n\tok( expected == $('#en').text(), \"Insert element before\" );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\r\n\t$('#yahoo').before([document.getElementById('first'), document.getElementById('mark')]);\r\n\tok( expected == $('#en').text(), \"Insert array of elements before\" );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\r\n\t$('#yahoo').before($(\"#first, #mark\"));\r\n\tok( expected == $('#en').text(), \"Insert jQuery before\" );\r\n});\r\n\r\ntest(\"insertBefore(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\r\n\texpect(4);\r\n\tvar expected = 'This is a normal link: bugaYahoo';\r\n\t$('<b>buga</b>').insertBefore('#yahoo');\r\n\tok( expected == $('#en').text(), 'Insert String before' );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: Try them out:Yahoo\";\r\n\t$(document.getElementById('first')).insertBefore('#yahoo');\r\n\tok( expected == $('#en').text(), \"Insert element before\" );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\r\n\t$([document.getElementById('first'), document.getElementById('mark')]).insertBefore('#yahoo');\r\n\tok( expected == $('#en').text(), \"Insert array of elements before\" );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\r\n\t$(\"#first, #mark\").insertBefore('#yahoo');\r\n\tok( expected == $('#en').text(), \"Insert jQuery before\" );\r\n});\r\n\r\ntest(\"after(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\r\n\texpect(4);\r\n\tvar expected = 'This is a normal link: Yahoobuga';\r\n\t$('#yahoo').after('<b>buga</b>');\r\n\tok( expected == $('#en').text(), 'Insert String after' );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: YahooTry them out:\";\r\n\t$('#yahoo').after(document.getElementById('first'));\r\n\tok( expected == $('#en').text(), \"Insert element after\" );\r\n\r\n\treset();\r\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\r\n\t$('#yahoo').after([document.getElementById('first'), document.getElementById('mark')]);\r\n\tok( expected == $('#en').text(), \"Insert array of elements after\" );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\r\n\t$('#yahoo').after($(\"#first, #mark\"));\r\n\tok( expected == $('#en').text(), \"Insert jQuery after\" );\r\n});\r\n\r\ntest(\"insertAfter(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\r\n\texpect(4);\r\n\tvar expected = 'This is a normal link: Yahoobuga';\r\n\t$('<b>buga</b>').insertAfter('#yahoo');\r\n\tok( expected == $('#en').text(), 'Insert String after' );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: YahooTry them out:\";\r\n\t$(document.getElementById('first')).insertAfter('#yahoo');\r\n\tok( expected == $('#en').text(), \"Insert element after\" );\r\n\r\n\treset();\r\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\r\n\t$([document.getElementById('mark'), document.getElementById('first')]).insertAfter('#yahoo');\r\n\tok( expected == $('#en').text(), \"Insert array of elements after\" );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\r\n\t$(\"#mark, #first\").insertAfter('#yahoo');\r\n\tok( expected == $('#en').text(), \"Insert jQuery after\" );\r\n});\r\n\r\ntest(\"end()\", function() {\r\n\texpect(3);\r\n\tok( 'Yahoo' == $('#yahoo').parent().end().text(), 'Check for end' );\r\n\tok( $('#yahoo').end(), 'Check for end with nothing to end' );\r\n\t\r\n\tvar x = $('#yahoo');\r\n\tx.parent();\r\n\tok( 'Yahoo' == $('#yahoo').text(), 'Check for non-destructive behaviour' );\r\n});\r\n\r\ntest(\"find(String)\", function() {\r\n\tok( 'Yahoo' == $('#foo').find('.blogTest').text(), 'Check for find' );\r"},{"path":"./1.1.4/src/jquery/coreTest.js","lines":[519,620],"code":"test(\"before(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(4);\n\tvar expected = 'This is a normal link: bugaYahoo';\n\t$('#yahoo').before('<b>buga</b>');\n\tok( expected == $('#en').text(), 'Insert String before' );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:Yahoo\";\n\t$('#yahoo').before(document.getElementById('first'));\n\tok( expected == $('#en').text(), \"Insert element before\" );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\n\t$('#yahoo').before([document.getElementById('first'), document.getElementById('mark')]);\n\tok( expected == $('#en').text(), \"Insert array of elements before\" );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\n\t$('#yahoo').before($(\"#first, #mark\"));\n\tok( expected == $('#en').text(), \"Insert jQuery before\" );\n});\n\ntest(\"insertBefore(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(4);\n\tvar expected = 'This is a normal link: bugaYahoo';\n\t$('<b>buga</b>').insertBefore('#yahoo');\n\tok( expected == $('#en').text(), 'Insert String before' );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:Yahoo\";\n\t$(document.getElementById('first')).insertBefore('#yahoo');\n\tok( expected == $('#en').text(), \"Insert element before\" );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\n\t$([document.getElementById('first'), document.getElementById('mark')]).insertBefore('#yahoo');\n\tok( expected == $('#en').text(), \"Insert array of elements before\" );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\n\t$(\"#first, #mark\").insertBefore('#yahoo');\n\tok( expected == $('#en').text(), \"Insert jQuery before\" );\n});\n\ntest(\"after(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(4);\n\tvar expected = 'This is a normal link: Yahoobuga';\n\t$('#yahoo').after('<b>buga</b>');\n\tok( expected == $('#en').text(), 'Insert String after' );\n\t\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:\";\n\t$('#yahoo').after(document.getElementById('first'));\n\tok( expected == $('#en').text(), \"Insert element after\" );\n\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\n\t$('#yahoo').after([document.getElementById('first'), document.getElementById('mark')]);\n\tok( expected == $('#en').text(), \"Insert array of elements after\" );\n\t\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\n\t$('#yahoo').after($(\"#first, #mark\"));\n\tok( expected == $('#en').text(), \"Insert jQuery after\" );\n});\n\ntest(\"insertAfter(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(4);\n\tvar expected = 'This is a normal link: Yahoobuga';\n\t$('<b>buga</b>').insertAfter('#yahoo');\n\tok( expected == $('#en').text(), 'Insert String after' );\n\t\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:\";\n\t$(document.getElementById('first')).insertAfter('#yahoo');\n\tok( expected == $('#en').text(), \"Insert element after\" );\n\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\n\t$([document.getElementById('mark'), document.getElementById('first')]).insertAfter('#yahoo');\n\tok( expected == $('#en').text(), \"Insert array of elements after\" );\n\t\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\n\t$(\"#mark, #first\").insertAfter('#yahoo');\n\tok( expected == $('#en').text(), \"Insert jQuery after\" );\n});\n\ntest(\"end()\", function() {\n\texpect(3);\n\tok( 'Yahoo' == $('#yahoo').parent().end().text(), 'Check for end' );\n\tok( $('#yahoo').end(), 'Check for end with nothing to end' );\n\t\n\tvar x = $('#yahoo');\n\tx.parent();\n\tok( 'Yahoo' == $('#yahoo').text(), 'Check for non-destructive behaviour' );\n});\n\ntest(\"find(String)\", function() {\n\texpect(1);"}]},
{"id":"ddc90da9a93a2a48279326259f058308c59fec71","instances":[{"path":"./1.1/src/ajax/ajax.js","lines":[467,766],"code":"/**\n * Load a remote page using an HTTP request.\n *\n * This is jQuery's low-level AJAX implementation. See $.get, $.post etc. for\n * higher-level abstractions.\n *\n * $.ajax() returns the XMLHttpRequest that it creates. In most cases you won't\n * need that object to manipulate directly, but it is available if you need to\n * abort the request manually.\n *\n * Note: Make sure the server sends the right mimetype (eg. xml as\n * \"text/xml\"). Sending the wrong mimetype will get you into serious\n * trouble that jQuery can't solve.\n *\n * Supported datatypes are (see dataType option):\n *\n * \"xml\": Returns a XML document that can be processed via jQuery.\n *\n * \"html\": Returns HTML as plain text, included script tags are evaluated.\n *\n * \"script\": Evaluates the response as Javascript and returns it as plain text.\n *\n * \"json\": Evaluates the response as JSON and returns a Javascript Object\n *\n * $.ajax() takes one argument, an object of key/value pairs, that are\n * used to initalize and handle the request. These are all the key/values that can\n * be used:\n *\n * (String) url - The URL to request.\n *\n * (String) type - The type of request to make (\"POST\" or \"GET\"), default is \"GET\".\n *\n * (String) dataType - The type of data that you're expecting back from\n * the server. No default: If the server sends xml, the responseXML, otherwise\n * the responseText is passed to the success callback.\n *\n * (Boolean) ifModified - Allow the request to be successful only if the\n * response has changed since the last request. This is done by checking the\n * Last-Modified header. Default value is false, ignoring the header.\n *\n * (Number) timeout - Local timeout to override global timeout, eg. to give a\n * single request a longer timeout while all others timeout after 1 second.\n * See $.ajaxTimeout() for global timeouts.\n *\n * (Boolean) global - Whether to trigger global AJAX event handlers for\n * this request, default is true. Set to false to prevent that global handlers\n * like ajaxStart or ajaxStop are triggered.\n *\n * (Function) error - A function to be called if the request fails. The\n * function gets passed tree arguments: The XMLHttpRequest object, a\n * string describing the type of error that occurred and an optional\n * exception object, if one occured.\n *\n * (Function) success - A function to be called if the request succeeds. The\n * function gets passed one argument: The data returned from the server,\n * formatted according to the 'dataType' parameter.\n *\n * (Function) complete - A function to be called when the request finishes. The\n * function gets passed two arguments: The XMLHttpRequest object and a\n * string describing the type of success of the request.\n *\n\t * (Object|String) data - Data to be sent to the server. Converted to a query\n * string, if not already a string. Is appended to the url for GET-requests.\n * See processData option to prevent this automatic processing.\n *\n * (String) contentType - When sending data to the server, use this content-type.\n * Default is \"application/x-www-form-urlencoded\", which is fine for most cases.\n *\n * (Boolean) processData - By default, data passed in to the data option as an object\n * other as string will be processed and transformed into a query string, fitting to\n * the default content-type \"application/x-www-form-urlencoded\". If you want to send\n * DOMDocuments, set this option to false.\n *\n * (Boolean) async - By default, all requests are sent asynchronous (set to true).\n * If you need synchronous requests, set this option to false.\n *\n * (Function) beforeSend - A pre-callback to set custom headers etc., the\n * XMLHttpRequest is passed as the only argument.\n *\n * @example $.ajax({\n *   type: \"GET\",\n *   url: \"test.js\",\n *   dataType: \"script\"\n * })\n * @desc Load and execute a JavaScript file.\n *\n * @example $.ajax({\n *   type: \"POST\",\n *   url: \"some.php\",\n *   data: \"name=John&location=Boston\",\n *   success: function(msg){\n *     alert( \"Data Saved: \" + msg );\n *   }\n * });\n * @desc Save some data to the server and notify the user once its complete.\n *\n * @example var html = $.ajax({\n *  url: \"some.php\",\n *  async: false\n * }).responseText;"},{"path":"./1.1.4/src/ajax/ajax.js","lines":[461,777],"code":"/**\n * Load a remote page using an HTTP request.\n *\n * This is jQuery's low-level AJAX implementation. See $.get, $.post etc. for\n * higher-level abstractions that are often easier to understand and use,\n * but don't offer as much functionality (such as error callbacks).\n *\n * $.ajax() returns the XMLHttpRequest that it creates. In most cases you won't\n * need that object to manipulate directly, but it is available if you need to\n * abort the request manually.\n *\n * '''Note:''' If you specify the dataType option described below, make sure\n * the server sends the correct MIME type in the response (eg. xml as \"text/xml\").\n * Sending the wrong MIME type can lead to unexpected problems in your script.\n * See [[Specifying the Data Type for AJAX Requests]] for more information.\n *\n * Supported datatypes are (see dataType option):\n *\n * \"xml\": Returns a XML document that can be processed via jQuery.\n *\n * \"html\": Returns HTML as plain text, included script tags are evaluated.\n *\n * \"script\": Evaluates the response as Javascript and returns it as plain text.\n *\n * \"json\": Evaluates the response as JSON and returns a Javascript Object\n *\n * $.ajax() takes one argument, an object of key/value pairs, that are\n * used to initalize and handle the request. These are all the key/values that can\n * be used:\n *\n * (String) url - The URL to request.\n *\n * (String) type - The type of request to make (\"POST\" or \"GET\"), default is \"GET\".\n *\n * (String) dataType - The type of data that you're expecting back from\n * the server. No default: If the server sends xml, the responseXML, otherwise\n * the responseText is passed to the success callback.\n *\n * (Boolean) ifModified - Allow the request to be successful only if the\n * response has changed since the last request. This is done by checking the\n * Last-Modified header. Default value is false, ignoring the header.\n *\n * (Number) timeout - Local timeout in milliseconds to override global timeout, eg. to give a\n * single request a longer timeout while all others timeout after 1 second.\n * See $.ajaxTimeout() for global timeouts.\n *\n * (Boolean) global - Whether to trigger global AJAX event handlers for\n * this request, default is true. Set to false to prevent that global handlers\n * like ajaxStart or ajaxStop are triggered.\n *\n * (Function) error - A function to be called if the request fails. The\n * function gets passed tree arguments: The XMLHttpRequest object, a\n * string describing the type of error that occurred and an optional\n * exception object, if one occured.\n *\n * (Function) success - A function to be called if the request succeeds. The\n * function gets passed one argument: The data returned from the server,\n * formatted according to the 'dataType' parameter.\n *\n * (Function) complete - A function to be called when the request finishes. The\n * function gets passed two arguments: The XMLHttpRequest object and a\n * string describing the type of success of the request.\n *\n\t * (Object|String) data - Data to be sent to the server. Converted to a query\n * string, if not already a string. Is appended to the url for GET-requests.\n * See processData option to prevent this automatic processing.\n *\n * (String) contentType - When sending data to the server, use this content-type.\n * Default is \"application/x-www-form-urlencoded\", which is fine for most cases.\n *\n * (Boolean) processData - By default, data passed in to the data option as an object\n * other as string will be processed and transformed into a query string, fitting to\n * the default content-type \"application/x-www-form-urlencoded\". If you want to send\n * DOMDocuments, set this option to false.\n *\n * (Boolean) async - By default, all requests are sent asynchronous (set to true).\n * If you need synchronous requests, set this option to false.\n *\n * (Function) beforeSend - A pre-callback to set custom headers etc., the\n * XMLHttpRequest is passed as the only argument.\n *\n * @example $.ajax({\n *   type: \"GET\",\n *   url: \"test.js\",\n *   dataType: \"script\"\n * })\n * @desc Load and execute a JavaScript file.\n *\n * @example $.ajax({\n *   type: \"POST\",\n *   url: \"some.php\",\n *   data: \"name=John&location=Boston\",\n *   success: function(msg){\n *     alert( \"Data Saved: \" + msg );\n *   }\n * });\n * @desc Save some data to the server and notify the user once its complete.\n *\n * @example var html = $.ajax({\n *  url: \"some.php\","}]},
{"id":"726c9418cf79b6d9ff37b8a8e95497ccbe91a8aa","instances":[{"path":"./1.1/src/ajax/ajax.js","lines":[758,802],"code":"/* Get the data out of an XMLHttpRequest.\n * Return parsed XML if content-type header is \"xml\" and type is \"xml\" or omitted,\n * otherwise return plain text.\n * (String) data - The type of data that you're expecting back,\n * (e.g. \"xml\", \"html\", \"script\")\n */\nhttpData: function( r, type ) {\n\tvar ct = r.getResponseHeader(\"content-type\");\n\tvar data = !type && ct && ct.indexOf(\"xml\") >= 0;\n\tdata = type == \"xml\" || data ? r.responseXML : r.responseText;\n\n\t// If the type is \"script\", eval it in global context\n\tif ( type == \"script\" )\n\t\tjQuery.globalEval( data );\n\n\t// Get the JavaScript object, if JSON is used.\n\tif ( type == \"json\" )\n\t\teval( \"data = \" + data );\n\n\t// evaluate scripts within html\n\tif ( type == \"html\" )\n\t\tjQuery(\"<div>\").html(data).evalScripts();\n\n\treturn data;\n},\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\nparam: function( a ) {\n\tvar s = [];\n\n\t// If an array was passed in, assume that it is an array\n\t// of form elements\n\tif ( a.constructor == Array || a.jquery )\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function(){\n\t\t\ts.push( encodeURIComponent(this.name) + \"=\" + encodeURIComponent( this.value ) );\n\t\t});\n\n\t// Otherwise, assume that it's an object of key/value pairs\n\telse\n\t\t// Serialize the key/values\n\t\tfor ( var j in a )\n\t\t\t// If the value is an array then the key names need to be repeated\n\t\t\tif ( a[j].constructor == Array )"},{"path":"./1.1.4/src/ajax/ajax.js","lines":[769,812],"code":"/* Get the data out of an XMLHttpRequest.\n * Return parsed XML if content-type header is \"xml\" and type is \"xml\" or omitted,\n * otherwise return plain text.\n * (String) data - The type of data that you're expecting back,\n * (e.g. \"xml\", \"html\", \"script\")\n */\nhttpData: function( r, type ) {\n\tvar ct = r.getResponseHeader(\"content-type\");\n\tvar xml = type == \"xml\" || !type && ct && ct.indexOf(\"xml\") >= 0;\n\tdata = xml ? r.responseXML : r.responseText;\n\n\tif ( xml && data.documentElement.tagName == \"parsererror\" )\n\t\tthrow \"parsererror\";\n\n\t// If the type is \"script\", eval it in global context\n\tif ( type == \"script\" )\n\t\tjQuery.globalEval( data );\n\n\t// Get the JavaScript object, if JSON is used.\n\tif ( type == \"json\" )\n\t\tdata = eval(\"(\" + data + \")\");\n\n\treturn data;\n},\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\nparam: function( a ) {\n\tvar s = [];\n\n\t// If an array was passed in, assume that it is an array\n\t// of form elements\n\tif ( a.constructor == Array || a.jquery )\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function(){\n\t\t\ts.push( encodeURIComponent(this.name) + \"=\" + encodeURIComponent( this.value ) );\n\t\t});\n\n\t// Otherwise, assume that it's an object of key/value pairs\n\telse\n\t\t// Serialize the key/values\n\t\tfor ( var j in a )\n\t\t\t// If the value is an array then the key names need to be repeated\n\t\t\tif ( a[j] && a[j].constructor == Array )"}]},
{"id":"c1870926ce1c21819af508ee80df29dc724759db","instances":[{"path":"./1.1/src/ajax/ajaxTest.js","lines":[128,141],"code":"expect(8);\nstop();\nvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\tsuccess = function() { counter.success++ },\n\terror = function() { counter.error++ },\n\tcomplete = function() { counter.complete++ },\n\tsend = function() { counter.send++ };\n$.ajaxTimeout(0);\n$('#foo').ajaxStart(complete).ajaxStop(complete).ajaxSend(send).ajaxComplete(complete).ajaxError(error).ajaxSuccess(success);\n$.ajax({url: url(\"data/name.php\"), global: false, beforeSend: send, success: success, error: error, complete: function() {\n  ok( counter.error == 0, 'Check sucesful request without globals' );\n  ok( counter.success == 1, 'Check sucesful request without globals' );\n  ok( counter.complete == 0, 'Check sucesful request without globals' );\n  ok( counter.send == 1, 'Check sucesful request without globals' );"},{"path":"./1.1.4/src/ajax/ajaxTest.js","lines":[224,241],"code":"expect( isLocal ? 4 : 8 );\nstop();\n\nvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\tsuccess = function() { counter.success++ },\n\terror = function() { counter.error++ },\n\tcomplete = function() { counter.complete++ },\n\tsend = function() { counter.send++ };\n\t\n$.ajaxTimeout(0);\n\n$('#foo').ajaxStart(complete).ajaxStop(complete).ajaxSend(send).ajaxComplete(complete).ajaxError(error).ajaxSuccess(success);\n\n$.ajax({url: url(\"data/name.php\"), global: false, beforeSend: send, success: success, error: error, complete: function() {\n  ok( counter.error == 0, 'Check sucesful request without globals' );\n  ok( counter.success == 1, 'Check sucesful request without globals' );\n  ok( counter.complete == 0, 'Check sucesful request without globals' );\n  ok( counter.send == 1, 'Check sucesful request without globals' );"}]},
{"id":"1279d5b11712b485c66c7f789d1638c164542f53","instances":[{"path":"./1.1/src/ajax/ajaxTest.js","lines":[142,155],"code":"\t  counter.error = counter.success = counter.complete = counter.send = 0;\n\t  $.ajaxTimeout(500);\n\t  $.ajax({url: url(\"data/name.php?wait=5\"), global: false, beforeSend: send, success: success, error: error, complete: function() {\n\t  \t var x = counter;\n\t     ok( counter.error == 1, 'Check failed request without globals' );\n\t     ok( counter.success == 0, 'Check failed request without globals' );\n\t     ok( counter.complete == 0, 'Check failed request without globals' );\n\t     ok( counter.send == 1, 'Check failed request without globals' );\n\t     start();\n\t  }});\n\t}});\n});\n\ntest(\"$.get(String, Hash, Function) - parse xml and use text() on nodes\", function() {"},{"path":"./1.1.4/src/ajax/ajaxTest.js","lines":[244,256],"code":" counter.error = counter.success = counter.complete = counter.send = 0;\n $.ajaxTimeout(500);\n \n $.ajax({url: url(\"data/name.php?wait=5\"), global: false, beforeSend: send, success: success, error: error, complete: function() {\n var x = counter;\n ok( counter.error == 1, 'Check failed request without globals' );\n ok( counter.success == 0, 'Check failed request without globals' );\n ok( counter.complete == 0, 'Check failed request without globals' );\n ok( counter.send == 1, 'Check failed request without globals' );\n start();\n }});\n} else\n\t  start();"}]},
{"id":"aa0cc1145e02df791f9a813214cd580e46098c84","instances":[{"path":"./1.1/src/ajax/ajaxTest.js","lines":[193,205],"code":"test(\"$.getJSON(String, Hash, Function) - JSON array\", function() {\n\texpect(4);\n\tstop();\n\t$.getJSON(url(\"data/json.php\"), {json: \"array\"}, function(json) {\n\t  ok( json[0].name == 'John', 'Check JSON: first, name' );\n\t  ok( json[0].age == 21, 'Check JSON: first, age' );\n\t  ok( json[1].name == 'Peter', 'Check JSON: second, name' );\n\t  ok( json[1].age == 25, 'Check JSON: second, age' );\n\t  start();\n\t});\n});\n\ntest(\"$.getJSON(String, Hash, Function) - JSON object\", function() {"},{"path":"./1.1.4/src/ajax/ajaxTest.js","lines":[306,318],"code":"test(\"$.getJSON(String, Hash, Function) - JSON array\", function() {\n\texpect(4);\n\tstop();\n\t$.getJSON(url(\"data/json.php\"), {json: \"array\"}, function(json) {\n\t  ok( json[0].name == 'John', 'Check JSON: first, name' );\n\t  ok( json[0].age == 21, 'Check JSON: first, age' );\n\t  ok( json[1].name == 'Peter', 'Check JSON: second, name' );\n\t  ok( json[1].age == 25, 'Check JSON: second, age' );\n\t  start();\n\t});\n});\n\ntest(\"$.getJSON(String, Function) - JSON object\", function() {"}]},
{"id":"55542eb2d5af2d90f9f60be4d53ae6cda01fb0d3","instances":[{"path":"./1.1/src/ajax/ajaxTest.js","lines":[205,229],"code":"test(\"$.getJSON(String, Hash, Function) - JSON object\", function() {\n\texpect(2);\n\tstop();\n\t$.getJSON(url(\"data/json.php\"), function(json) {\n\t  ok( json.data.lang == 'en', 'Check JSON: lang' );\n\t  ok( json.data.length == 25, 'Check JSON: length' );\n\t  start();\n\t});\n});\n\ntest(\"$.post(String, Hash, Function) - simple with xml\", function() {\n\texpect(2);\n\tstop();\n\t$.post(url(\"data/name.php\"), {xml: \"5-2\"}, function(xml){\n\t  $('math', xml).each(function() {\n\t\t    ok( $('calculation', this).text() == '5-2', 'Check for XML' );\n\t\t    ok( $('result', this).text() == '3', 'Check for XML' );\n\t\t });\n\t  start();\n\t});\n});\n\ntest(\"$.ajaxTimeout(Number) - with global timeout\", function() {\n\tstop();\n\tvar passed = 0;"},{"path":"./1.1.4/src/ajax/ajaxTest.js","lines":[318,343],"code":"test(\"$.getJSON(String, Function) - JSON object\", function() {\n\texpect(2);\n\tstop();\n\t$.getJSON(url(\"data/json.php\"), function(json) {\n\t  ok( json.data.lang == 'en', 'Check JSON: lang' );\n\t  ok( json.data.length == 25, 'Check JSON: length' );\n\t  start();\n\t});\n});\n\ntest(\"$.post(String, Hash, Function) - simple with xml\", function() {\n\texpect(2);\n\tstop();\n\t$.post(url(\"data/name.php\"), {xml: \"5-2\"}, function(xml){\n\t  $('math', xml).each(function() {\n\t\t    ok( $('calculation', this).text() == '5-2', 'Check for XML' );\n\t\t    ok( $('result', this).text() == '3', 'Check for XML' );\n\t\t });\n\t  start();\n\t});\n});\n\ntest(\"$.ajaxTimeout(Number) - with global timeout\", function() {\n\tstop();\n\t\n\tvar passed = 0;"}]},
{"id":"3f84c3220bf656d9bf446aa18d0b746d69cf1c96","instances":[{"path":"./1.1/src/ajax/ajaxTest.js","lines":[246,303],"code":"\t$('#main').ajaxError(pass);\n\t$.ajax({\n\t  type: \"GET\",\n\t  url: url(\"data/name.php?wait=5\"),\n\t  error: pass,\n\t  success: fail\n\t});\n\t// reset timeout\n\t$.ajaxTimeout(0);\n});\n\ntest(\"$.ajaxTimeout(Number) with localtimeout\", function() {\n\tstop(); $.ajaxTimeout(50);\n\t$.ajax({\n\t  type: \"GET\",\n\t  timeout: 5000,\n\t  url: url(\"data/name.php?wait=1\"),\n\t  error: function() {\n\t\t   ok( false, 'Check for local timeout failed' );\n\t\t   start();\n\t  },\n\t  success: function() {\n\t    ok( true, 'Check for local timeout' );\n\t    start();\n\t  }\n\t});\n\t// reset timeout\n\t$.ajaxTimeout(0);\n});\n\ntest(\"$.ajax - simple get\", function() {\n\texpect(1);\n\tstop();\n\t$.ajax({\n\t  type: \"GET\",\n\t  url: url(\"data/name.php?name=foo\"),\n\t  success: function(msg){\n\t    ok( msg == 'bar', 'Check for GET' );\n\t    start();\n\t  }\n\t});\n});\n\ntest(\"$.ajax - simple post\", function() {\n\texpect(1);\n\tstop();\n\t$.ajax({\n\t  type: \"POST\",\n\t  url: url(\"data/name.php\"),\n\t  data: \"name=peter\",\n\t  success: function(msg){\n\t    ok( msg == 'pan', 'Check for POST' );\n\t    start();\n\t  }\n\t});\n});\n\t\ntest(\"$.ajax - dataType html\", function() {"},{"path":"./1.1.4/src/ajax/ajaxTest.js","lines":[361,420],"code":"\t$('#main').ajaxError(pass);\n\t\n\t$.ajax({\n\t  type: \"GET\",\n\t  url: url(\"data/name.php?wait=5\"),\n\t  error: pass,\n\t  success: fail\n\t});\n\t\n\t// reset timeout\n\t$.ajaxTimeout(0);\n});\n\ntest(\"$.ajaxTimeout(Number) with localtimeout\", function() {\n\tstop(); $.ajaxTimeout(50);\n\t$.ajax({\n\t  type: \"GET\",\n\t  timeout: 5000,\n\t  url: url(\"data/name.php?wait=1\"),\n\t  error: function() {\n\t\t   ok( false, 'Check for local timeout failed' );\n\t\t   start();\n\t  },\n\t  success: function() {\n\t    ok( true, 'Check for local timeout' );\n\t    start();\n\t  }\n\t});\n\t// reset timeout\n\t$.ajaxTimeout(0);\n});\n\ntest(\"$.ajax - simple get\", function() {\n\texpect(1);\n\tstop();\n\t$.ajax({\n\t  type: \"GET\",\n\t  url: url(\"data/name.php?name=foo\"),\n\t  success: function(msg){\n\t    ok( msg == 'bar', 'Check for GET' );\n\t    start();\n\t  }\n\t});\n});\n\ntest(\"$.ajax - simple post\", function() {\n\texpect(1);\n\tstop();\n\t$.ajax({\n\t  type: \"POST\",\n\t  url: url(\"data/name.php\"),\n\t  data: \"name=peter\",\n\t  success: function(msg){\n\t    ok( msg == 'pan', 'Check for POST' );\n\t    start();\n\t  }\n\t});\n});\n\ntest(\"ajaxSetup()\", function() {"}]},
{"id":"1c66769b13050318dd32c42a17c5281484dee096","instances":[{"path":"./1.1/src/event/event.js","lines":[108,130],"code":"\tvar args = [].slice.call( arguments, 1 );\n\targs.unshift( event );\n\n\tfor ( var j in c ) {\n\t\t// Pass in a reference to the handler function itself\n\t\t// So that we can later remove it\n\t\targs[0].handler = c[j];\n\t\targs[0].data = c[j].data;\n\n\t\tif ( c[j].apply( this, args ) === false ) {\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t\treturnValue = false;\n\t\t}\n\t}\n\n\t// Clean up added properties in IE to prevent memory leak\n\tif (jQuery.browser.msie) event.target = event.preventDefault = event.stopPropagation = event.handler = event.data = null;\n\n\treturn returnValue;\n},\n\nfix: function(event) {"},{"path":"./1.1.4/src/event/event.js","lines":[164,188],"code":"\tvar c = this.$events && this.$events[event.type], args = Array.prototype.slice.call( arguments, 1 );\n\targs.unshift( event );\n\n\tfor ( var j in c ) {\n\t\t// Pass in a reference to the handler function itself\n\t\t// So that we can later remove it\n\t\targs[0].handler = c[j];\n\t\targs[0].data = c[j].data;\n\n\t\tif ( c[j].apply( this, args ) === false ) {\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t\tval = false;\n\t\t}\n\t}\n\n\t// Clean up added properties in IE to prevent memory leak\n\tif (jQuery.browser.msie)\n\t\tevent.target = event.preventDefault = event.stopPropagation =\n\t\t\tevent.handler = event.data = null;\n\n\treturn val;\n},\n\nfix: function(event) {"}]},
{"id":"ee8f0905f32c94e4e151dbf41dfdfde04f66b203","instances":[{"path":"./1.1/src/event/event.js","lines":[401,480],"code":"\t/**\n\t * Bind a function to be executed whenever the DOM is ready to be\n\t * traversed and manipulated. This is probably the most important \n\t * function included in the event module, as it can greatly improve\n\t * the response times of your web applications.\n\t *\n\t * In a nutshell, this is a solid replacement for using window.onload, \n\t * and attaching a function to that. By using this method, your bound Function \n\t * will be called the instant the DOM is ready to be read and manipulated, \n\t * which is exactly what 99.99% of all Javascript code needs to run.\n\t *\n\t * There is one argument passed to the ready event handler: A reference to\n\t * the jQuery function. You can name that argument whatever you like, and\n\t * can therefore stick with the $ alias without risc of naming collisions.\n\t * \n\t * Please ensure you have no code in your &lt;body&gt; onload event handler, \n\t * otherwise $(document).ready() may not fire.\n\t *\n\t * You can have as many $(document).ready events on your page as you like.\n\t * The functions are then executed in the order they were added.\n\t *\n\t * @example $(document).ready(function(){ Your code here... });\n\t *\n\t * @example jQuery(function($) {\n\t *   // Your code using failsafe $ alias here...\n\t * });\n\t * @desc Uses both the shortcut for $(document).ready() and the argument\n\t * to write failsafe jQuery code using the $ alias, without relying on the\n\t * global alias.\n\t *\n\t * @name ready\n\t * @type jQuery\n\t * @param Function fn The function to be executed when the DOM is ready.\n\t * @cat Events\n\t * @see $.noConflict()\n\t * @see $(Function)\n\t */\n\tready: function(f) {\n\t\t// If the DOM is already ready\n\t\tif ( jQuery.isReady )\n\t\t\t// Execute the function immediately\n\t\t\tf.apply( document, [jQuery] );\n\t\t\t\n\t\t// Otherwise, remember the function for later\n\t\telse {\n\t\t\t// Add the function to the wait list\n\t\t\tjQuery.readyList.push( function() { return f.apply(this, [jQuery]) } );\n\t\t}\n\t\n\t\treturn this;\n\t}\n});\n\njQuery.extend({\n\t/*\n\t * All the code that makes DOM Ready work nicely.\n\t */\n\tisReady: false,\n\treadyList: [],\n\t\n\t// Handle when the DOM is ready\n\tready: function() {\n\t\t// Make sure that the DOM is not already loaded\n\t\tif ( !jQuery.isReady ) {\n\t\t\t// Remember that the DOM is ready\n\t\t\tjQuery.isReady = true;\n\t\t\t\n\t\t\t// If there are functions bound, to execute\n\t\t\tif ( jQuery.readyList ) {\n\t\t\t\t// Execute all of them\n\t\t\t\tjQuery.each( jQuery.readyList, function(){\n\t\t\t\t\tthis.apply( document );\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t// Reset the list of functions\n\t\t\t\tjQuery.readyList = null;\n\t\t\t}\n\t\t\t// Remove event lisenter to avoid memory leak\n\t\t\tif ( jQuery.browser.mozilla || jQuery.browser.opera )\n\t\t\t\tdocument.removeEventListener( \"DOMContentLoaded\", jQuery.ready, false );"},{"path":"./1.1.4/src/event/event.js","lines":[494,575],"code":"\t/**\n\t * Bind a function to be executed whenever the DOM is ready to be\n\t * traversed and manipulated. This is probably the most important \n\t * function included in the event module, as it can greatly improve\n\t * the response times of your web applications.\n\t *\n\t * In a nutshell, this is a solid replacement for using window.onload, \n\t * and attaching a function to that. By using this method, your bound function \n\t * will be called the instant the DOM is ready to be read and manipulated, \n\t * which is when what 99.99% of all JavaScript code needs to run.\n\t *\n\t * There is one argument passed to the ready event handler: A reference to\n\t * the jQuery function. You can name that argument whatever you like, and\n\t * can therefore stick with the $ alias without risk of naming collisions.\n\t * \n\t * Please ensure you have no code in your &lt;body&gt; onload event handler, \n\t * otherwise $(document).ready() may not fire.\n\t *\n\t * You can have as many $(document).ready events on your page as you like.\n\t * The functions are then executed in the order they were added.\n\t *\n\t * @example $(document).ready(function(){ Your code here... });\n\t *\n\t * @example jQuery(function($) {\n\t *   // Your code using failsafe $ alias here...\n\t * });\n\t * @desc Uses both the [[Core#.24.28_fn_.29|shortcut]] for $(document).ready() and the argument\n\t * to write failsafe jQuery code using the $ alias, without relying on the\n\t * global alias.\n\t *\n\t * @name ready\n\t * @type jQuery\n\t * @param Function fn The function to be executed when the DOM is ready.\n\t * @cat Events\n\t * @see $.noConflict()\n\t * @see $(Function)\n\t */\n\tready: function(f) {\n\t\t// Attach the listeners\n\t\tbindReady();\n\n\t\t// If the DOM is already ready\n\t\tif ( jQuery.isReady )\n\t\t\t// Execute the function immediately\n\t\t\tf.apply( document, [jQuery] );\n\t\t\t\n\t\t// Otherwise, remember the function for later\n\t\telse\n\t\t\t// Add the function to the wait list\n\t\t\tjQuery.readyList.push( function() { return f.apply(this, [jQuery]); } );\n\t\n\t\treturn this;\n\t}\n});\n\njQuery.extend({\n\t/*\n\t * All the code that makes DOM Ready work nicely.\n\t */\n\tisReady: false,\n\treadyList: [],\n\t\n\t// Handle when the DOM is ready\n\tready: function() {\n\t\t// Make sure that the DOM is not already loaded\n\t\tif ( !jQuery.isReady ) {\n\t\t\t// Remember that the DOM is ready\n\t\t\tjQuery.isReady = true;\n\t\t\t\n\t\t\t// If there are functions bound, to execute\n\t\t\tif ( jQuery.readyList ) {\n\t\t\t\t// Execute all of them\n\t\t\t\tjQuery.each( jQuery.readyList, function(){\n\t\t\t\t\tthis.apply( document );\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t// Reset the list of functions\n\t\t\t\tjQuery.readyList = null;\n\t\t\t}\n\t\t\t// Remove event listener to avoid memory leak\n\t\t\tif ( jQuery.browser.mozilla || jQuery.browser.opera )\n\t\t\t\tdocument.removeEventListener( \"DOMContentLoaded\", jQuery.ready, false );"}]},
{"id":"9976e4a056287f56cfdb11c1c9f5a2a5c8770bcb","instances":[{"path":"./1.1/src/event/event.js","lines":[832,846],"code":"// If Mozilla is used\nif ( jQuery.browser.mozilla || jQuery.browser.opera )\n\t// Use the handy event callback\n\tdocument.addEventListener( \"DOMContentLoaded\", jQuery.ready, false );\n\n// If IE is used, use the excellent hack by Matthias Miller\n// http://www.outofhanwell.com/blog/index.php?title=the_window_onload_problem_revisited\nelse if ( jQuery.browser.msie ) {\n\n\t// Only works if you document.write() it\n\tdocument.write(\"<scr\" + \"ipt id=__ie_init defer=true \" + \n\t\t\"src=//:><\\/script>\");\n\n\t// Use the defer script hack\n\tvar script = document.getElementById(\"__ie_init\");"},{"path":"./1.1.4/src/event/event.js","lines":[941,955],"code":"// If Mozilla is used\nif ( jQuery.browser.mozilla || jQuery.browser.opera )\n\t// Use the handy event callback\n\tdocument.addEventListener( \"DOMContentLoaded\", jQuery.ready, false );\n\n// If IE is used, use the excellent hack by Matthias Miller\n// http://www.outofhanwell.com/blog/index.php?title=the_window_onload_problem_revisited\nelse if ( jQuery.browser.msie ) {\n\n\t// Only works if you document.write() it\n\tdocument.write(\"<scr\" + \"ipt id=__ie_init defer=true \" + \n\t\t\"src=//:><\\/script>\");\n\n\t// Use the defer script hack\n\tvar script = document.getElementById(\"__ie_init\");"}]},
{"id":"576d335daf940e6808c0046d29af3b85e67aed69","instances":[{"path":"./1.1/src/event/eventTest.js","lines":[26,36],"code":"test(\"trigger(event, [data]\", function() {\n\texpect(3);\n\tvar handler = function(event, a, b, c) {\n\t\tok( a == 1, \"check passed data\" );\n\t\tok( b == \"2\", \"check passed data\" );\n\t\tok( c == \"abc\", \"check passed data\" );\n\t}\n\t$(\"#firstp\").bind(\"click\", handler).trigger(\"click\", [1, \"2\", \"abc\"]);\n});\n\ntest(\"bind() with data\", function() {"},{"path":"./1.1.4/src/event/eventTest.js","lines":[96,106],"code":"test(\"trigger(event, [data]\", function() {\n\texpect(3);\n\tvar handler = function(event, a, b, c) {\n\t\tok( a == 1, \"check passed data\" );\n\t\tok( b == \"2\", \"check passed data\" );\n\t\tok( c == \"abc\", \"check passed data\" );\n\t};\n\t$(\"#firstp\").bind(\"click\", handler).trigger(\"click\", [1, \"2\", \"abc\"]);\n});\n\ntest(\"toggle(Function, Function)\", function() {"}]},
{"id":"8c839cc7db44b10b115eea0dbe58e67c4456b540","instances":[{"path":"./1.1/src/fx/fx.js","lines":[279,382],"code":"\t/**\n\t * A function for making your own, custom, animations. The key aspect of\n\t * this function is the object of style properties that will be animated,\n\t * and to what end. Each key within the object represents a style property\n\t * that will also be animated (for example: \"height\", \"top\", or \"opacity\").\n\t *\n\t * The value associated with the key represents to what end the property\n\t * will be animated. If a number is provided as the value, then the style\n\t * property will be transitioned from its current state to that new number.\n\t * Oterwise if the string \"hide\", \"show\", or \"toggle\" is provided, a default\n\t * animation will be constructed for that property.\n\t *\n\t * @example $(\"p\").animate({\n\t *   height: 'toggle', opacity: 'toggle'\n\t * }, \"slow\");\n\t *\n\t * @example $(\"p\").animate({\n\t *   left: 50, opacity: 'show'\n\t * }, 500);\n\t *\n\t * @example $(\"p\").animate({\n\t *   opacity: 'show'\n\t * }, \"slow\", \"easein\");\n\t * @desc An example of using an 'easing' function to provide a different style of animation. This will only work if you have a plugin that provides this easing function (Only 'linear' is provided by default, with jQuery).\n\t *\n\t * @name animate\n\t * @type jQuery\n\t * @param Hash params A set of style attributes that you wish to animate, and to what end.\n\t * @param String|Number speed (optional) A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param String easing (optional) The name of the easing effect that you want to use (Plugin Required).\n\t * @param Function callback (optional) A function to be executed whenever the animation completes.\n\t * @cat Effects\n\t */\n\tanimate: function( prop, speed, easing, callback ) {\n\t\treturn this.queue(function(){\n\t\t\n\t\t\tthis.curAnim = jQuery.extend({}, prop);\n\t\t\tvar opt = jQuery.speed(speed, easing, callback);\n\t\t\t\n\t\t\tfor ( var p in prop ) {\n\t\t\t\tvar e = new jQuery.fx( this, opt, p );\n\t\t\t\tif ( prop[p].constructor == Number )\n\t\t\t\t\te.custom( e.cur(), prop[p] );\n\t\t\t\telse\n\t\t\t\t\te[ prop[p] ]( prop );\n\t\t\t}\n\t\t\t\n\t\t});\n\t},\n\t\n\t/**\n\t *\n\t * @private\n\t */\n\tqueue: function(type,fn){\n\t\tif ( !fn ) {\n\t\t\tfn = type;\n\t\t\ttype = \"fx\";\n\t\t}\n\t\n\t\treturn this.each(function(){\n\t\t\tif ( !this.queue )\n\t\t\t\tthis.queue = {};\n\t\n\t\t\tif ( !this.queue[type] )\n\t\t\t\tthis.queue[type] = [];\n\t\n\t\t\tthis.queue[type].push( fn );\n\t\t\n\t\t\tif ( this.queue[type].length == 1 )\n\t\t\t\tfn.apply(this);\n\t\t});\n\t}\n\n});\n\njQuery.extend({\n\t\n\tspeed: function(speed, easing, fn) {\n\t\tvar opt = speed && speed.constructor == Object ? speed : {\n\t\t\tcomplete: fn || !fn && easing || \n\t\t\t\tjQuery.isFunction( speed ) && speed,\n\t\t\tduration: speed,\n\t\t\teasing: fn && easing || easing && easing.constructor != Function && easing\n\t\t};\n\n\t\topt.duration = (opt.duration && opt.duration.constructor == Number ? \n\t\t\topt.duration : \n\t\t\t{ slow: 600, fast: 200 }[opt.duration]) || 400;\n\t\n\t\t// Queueing\n\t\topt.old = opt.complete;\n\t\topt.complete = function(){\n\t\t\tjQuery.dequeue(this, \"fx\");\n\t\t\tif ( jQuery.isFunction( opt.old ) )\n\t\t\t\topt.old.apply( this );\n\t\t};\n\t\n\t\treturn opt;\n\t},"},{"path":"./1.1.4/src/fx/fx.js","lines":[276,401],"code":"\t/**\n\t * A function for making your own, custom animations. The key aspect of\n\t * this function is the object of style properties that will be animated,\n\t * and to what end. Each key within the object represents a style property\n\t * that will also be animated (for example: \"height\", \"top\", or \"opacity\").\n\t *\n\t * Note that properties should be specified using camel case\n\t * eg. marginLeft instead of margin-left.\n\t *\n\t * The value associated with the key represents to what end the property\n\t * will be animated. If a number is provided as the value, then the style\n\t * property will be transitioned from its current state to that new number.\n\t * Otherwise if the string \"hide\", \"show\", or \"toggle\" is provided, a default\n\t * animation will be constructed for that property.\n\t *\n\t * @example $(\"p\").animate({\n\t *   height: 'toggle', opacity: 'toggle'\n\t * }, \"slow\");\n\t *\n\t * @example $(\"p\").animate({\n\t *   left: 50, opacity: 'show'\n\t * }, 500);\n\t *\n\t * @example $(\"p\").animate({\n\t *   opacity: 'show'\n\t * }, \"slow\", \"easein\");\n\t * @desc An example of using an 'easing' function to provide a different style of animation. This will only work if you have a plugin that provides this easing function (Only \"swing\" and \"linear\" are provided by default, with jQuery).\n\t *\n\t * @name animate\n\t * @type jQuery\n\t * @param Hash params A set of style attributes that you wish to animate, and to what end.\n\t * @param String|Number speed (optional) A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param String easing (optional) The name of the easing effect that you want to use (e.g. \"swing\" or \"linear\"). Defaults to \"swing\".\n\t * @param Function callback (optional) A function to be executed whenever the animation completes.\n\t * @cat Effects\n\t */\n\tanimate: function( prop, speed, easing, callback ) {\n\t\treturn this.queue(function(){\n\t\t\tvar hidden = jQuery(this).is(\":hidden\"),\n\t\t\t\topt = jQuery.speed(speed, easing, callback),\n\t\t\t\tself = this;\n\t\t\t\n\t\t\tfor ( var p in prop ) {\n\t\t\t\tif ( prop[p] == \"hide\" && hidden || prop[p] == \"show\" && !hidden )\n\t\t\t\t\treturn jQuery.isFunction(opt.complete) && opt.complete.apply(this);\n\n\t\t\t\tif ( p == \"height\" || p == \"width\" ) {\n\t\t\t\t\t// Store display property\n\t\t\t\t\topt.display = jQuery.css(this, \"display\");\n\n\t\t\t\t\t// Make sure that nothing sneaks out\n\t\t\t\t\topt.overflow = this.style.overflow;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( opt.overflow != null )\n\t\t\t\tthis.style.overflow = \"hidden\";\n\n\t\t\tthis.curAnim = jQuery.extend({}, prop);\n\t\t\t\n\t\t\tjQuery.each( prop, function(name, val){\n\t\t\t\tvar e = new jQuery.fx( self, opt, name );\n\t\t\t\tif ( val.constructor == Number )\n\t\t\t\t\te.custom( e.cur() || 0, val );\n\t\t\t\telse\n\t\t\t\t\te[ val == \"toggle\" ? hidden ? \"show\" : \"hide\" : val ]( prop );\n\t\t\t});\n\n\t\t\t// For JS strict compliance\n\t\t\treturn true;\n\t\t});\n\t},\n\t\n\t/**\n\t *\n\t * @private\n\t */\n\tqueue: function(type,fn){\n\t\tif ( !fn ) {\n\t\t\tfn = type;\n\t\t\ttype = \"fx\";\n\t\t}\n\t\n\t\treturn this.each(function(){\n\t\t\tif ( !this.queue )\n\t\t\t\tthis.queue = {};\n\t\n\t\t\tif ( !this.queue[type] )\n\t\t\t\tthis.queue[type] = [];\n\t\n\t\t\tthis.queue[type].push( fn );\n\t\t\n\t\t\tif ( this.queue[type].length == 1 )\n\t\t\t\tfn.apply(this);\n\t\t});\n\t}\n\n});\n\njQuery.extend({"}]},
{"id":"1b0a28af048daf20a2a7021ddee17ebc34fba95e","instances":[{"path":"./1.1/src/fx/fx.js","lines":[382,404],"code":"queue: {},\n\ndequeue: function(elem,type){\n\ttype = type || \"fx\";\n\n\tif ( elem.queue && elem.queue[type] ) {\n\t\t// Remove self\n\t\telem.queue[type].shift();\n\n\t\t// Get next function\n\t\tvar f = elem.queue[type][0];\n\t\n\t\tif ( f ) f.apply( elem );\n\t}\n},\n\n/*\n * I originally wrote fx() as a clone of moo.fx and in the process\n * of making it small in size the code became illegible to sane\n * people. You've been warned.\n */\n\nfx: function( elem, options, prop ){"},{"path":"./1.1.4/src/fx/fx.js","lines":[409,425],"code":"queue: {},\n\ndequeue: function(elem,type){\n\ttype = type || \"fx\";\n\n\tif ( elem.queue && elem.queue[type] ) {\n\t\t// Remove self\n\t\telem.queue[type].shift();\n\n\t\t// Get next function\n\t\tvar f = elem.queue[type][0];\n\t\n\t\tif ( f ) f.apply( elem );\n\t}\n},\n\ntimers: [],"}]},
{"id":"0229f9ae282538c01901acfad98ee7dccbbfccd2","instances":[{"path":"./1.1/src/jquery/coreTest.js","lines":[1,14],"code":"module(\"core\");\r\n\r\ntest(\"Basic requirements\", function() {\r\n\texpect(7);\r\n\tok( Array.prototype.push, \"Array.push()\" );\r\n\tok( Function.prototype.apply, \"Function.apply()\" );\r\n\tok( document.getElementById, \"getElementById\" );\r\n\tok( document.getElementsByTagName, \"getElementsByTagName\" );\r\n\tok( RegExp, \"RegExp\" );\r\n\tok( jQuery, \"jQuery\" );\r\n\tok( $, \"$()\" );\r\n});\r\n\r\ntest(\"length\", function() {\r"},{"path":"./1.1.4/src/jquery/coreTest.js","lines":[1,14],"code":"module(\"core\");\n\ntest(\"Basic requirements\", function() {\n\texpect(7);\n\tok( Array.prototype.push, \"Array.push()\" );\n\tok( Function.prototype.apply, \"Function.apply()\" );\n\tok( document.getElementById, \"getElementById\" );\n\tok( document.getElementsByTagName, \"getElementsByTagName\" );\n\tok( RegExp, \"RegExp\" );\n\tok( jQuery, \"jQuery\" );\n\tok( $, \"$()\" );\n});\n\ntest(\"$()\", function() {"}]},
{"id":"7d756802d5b623cba771eec3a8262a277e4379be","instances":[{"path":"./1.1/src/jquery/coreTest.js","lines":[31,69],"code":"\tisSet( $(\"#sndp\").add(\"#en\").add(\"#sap\").get(), q(\"sndp\", \"en\", \"sap\"), \"Check elements from document\" );\r\n\t\r\n\tok( $([]).add($(\"#form\")[0].elements).length > 13, \"Check elements from array\" );\r\n\t\r\n\tvar x = $([]).add($(\"<p id='x1'>xxx</p>\")).add($(\"<p id='x2'>xxx</p>\"));\r\n\tok( x[0].id == \"x1\", \"Check on-the-fly element1\" );\r\n\tok( x[1].id == \"x2\", \"Check on-the-fly element2\" );\r\n\t\r\n\tvar x = $([]).add(\"<p id='x1'>xxx</p>\").add(\"<p id='x2'>xxx</p>\");\r\n\tok( x[0].id == \"x1\", \"Check on-the-fly element1\" );\r\n\tok( x[1].id == \"x2\", \"Check on-the-fly element2\" );\r\n});\r\n\r\ntest(\"each(Function)\", function() {\r\n\texpect(1);\r\n\tvar div = $(\"div\");\r\n\tdiv.each(function(){this.foo = 'zoo';});\r\n\tvar pass = true;\r\n\tfor ( var i = 0; i < div.size(); i++ ) {\r\n\t  if ( div.get(i).foo != \"zoo\" ) pass = false;\r\n\t}\r\n\tok( pass, \"Execute a function, Relative\" );\r\n});\r\n\r\ntest(\"index(Object)\", function() {\r\n\texpect(8);\r\n\tok( $([window, document]).index(window) == 0, \"Check for index of elements\" );\r\n\tok( $([window, document]).index(document) == 1, \"Check for index of elements\" );\r\n\tvar inputElements = $('#radio1,#radio2,#check1,#check2');\r\n\tok( inputElements.index(document.getElementById('radio1')) == 0, \"Check for index of elements\" );\r\n\tok( inputElements.index(document.getElementById('radio2')) == 1, \"Check for index of elements\" );\r\n\tok( inputElements.index(document.getElementById('check1')) == 2, \"Check for index of elements\" );\r\n\tok( inputElements.index(document.getElementById('check2')) == 3, \"Check for index of elements\" );\r\n\tok( inputElements.index(window) == -1, \"Check for not found index\" );\r\n\tok( inputElements.index(document) == -1, \"Check for not found index\" );\r\n});\r\n\r\ntest(\"attr(String)\", function() {\r\n\texpect(12);\r"},{"path":"./1.1.4/src/jquery/coreTest.js","lines":[154,191],"code":"\tisSet( $(\"#sndp\").add( $(\"#en\")[0] ).add( $(\"#sap\") ).get(), q(\"sndp\", \"en\", \"sap\"), \"Check elements from document\" );\n\tok( $([]).add($(\"#form\")[0].elements).length >= 13, \"Check elements from array\" );\n\t\n\tvar x = $([]).add($(\"<p id='x1'>xxx</p>\")).add($(\"<p id='x2'>xxx</p>\"));\n\tok( x[0].id == \"x1\", \"Check on-the-fly element1\" );\n\tok( x[1].id == \"x2\", \"Check on-the-fly element2\" );\n\t\n\tvar x = $([]).add(\"<p id='x1'>xxx</p>\").add(\"<p id='x2'>xxx</p>\");\n\tok( x[0].id == \"x1\", \"Check on-the-fly element1\" );\n\tok( x[1].id == \"x2\", \"Check on-the-fly element2\" );\n});\n\ntest(\"each(Function)\", function() {\n\texpect(1);\n\tvar div = $(\"div\");\n\tdiv.each(function(){this.foo = 'zoo';});\n\tvar pass = true;\n\tfor ( var i = 0; i < div.size(); i++ ) {\n\t  if ( div.get(i).foo != \"zoo\" ) pass = false;\n\t}\n\tok( pass, \"Execute a function, Relative\" );\n});\n\ntest(\"index(Object)\", function() {\n\texpect(8);\n\tok( $([window, document]).index(window) == 0, \"Check for index of elements\" );\n\tok( $([window, document]).index(document) == 1, \"Check for index of elements\" );\n\tvar inputElements = $('#radio1,#radio2,#check1,#check2');\n\tok( inputElements.index(document.getElementById('radio1')) == 0, \"Check for index of elements\" );\n\tok( inputElements.index(document.getElementById('radio2')) == 1, \"Check for index of elements\" );\n\tok( inputElements.index(document.getElementById('check1')) == 2, \"Check for index of elements\" );\n\tok( inputElements.index(document.getElementById('check2')) == 3, \"Check for index of elements\" );\n\tok( inputElements.index(window) == -1, \"Check for not found index\" );\n\tok( inputElements.index(document) == -1, \"Check for not found index\" );\n});\n\ntest(\"attr(String)\", function() {\n\texpect(13);"}]},
{"id":"4aabccdb5674638713355573b8554d30e91330ea","instances":[{"path":"./1.1/src/jquery/coreTest.js","lines":[89,99],"code":"test(\"attr(Hash)\", function() {\r\n\texpect(1);\r\n\tvar pass = true;\r\n\t$(\"div\").attr({foo: 'baz', zoo: 'ping'}).each(function(){\r\n\t  if ( this.getAttribute('foo') != \"baz\" && this.getAttribute('zoo') != \"ping\" ) pass = false;\r\n\t});\r\n\tok( pass, \"Set Multiple Attributes\" );\r\n});\r\n\r\ntest(\"attr(String, Object)\", function() {\r\n\texpect(6);\r"},{"path":"./1.1.4/src/jquery/coreTest.js","lines":[225,235],"code":"test(\"attr(Hash)\", function() {\n\texpect(1);\n\tvar pass = true;\n\t$(\"div\").attr({foo: 'baz', zoo: 'ping'}).each(function(){\n\t  if ( this.getAttribute('foo') != \"baz\" && this.getAttribute('zoo') != \"ping\" ) pass = false;\n\t});\n\tok( pass, \"Set Multiple Attributes\" );\n});\n\ntest(\"attr(String, Object)\", function() {\n\texpect(8);"}]},
{"id":"72ba93b85f198a17b3e2aadccf173d1848d16e35","instances":[{"path":"./1.1/src/jquery/coreTest.js","lines":[121,137],"code":"\ttest(\"attr(String, Object)x\", function() {\r\n\t\texpect(2);\r\n\t\tstop();\r\n\t\t$.get('data/dashboard.xml', function(xml) { \r\n\t  \tvar titles = [];\r\n\t  \t$('tab', xml).each(function() {\r\n\t    \ttitles.push($(this).attr('title'));\r\n\t  \t});\r\n\t  \tok( titles[0] == 'Location', 'attr() in XML context: Check first title' );\r\n\t  \tok( titles[1] == 'Users', 'attr() in XML context: Check second title' );\r\n\t  \tstart();\r\n\t\t});\r\n\t});\r\n}\r\n\r\ntest(\"css(String|Hash)\", function() {\r\n\texpect(8);\r"},{"path":"./1.1.4/src/jquery/coreTest.js","lines":[260,275],"code":"test(\"attr(String, Object) - Loaded via XML document\", function() {\n\texpect(2);\n\tstop();\n\t$.get('data/dashboard.xml', function(xml) { \n  \t\tvar titles = [];\n  \t\t$('tab', xml).each(function() {\n    \t\t\ttitles.push($(this).attr('title'));\n  \t\t});\n  \t\tok( titles[0] == 'Location', 'attr() in XML context: Check first title' );\n  \t\tok( titles[1] == 'Users', 'attr() in XML context: Check second title' );\n  \t\tstart();\n\t});\n});\n\ntest(\"css(String|Hash)\", function() {\n\texpect(19);"}]},
{"id":"1296b439ba886ced32bd14b14a85a4c367fa96c6","instances":[{"path":"./1.1/src/jquery/coreTest.js","lines":[249,256],"code":"test(\"prepend(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\r\n\texpect(5);\r\n\tvar defaultText = 'Try them out:'\r\n\tvar result = $('#first').prepend('<b>buga</b>');\r\n\tok( result.text() == 'buga' + defaultText, 'Check if text prepending works' );\r\n\tok( $('#select3').prepend('<option value=\"prependTest\">Prepend Test</option>').find('option:first-child').attr('value') == 'prependTest', 'Prepending html options to select element');\r\n\t\r\n\treset();\r"},{"path":"./1.1.4/src/jquery/coreTest.js","lines":[467,474],"code":"test(\"prepend(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(5);\n\tvar defaultText = 'Try them out:'\n\tvar result = $('#first').prepend('<b>buga</b>');\n\tok( result.text() == 'buga' + defaultText, 'Check if text prepending works' );\n\tok( $('#select3').prepend('<option value=\"prependTest\">Prepend Test</option>').find('option:first-child').attr('value') == 'prependTest', 'Prepending html options to select element');\n\t\n\treset();"}]},
{"id":"65dadbad50a8c78fa29303000f081493a2eb310a","instances":[{"path":"./1.1/src/jquery/coreTest.js","lines":[394,406],"code":"\tok( 'Yahoo' == $('#foo').find('.blogTest').text(), 'Check for find' );\r\n});\r\n\r\ntest(\"clone()\", function() {\r\n\texpect(3);\r\n\tok( 'This is a normal link: Yahoo' == $('#en').text(), 'Assert text for #en' );\r\n\tvar clone = $('#yahoo').clone();\r\n\tok( 'Try them out:Yahoo' == $('#first').append(clone).text(), 'Check for clone' );\r\n\tok( 'This is a normal link: Yahoo' == $('#en').text(), 'Reassert text for #en' );\r\n});\r\n\r\ntest(\"is(String)\", function() {\r\n\texpect(22);\r"},{"path":"./1.1.4/src/jquery/coreTest.js","lines":[619,631],"code":"\tok( 'Yahoo' == $('#foo').find('.blogTest').text(), 'Check for find' );\n});\n\ntest(\"clone()\", function() {\n\texpect(3);\n\tok( 'This is a normal link: Yahoo' == $('#en').text(), 'Assert text for #en' );\n\tvar clone = $('#yahoo').clone();\n\tok( 'Try them out:Yahoo' == $('#first').append(clone).text(), 'Check for clone' );\n\tok( 'This is a normal link: Yahoo' == $('#en').text(), 'Reassert text for #en' );\n});\n\ntest(\"is(String)\", function() {\n\texpect(26);"}]},
{"id":"c295eae60804a5762c3aa6e47e8f33a9b97199d8","instances":[{"path":"./1.1/src/jquery/coreTest.js","lines":[433,436],"code":"var settings = { xnumber1: 5, xnumber2: 7, xstring1: \"peter\", xstring2: \"pan\" },\r\n\toptions =     { xnumber2: 1, xstring2: \"x\", xxx: \"newstring\" },\r\n\toptionsCopy = { xnumber2: 1, xstring2: \"x\", xxx: \"newstring\" },\r\n\tmerged = { xnumber1: 5, xnumber2: 1, xstring1: \"peter\", xstring2: \"x\", xxx: \"newstring\" };\r"},{"path":"./1.1.4/src/jquery/coreTest.js","lines":[665,668],"code":"var settings = { xnumber1: 5, xnumber2: 7, xstring1: \"peter\", xstring2: \"pan\" },\n\toptions =     { xnumber2: 1, xstring2: \"x\", xxx: \"newstring\" },\n\toptionsCopy = { xnumber2: 1, xstring2: \"x\", xxx: \"newstring\" },\n\tmerged = { xnumber1: 5, xnumber2: 1, xstring1: \"peter\", xstring2: \"x\", xxx: \"newstring\" },"}]},
{"id":"d6e6a7949f1f7d96905365fe9c225f9a435137bf","instances":[{"path":"./1.1/src/jquery/coreTest.js","lines":[444,481],"code":"\tvar defaults = { xnumber1: 5, xnumber2: 7, xstring1: \"peter\", xstring2: \"pan\" },\r\n\t\tdefaultsCopy = { xnumber1: 5, xnumber2: 7, xstring1: \"peter\", xstring2: \"pan\" },\r\n\t\toptions1 =     { xnumber2: 1, xstring2: \"x\" },\r\n\t\toptions1Copy = { xnumber2: 1, xstring2: \"x\" },\r\n\t\toptions2 =     { xstring2: \"xx\", xxx: \"newstringx\" },\r\n\t\toptions2Copy = { xstring2: \"xx\", xxx: \"newstringx\" },\r\n\t\tmerged = { xnumber1: 5, xnumber2: 1, xstring1: \"peter\", xstring2: \"xx\", xxx: \"newstringx\" };\r\n\tvar settings = jQuery.extend({}, defaults, options1, options2);\r\n\tisSet( settings, merged, \"Check if extended: settings must be extended\" );\r\n\tisSet ( defaults, defaultsCopy, \"Check if not modified: options1 must not be modified\" );\r\n\tisSet ( options1, options1Copy, \"Check if not modified: options1 must not be modified\" );\r\n\tisSet ( options2, options2Copy, \"Check if not modified: options2 must not be modified\" );\r\n});\r\n\r\ntest(\"val()\", function() {\r\n\texpect(2);\r\n\tok( $(\"#text1\").val() == \"Test\", \"Check for value of input element\" );\r\n\tok( !$(\"#text1\").val() == \"\", \"Check for value of input element\" );\r\n});\r\n\r\ntest(\"val(String)\", function() {\r\n\texpect(2);\r\n\tdocument.getElementById('text1').value = \"bla\";\r\n\tok( $(\"#text1\").val() == \"bla\", \"Check for modified value of input element\" );\r\n\t$(\"#text1\").val('test');\r\n\tok ( document.getElementById('text1').value == \"test\", \"Check for modified (via val(String)) value of input element\" );\r\n});\r\n\r\ntest(\"html(String)\", function() {\r\n\texpect(1);\r\n\tvar div = $(\"div\");\r\n\tdiv.html(\"<b>test</b>\");\r\n\tvar pass = true;\r\n\tfor ( var i = 0; i < div.size(); i++ ) {\r\n\t  if ( div.get(i).childNodes.length == 0 ) pass = false;\r\n\t}\r\n\tok( pass, \"Set HTML\" );\r\n});\r"},{"path":"./1.1.4/src/jquery/coreTest.js","lines":[687,724],"code":"\tvar defaults = { xnumber1: 5, xnumber2: 7, xstring1: \"peter\", xstring2: \"pan\" },\n\t\tdefaultsCopy = { xnumber1: 5, xnumber2: 7, xstring1: \"peter\", xstring2: \"pan\" },\n\t\toptions1 =     { xnumber2: 1, xstring2: \"x\" },\n\t\toptions1Copy = { xnumber2: 1, xstring2: \"x\" },\n\t\toptions2 =     { xstring2: \"xx\", xxx: \"newstringx\" },\n\t\toptions2Copy = { xstring2: \"xx\", xxx: \"newstringx\" },\n\t\tmerged2 = { xnumber1: 5, xnumber2: 1, xstring1: \"peter\", xstring2: \"xx\", xxx: \"newstringx\" };\n\n\tvar settings = jQuery.extend({}, defaults, options1, options2);\n\tisObj( settings, merged2, \"Check if extended: settings must be extended\" );\n\tisObj( defaults, defaultsCopy, \"Check if not modified: options1 must not be modified\" );\n\tisObj( options1, options1Copy, \"Check if not modified: options1 must not be modified\" );\n\tisObj( options2, options2Copy, \"Check if not modified: options2 must not be modified\" );\n});\n\ntest(\"val()\", function() {\n\texpect(2);\n\tok( $(\"#text1\").val() == \"Test\", \"Check for value of input element\" );\n\tok( !$(\"#text1\").val() == \"\", \"Check for value of input element\" );\n});\n\ntest(\"val(String)\", function() {\n\texpect(2);\n\tdocument.getElementById('text1').value = \"bla\";\n\tok( $(\"#text1\").val() == \"bla\", \"Check for modified value of input element\" );\n\t$(\"#text1\").val('test');\n\tok ( document.getElementById('text1').value == \"test\", \"Check for modified (via val(String)) value of input element\" );\n});\n\ntest(\"html(String)\", function() {\n\texpect(1);\n\tvar div = $(\"div\");\n\tdiv.html(\"<b>test</b>\");\n\tvar pass = true;\n\tfor ( var i = 0; i < div.size(); i++ ) {\n\t  if ( div.get(i).childNodes.length == 0 ) pass = false;\n\t}\n\tok( pass, \"Set HTML\" );"}]},
{"id":"a5ce07976745acf7c51fd6414b9b7384857a5874","instances":[{"path":"./1.1/src/jquery/coreTest.js","lines":[483,491],"code":"test(\"filter()\", function() {\r\n\texpect(4);\r\n\tisSet( $(\"input\").filter(\":checked\").get(), q(\"radio2\", \"check1\"), \"filter(String)\" );\r\n\tisSet( $(\"p\").filter(\"#ap, #sndp\").get(), q(\"ap\", \"sndp\"), \"filter('String, String')\" );\r\n\tisSet( $(\"p\").filter(\"#ap,#sndp\").get(), q(\"ap\", \"sndp\"), \"filter('String,String')\" );\r\n\tisSet( $(\"p\").filter(function() { return !$(\"a\", this).length }).get(), q(\"sndp\", \"first\"), \"filter(Function)\" );\r\n});\r\n\r\ntest(\"not(String)\", function() {\r"},{"path":"./1.1.4/src/jquery/coreTest.js","lines":[730,738],"code":"test(\"filter()\", function() {\n\texpect(4);\n\tisSet( $(\"input\").filter(\":checked\").get(), q(\"radio2\", \"check1\"), \"filter(String)\" );\n\tisSet( $(\"p\").filter(\"#ap, #sndp\").get(), q(\"ap\", \"sndp\"), \"filter('String, String')\" );\n\tisSet( $(\"p\").filter(\"#ap,#sndp\").get(), q(\"ap\", \"sndp\"), \"filter('String,String')\" );\n\tisSet( $(\"p\").filter(function() { return !$(\"a\", this).length }).get(), q(\"sndp\", \"first\"), \"filter(Function)\" );\n});\n\ntest(\"not()\", function() {"}]},
{"id":"3c0d113d95c981c124b266c6fe5669768c6d1fa2","instances":[{"path":"./1.1/src/jquery/coreTest.js","lines":[506,513],"code":"test(\"children([String])\", function() {\r\n\texpect(3);\r\n\tisSet( $(\"#foo\").children().get(), q(\"sndp\", \"en\", \"sap\"), \"Check for children\" );\r\n\tisSet( $(\"#foo\").children(\"[code]\").get(), q(\"sndp\", \"sap\"), \"Check for filtered children\" );\r\n\tisSet( $(\"#foo\").children(\"#en, #sap\").get(), q(\"en\", \"sap\"), \"Check for multiple filters\" );\r\n});\r\n\r\ntest(\"parent[s]([String])\", function() {\r"},{"path":"./1.1.4/src/jquery/coreTest.js","lines":[754,761],"code":"test(\"children([String])\", function() {\n\texpect(3);\n\tisSet( $(\"#foo\").children().get(), q(\"sndp\", \"en\", \"sap\"), \"Check for children\" );\n\tisSet( $(\"#foo\").children(\"[code]\").get(), q(\"sndp\", \"sap\"), \"Check for filtered children\" );\n\tisSet( $(\"#foo\").children(\"#en, #sap\").get(), q(\"en\", \"sap\"), \"Check for multiple filters\" );\n});\n\ntest(\"parent([String])\", function() {"}]},
{"id":"ba348d4982d2b09d5c10971f82548f6976df4e1e","instances":[{"path":"./1.1/src/jquery/coreTest.js","lines":[579,591],"code":"test(\"toggleClass(String)\", function() {\r\n\texpect(3);\r\n\tvar e = $(\"#firstp\");\r\n\tok( !e.is(\".test\"), \"Assert class not present\" );\r\n\te.toggleClass(\"test\");\r\n\tok( e.is(\".test\"), \"Assert class present\" ); \r\n\te.toggleClass(\"test\");\r\n\tok( !e.is(\".test\"), \"Assert class not present\" );\r\n});\r\n\r\ntest(\"removeAttr(String\", function() {\r\n\tok( $('#mark').removeAttr(\"class\")[0].className == \"\", \"remove class\" );\r\n});\r"},{"path":"./1.1.4/src/jquery/coreTest.js","lines":[839,852],"code":"test(\"toggleClass(String)\", function() {\n\texpect(3);\n\tvar e = $(\"#firstp\");\n\tok( !e.is(\".test\"), \"Assert class not present\" );\n\te.toggleClass(\"test\");\n\tok( e.is(\".test\"), \"Assert class present\" ); \n\te.toggleClass(\"test\");\n\tok( !e.is(\".test\"), \"Assert class not present\" );\n});\n\ntest(\"removeAttr(String\", function() {\n\texpect(1);\n\tok( $('#mark').removeAttr(\"class\")[0].className == \"\", \"remove class\" );\n});"}]},
{"id":"f30bfbf6034071e5ed0462ca1ffb17ffda6ed884","instances":[{"path":"./1.1/src/jquery/coreTest.js","lines":[590,638],"code":"\tok( $('#mark').removeAttr(\"class\")[0].className == \"\", \"remove class\" );\r\n});\r\n\r\ntest(\"text(String)\", function() {\r\n\texpect(1);\r\n\tok( $(\"#foo\").text(\"<div><b>Hello</b> cruel world!</div>\")[0].innerHTML == \"&lt;div&gt;&lt;b&gt;Hello&lt;/b&gt; cruel world!&lt;/div&gt;\", \"Check escaped text\" );\r\n});\r\n\r\ntest(\"$.each(Object,Function)\", function() {\r\n\texpect(8);\r\n\t$.each( [0,1,2], function(i, n){\r\n\t\tok( i == n, \"Check array iteration\" );\r\n\t});\r\n\t\r\n\t$.each( [5,6,7], function(i, n){\r\n\t\tok( i == n - 5, \"Check array iteration\" );\r\n\t});\r\n\t \r\n\t$.each( { name: \"name\", lang: \"lang\" }, function(i, n){\r\n\t\tok( i == n, \"Check object iteration\" );\r\n\t});\r\n});\r\n\r\ntest(\"$.prop\", function() {\r\n\texpect(2);\r\n\tvar handle = function() { return this.id };\r\n\tok( $.prop($(\"#ap\")[0], handle) == \"ap\", \"Check with Function argument\" );\r\n\tok( $.prop($(\"#ap\")[0], \"value\") == \"value\", \"Check with value argument\" );\r\n});\r\n\r\ntest(\"$.className\", function() {\r\n\texpect(6);\r\n\tvar x = $(\"<p>Hi</p>\")[0];\r\n\tvar c = $.className;\r\n\tc.add(x, \"hi\");\r\n\tok( x.className == \"hi\", \"Check single added class\" );\r\n\tc.add(x, \"foo bar\");\r\n\tok( x.className == \"hi foo bar\", \"Check more added classes\" );\r\n\tc.remove(x);\r\n\tok( x.className == \"\", \"Remove all classes\" );\r\n\tc.add(x, \"hi foo bar\");\r\n\tc.remove(x, \"foo\");\r\n\tok( x.className == \"hi bar\", \"Check removal of one class\" );\r\n\tok( c.has(x, \"hi\"), \"Check has1\" );\r\n\tok( c.has(x, \"bar\"), \"Check has2\" );\r\n});\r\n\r\ntest(\"remove()\", function() {\r\n\t$(\"#ap\").children().remove();\r"},{"path":"./1.1.4/src/jquery/coreTest.js","lines":[851,899],"code":"\tok( $('#mark').removeAttr(\"class\")[0].className == \"\", \"remove class\" );\n});\n\ntest(\"text(String)\", function() {\n\texpect(1);\n\tok( $(\"#foo\").text(\"<div><b>Hello</b> cruel world!</div>\")[0].innerHTML == \"&lt;div&gt;&lt;b&gt;Hello&lt;/b&gt; cruel world!&lt;/div&gt;\", \"Check escaped text\" );\n});\n\ntest(\"$.each(Object,Function)\", function() {\n\texpect(8);\n\t$.each( [0,1,2], function(i, n){\n\t\tok( i == n, \"Check array iteration\" );\n\t});\n\t\n\t$.each( [5,6,7], function(i, n){\n\t\tok( i == n - 5, \"Check array iteration\" );\n\t});\n\t \n\t$.each( { name: \"name\", lang: \"lang\" }, function(i, n){\n\t\tok( i == n, \"Check object iteration\" );\n\t});\n});\n\ntest(\"$.prop\", function() {\n\texpect(2);\n\tvar handle = function() { return this.id };\n\tok( $.prop($(\"#ap\")[0], handle) == \"ap\", \"Check with Function argument\" );\n\tok( $.prop($(\"#ap\")[0], \"value\") == \"value\", \"Check with value argument\" );\n});\n\ntest(\"$.className\", function() {\n\texpect(6);\n\tvar x = $(\"<p>Hi</p>\")[0];\n\tvar c = $.className;\n\tc.add(x, \"hi\");\n\tok( x.className == \"hi\", \"Check single added class\" );\n\tc.add(x, \"foo bar\");\n\tok( x.className == \"hi foo bar\", \"Check more added classes\" );\n\tc.remove(x);\n\tok( x.className == \"\", \"Remove all classes\" );\n\tc.add(x, \"hi foo bar\");\n\tc.remove(x, \"foo\");\n\tok( x.className == \"hi bar\", \"Check removal of one class\" );\n\tok( c.has(x, \"hi\"), \"Check has1\" );\n\tok( c.has(x, \"bar\"), \"Check has2\" );\n});\n\ntest(\"remove()\", function() {\n\texpect(4);"}]},
{"id":"eb77acee74812137ff82787bdfa2ef640c39b702","instances":[{"path":"./1.1/src/jquery/jquery.js","lines":[15,60],"code":"/**\n * Create a new jQuery Object\n *\n * @constructor\n * @private\n * @name jQuery\n * @param String|Function|Element|Array<Element>|jQuery a selector\n * @param jQuery|Element|Array<Element> c context\n * @cat Core\n */\nvar jQuery = function(a,c) {\n\t// If the context is global, return a new object\n\tif ( window == this )\n\t\treturn new jQuery(a,c);\n\n\t// Make sure that a selection was provided\n\ta = a || document;\n\t\n\t// HANDLE: $(function)\n\t// Shortcut for document ready\n\t// Safari reports typeof on DOM NodeLists as a function\n\tif ( jQuery.isFunction(a) && !a.nodeType && a[0] == undefined )\n\t\treturn new jQuery(document)[ jQuery.fn.ready ? \"ready\" : \"load\" ]( a );\n\t\n\t// Handle HTML strings\n\tif ( typeof a  == \"string\" ) {\n\t\tvar m = /^[^<]*(<.+>)[^>]*$/.exec(a);\n\n\t\ta = m ?\n\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\tjQuery.clean( [ m[1] ] ) :\n\t\t\n\t\t\t// HANDLE: $(expr)\n\t\t\tjQuery.find( a, c );\n\t}\n\t\n\treturn this.setArray(\n\t\t// HANDLE: $(array)\n\t\ta.constructor == Array && a ||\n\n\t\t// HANDLE: $(arraylike)\n\t\t// Watch for when an array-like object is passed as the selector\n\t\t(a.jquery || a.length && a != window && !a.nodeType && a[0] != undefined && a[0].nodeType) && jQuery.makeArray( a ) ||\n\n\t\t// HANDLE: $(*)\n\t\t[ a ] );"},{"path":"./1.1.4/src/jquery/jquery.js","lines":[147,203],"code":"/**\n * Initialize a new jQuery object\n *\n * @private\n * @name init\n * @param String|Function|Element|Array<Element>|jQuery a selector\n * @param jQuery|Element|Array<Element> c context\n * @cat Core\n */\ninit: function(a,c) {\n\t// Make sure that a selection was provided\n\ta = a || document;\n\n\t// Handle HTML strings\n\tif ( typeof a  == \"string\" ) {\n\t\tvar m = quickExpr.exec(a);\n\t\tif ( m && (m[1] || !c) ) {\n\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\tif ( m[1] )\n\t\t\t\ta = jQuery.clean( [ m[1] ] );\n\n\t\t\t// HANDLE: $(\"#id\")\n\t\t\telse {\n\t\t\t\tvar tmp = document.getElementById( m[3] );\n\t\t\t\tif ( tmp )\n\t\t\t\t\t// Handle the case where IE and Opera return items\n\t\t\t\t\t// by name instead of ID\n\t\t\t\t\tif ( tmp.id != m[3] )\n\t\t\t\t\t\treturn jQuery().find( a );\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis[0] = tmp;\n\t\t\t\t\t\tthis.length = 1;\n\t\t\t\t\t\treturn this;\n\t\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\ta = [];\n\t\t\t}\n\n\t\t// HANDLE: $(expr)\n\t\t} else\n\t\t\treturn new jQuery( c ).find( a );\n\n\t// HANDLE: $(function)\n\t// Shortcut for document ready\n\t} else if ( jQuery.isFunction(a) )\n\t\treturn new jQuery(document)[ jQuery.fn.ready ? \"ready\" : \"load\" ]( a );\n\n\treturn this.setArray(\n\t\t// HANDLE: $(array)\n\t\ta.constructor == Array && a ||\n\n\t\t// HANDLE: $(arraylike)\n\t\t// Watch for when an array-like object is passed as the selector\n\t\t(a.jquery || a.length && a != window && !a.nodeType && a[0] != undefined && a[0].nodeType) && jQuery.makeArray( a ) ||\n\n\t\t// HANDLE: $(*)\n\t\t[ a ] );"}]},
{"id":"6e3774655a08fa7a78b8d253adf00fde413f800b","instances":[{"path":"./1.1/src/jquery/jquery.js","lines":[1288,1319],"code":"\t// internal only, use is(\".class\")\n\thas: function( t, c ) {\n\t\tt = t.className || t;\n\t\treturn t && new RegExp(\"(^|\\\\s)\" + c + \"(\\\\s|$)\").test( t );\n\t}\n},\n\n/**\n * Swap in/out style options.\n * @private\n */\nswap: function(e,o,f) {\n\tfor ( var i in o ) {\n\t\te.style[\"old\"+i] = e.style[i];\n\t\te.style[i] = o[i];\n\t}\n\tf.apply( e, [] );\n\tfor ( var i in o )\n\t\te.style[i] = e.style[\"old\"+i];\n},\n\ncss: function(e,p) {\n\tif ( p == \"height\" || p == \"width\" ) {\n\t\tvar old = {}, oHeight, oWidth, d = [\"Top\",\"Bottom\",\"Right\",\"Left\"];\n\n\t\tjQuery.each( d, function(){\n\t\t\told[\"padding\" + this] = 0;\n\t\t\told[\"border\" + this + \"Width\"] = 0;\n\t\t});\n\n\t\tjQuery.swap( e, old, function() {\n\t\t\tif (jQuery.css(e,\"display\") != \"none\") {"},{"path":"./1.1.4/src/jquery/jquery.js","lines":[1474,1504],"code":"\t// internal only, use is(\".class\")\n\thas: function( t, c ) {\n\t\treturn jQuery.inArray( c, (t.className || t).toString().split(/\\s+/) ) > -1;\n\t}\n},\n\n/**\n * Swap in/out style options.\n * @private\n */\nswap: function(e,o,f) {\n\tfor ( var i in o ) {\n\t\te.style[\"old\"+i] = e.style[i];\n\t\te.style[i] = o[i];\n\t}\n\tf.apply( e, [] );\n\tfor ( var i in o )\n\t\te.style[i] = e.style[\"old\"+i];\n},\n\ncss: function(e,p) {\n\tif ( p == \"height\" || p == \"width\" ) {\n\t\tvar old = {}, oHeight, oWidth, d = [\"Top\",\"Bottom\",\"Right\",\"Left\"];\n\n\t\tjQuery.each( d, function(){\n\t\t\told[\"padding\" + this] = 0;\n\t\t\told[\"border\" + this + \"Width\"] = 0;\n\t\t});\n\n\t\tjQuery.swap( e, old, function() {\n\t\t\tif ( jQuery(e).is(':visible') ) {"}]},
{"id":"1bb47b944ddf9a2e8944f84e6dfbfe479ae30e9f","instances":[{"path":"./1.1/src/jquery/jquery.js","lines":[1319,1329],"code":"if (jQuery.css(e,\"display\") != \"none\") {\n\toHeight = e.offsetHeight;\n\toWidth = e.offsetWidth;\n} else {\n\te = jQuery(e.cloneNode(true))\n\t\t.find(\":radio\").removeAttr(\"checked\").end()\n\t\t.css({\n\t\t\tvisibility: \"hidden\", position: \"absolute\", display: \"block\", right: \"0\", left: \"0\"\n\t\t}).appendTo(e.parentNode)[0];\n\n\tvar parPos = jQuery.css(e.parentNode,\"position\");"},{"path":"./1.1.4/src/jquery/jquery.js","lines":[1504,1514],"code":"if ( jQuery(e).is(':visible') ) {\n\toHeight = e.offsetHeight;\n\toWidth = e.offsetWidth;\n} else {\n\te = jQuery(e.cloneNode(true))\n\t\t.find(\":radio\").removeAttr(\"checked\").end()\n\t\t.css({\n\t\t\tvisibility: \"hidden\", position: \"absolute\", display: \"block\", right: \"0\", left: \"0\"\n\t\t}).appendTo(e.parentNode)[0];\n\n\tvar parPos = jQuery.css(e.parentNode,\"position\") || \"static\";"}]},
{"id":"291056b235dcb892a4c5426b9528e4b42bed88c3","instances":[{"path":"./1.1/src/jquery/jquery.js","lines":[1423,1439],"code":"// Move to the right depth\nwhile ( wrap[0]-- )\n\tdiv = div.firstChild;\n\n// Remove IE's autoinserted <tbody> from table fragments\nif ( jQuery.browser.msie ) {\n\t\n\t// String was a <table>, *may* have spurious <tbody>\n\tif ( !s.indexOf(\"<table\") && s.indexOf(\"<tbody\") < 0 ) \n\t\ttb = div.firstChild && div.firstChild.childNodes;\n\t\t\n\t// String was a bare <thead> or <tfoot>\n\telse if ( wrap[1] == \"<table>\" && s.indexOf(\"<tbody\") < 0 )\n\t\ttb = div.childNodes;\n\n\tfor ( var n = tb.length-1; n >= 0 ; --n )\n\t\tif ( tb[n].nodeName.toUpperCase() == \"TBODY\" && !tb[n].childNodes.length )"},{"path":"./1.1.4/src/jquery/jquery.js","lines":[1651,1667],"code":"// Move to the right depth\nwhile ( wrap[0]-- )\n\tdiv = div.lastChild;\n\n// Remove IE's autoinserted <tbody> from table fragments\nif ( jQuery.browser.msie ) {\n\t\n\t// String was a <table>, *may* have spurious <tbody>\n\tif ( !s.indexOf(\"<table\") && s.indexOf(\"<tbody\") < 0 ) \n\t\ttb = div.firstChild && div.firstChild.childNodes;\n\t\t\n\t// String was a bare <thead> or <tfoot>\n\telse if ( wrap[1] == \"<table>\" && s.indexOf(\"<tbody\") < 0 )\n\t\ttb = div.childNodes;\n\n\tfor ( var n = tb.length-1; n >= 0 ; --n )\n\t\tif ( jQuery.nodeName(tb[n], \"tbody\") && !tb[n].childNodes.length )"}]},
{"id":"047c58977b2714a0525f26dc7351fee6266932ca","instances":[{"path":"./1.1/src/jquery/jquery.js","lines":[1661,1672],"code":"var result = [], r = [];\n\n// Go through the array, translating each of the items to their\n// new value (or values).\nfor ( var i = 0, el = elems.length; i < el; i++ ) {\n\tvar val = fn(elems[i],i);\n\n\tif ( val !== null && val != undefined ) {\n\t\tif ( val.constructor != Array ) val = [val];\n\t\tresult = result.concat( val );\n\t}\n}"},{"path":"./1.1.4/src/jquery/jquery.js","lines":[1916,1927],"code":"var result = [];\n\n// Go through the array, translating each of the items to their\n// new value (or values).\nfor ( var i = 0, el = elems.length; i < el; i++ ) {\n\tvar val = fn(elems[i],i);\n\n\tif ( val !== null && val != undefined ) {\n\t\tif ( val.constructor != Array ) val = [val];\n\t\tresult = result.concat( val );\n\t}\n}"}]},
{"id":"1c2923a48ae719f1500da5ec0f1c4653d252da37","instances":[{"path":"./1.1/src/jquery/jquery.js","lines":[1735,1884],"code":"/**\n * Get a set of elements containing the unique parents of the matched\n * set of elements.\n *\n * Can be filtered with an optional expressions.\n *\n * @example $(\"p\").parent()\n * @before <div><p>Hello</p><p>Hello</p></div>\n * @result [ <div><p>Hello</p><p>Hello</p></div> ]\n * @desc Find the parent element of each paragraph.\n *\n * @example $(\"p\").parent(\".selected\")\n * @before <div><p>Hello</p></div><div class=\"selected\"><p>Hello Again</p></div>\n * @result [ <div class=\"selected\"><p>Hello Again</p></div> ]\n * @desc Find the parent element of each paragraph with a class \"selected\".\n *\n * @name parent\n * @type jQuery\n * @param String expr (optional) An expression to filter the parents with\n * @cat DOM/Traversing\n */\n\n/**\n * Get a set of elements containing the unique ancestors of the matched\n * set of elements (except for the root element).\n *\n * Can be filtered with an optional expressions.\n *\n * @example $(\"span\").parents()\n * @before <html><body><div><p><span>Hello</span></p><span>Hello Again</span></div></body></html>\n * @result [ <body>...</body>, <div>...</div>, <p><span>Hello</span></p> ]\n * @desc Find all parent elements of each span.\n *\n * @example $(\"span\").parents(\"p\")\n * @before <html><body><div><p><span>Hello</span></p><span>Hello Again</span></div></body></html>\n * @result [ <p><span>Hello</span></p> ]\n * @desc Find all parent elements of each span that is a paragraph.\n *\n * @name parents\n * @type jQuery\n * @param String expr (optional) An expression to filter the ancestors with\n * @cat DOM/Traversing\n */\n\n/**\n * Get a set of elements containing the unique next siblings of each of the\n * matched set of elements.\n *\n * It only returns the very next sibling, not all next siblings.\n *\n * Can be filtered with an optional expressions.\n *\n * @example $(\"p\").next()\n * @before <p>Hello</p><p>Hello Again</p><div><span>And Again</span></div>\n * @result [ <p>Hello Again</p>, <div><span>And Again</span></div> ]\n * @desc Find the very next sibling of each paragraph.\n *\n * @example $(\"p\").next(\".selected\")\n * @before <p>Hello</p><p class=\"selected\">Hello Again</p><div><span>And Again</span></div>\n * @result [ <p class=\"selected\">Hello Again</p> ]\n * @desc Find the very next sibling of each paragraph that has a class \"selected\".\n *\n * @name next\n * @type jQuery\n * @param String expr (optional) An expression to filter the next Elements with\n * @cat DOM/Traversing\n */\n\n/**\n * Get a set of elements containing the unique previous siblings of each of the\n * matched set of elements.\n *\n * Can be filtered with an optional expressions.\n *\n * It only returns the immediately previous sibling, not all previous siblings.\n *\n * @example $(\"p\").prev()\n * @before <p>Hello</p><div><span>Hello Again</span></div><p>And Again</p>\n * @result [ <div><span>Hello Again</span></div> ]\n * @desc Find the very previous sibling of each paragraph.\n *\n * @example $(\"p\").prev(\".selected\")\n * @before <div><span>Hello</span></div><p class=\"selected\">Hello Again</p><p>And Again</p>\n * @result [ <div><span>Hello</span></div> ]\n * @desc Find the very previous sibling of each paragraph that has a class \"selected\".\n *\n * @name prev\n * @type jQuery\n * @param String expr (optional) An expression to filter the previous Elements with\n * @cat DOM/Traversing\n */\n\n/**\n * Get a set of elements containing all of the unique siblings of each of the\n * matched set of elements.\n *\n * Can be filtered with an optional expressions.\n *\n * @example $(\"div\").siblings()\n * @before <p>Hello</p><div><span>Hello Again</span></div><p>And Again</p>"},{"path":"./1.1.4/src/jquery/jquery.js","lines":[2001,2152],"code":"/**\n * Get a set of elements containing the unique parents of the matched\n * set of elements.\n *\n * You may use an optional expression to filter the set of parent elements that will match.\n *\n * @example $(\"p\").parent()\n * @before <div><p>Hello</p><p>Hello</p></div>\n * @result [ <div><p>Hello</p><p>Hello</p></div> ]\n * @desc Find the parent element of each paragraph.\n *\n * @example $(\"p\").parent(\".selected\")\n * @before <div><p>Hello</p></div><div class=\"selected\"><p>Hello Again</p></div>\n * @result [ <div class=\"selected\"><p>Hello Again</p></div> ]\n * @desc Find the parent element of each paragraph with a class \"selected\".\n *\n * @name parent\n * @type jQuery\n * @param String expr (optional) An expression to filter the parents with\n * @cat DOM/Traversing\n */\n\n/**\n * Get a set of elements containing the unique ancestors of the matched\n * set of elements (except for the root element).\n *\n * The matched elements can be filtered with an optional expression.\n *\n * @example $(\"span\").parents()\n * @before <html><body><div><p><span>Hello</span></p><span>Hello Again</span></div></body></html>\n * @result [ <body>...</body>, <div>...</div>, <p><span>Hello</span></p> ]\n * @desc Find all parent elements of each span.\n *\n * @example $(\"span\").parents(\"p\")\n * @before <html><body><div><p><span>Hello</span></p><span>Hello Again</span></div></body></html>\n * @result [ <p><span>Hello</span></p> ]\n * @desc Find all parent elements of each span that is a paragraph.\n *\n * @name parents\n * @type jQuery\n * @param String expr (optional) An expression to filter the ancestors with\n * @cat DOM/Traversing\n */\n\n/**\n * Get a set of elements containing the unique next siblings of each of the\n * matched set of elements.\n *\n * It only returns the very next sibling for each element, not all\n * next siblings.\n *\n * You may provide an optional expression to filter the match.\n *\n * @example $(\"p\").next()\n * @before <p>Hello</p><p>Hello Again</p><div><span>And Again</span></div>\n * @result [ <p>Hello Again</p>, <div><span>And Again</span></div> ]\n * @desc Find the very next sibling of each paragraph.\n *\n * @example $(\"p\").next(\".selected\")\n * @before <p>Hello</p><p class=\"selected\">Hello Again</p><div><span>And Again</span></div>\n * @result [ <p class=\"selected\">Hello Again</p> ]\n * @desc Find the very next sibling of each paragraph that has a class \"selected\".\n *\n * @name next\n * @type jQuery\n * @param String expr (optional) An expression to filter the next Elements with\n * @cat DOM/Traversing\n */\n\n/**\n * Get a set of elements containing the unique previous siblings of each of the\n * matched set of elements.\n *\n * Use an optional expression to filter the matched set.\n *\n * \tOnly the immediately previous sibling is returned, not all previous siblings.\n *\n * @example $(\"p\").prev()\n * @before <p>Hello</p><div><span>Hello Again</span></div><p>And Again</p>\n * @result [ <div><span>Hello Again</span></div> ]\n * @desc Find the very previous sibling of each paragraph.\n *\n * @example $(\"p\").prev(\".selected\")\n * @before <div><span>Hello</span></div><p class=\"selected\">Hello Again</p><p>And Again</p>\n * @result [ <div><span>Hello</span></div> ]\n * @desc Find the very previous sibling of each paragraph that has a class \"selected\".\n *\n * @name prev\n * @type jQuery\n * @param String expr (optional) An expression to filter the previous Elements with\n * @cat DOM/Traversing\n */\n\n/**\n * Get a set of elements containing all of the unique siblings of each of the\n * matched set of elements.\n *\n * Can be filtered with an optional expressions.\n *\n * @example $(\"div\").siblings()"}]},
{"id":"9feec779e0c2ff7c436721e0b34d5b63b90e7033","instances":[{"path":"./1.1/src/jquery/jquery.js","lines":[1882,2156],"code":"\t\treturn this.pushStack( ret );\n\t};\n});\n\n/**\n * Append all of the matched elements to another, specified, set of elements.\n * This operation is, essentially, the reverse of doing a regular\n * $(A).append(B), in that instead of appending B to A, you're appending\n * A to B.\n *\n * @example $(\"p\").appendTo(\"#foo\");\n * @before <p>I would like to say: </p><div id=\"foo\"></div>\n * @result <div id=\"foo\"><p>I would like to say: </p></div>\n * @desc Appends all paragraphs to the element with the ID \"foo\"\n *\n * @name appendTo\n * @type jQuery\n * @param <Content> content Content to append to the selected element to.\n * @cat DOM/Manipulation\n * @see append(<Content>)\n */\n\n/**\n * Prepend all of the matched elements to another, specified, set of elements.\n * This operation is, essentially, the reverse of doing a regular\n * $(A).prepend(B), in that instead of prepending B to A, you're prepending\n * A to B.\n *\n * @example $(\"p\").prependTo(\"#foo\");\n * @before <p>I would like to say: </p><div id=\"foo\"><b>Hello</b></div>\n * @result <div id=\"foo\"><p>I would like to say: </p><b>Hello</b></div>\n * @desc Prepends all paragraphs to the element with the ID \"foo\"\n *\n * @name prependTo\n * @type jQuery\n * @param <Content> content Content to prepend to the selected element to.\n * @cat DOM/Manipulation\n * @see prepend(<Content>)\n */\n\n/**\n * Insert all of the matched elements before another, specified, set of elements.\n * This operation is, essentially, the reverse of doing a regular\n * $(A).before(B), in that instead of inserting B before A, you're inserting\n * A before B.\n *\n * @example $(\"p\").insertBefore(\"#foo\");\n * @before <div id=\"foo\">Hello</div><p>I would like to say: </p>\n * @result <p>I would like to say: </p><div id=\"foo\">Hello</div>\n * @desc Same as $(\"#foo\").before(\"p\")\n *\n * @name insertBefore\n * @type jQuery\n * @param <Content> content Content to insert the selected element before.\n * @cat DOM/Manipulation\n * @see before(<Content>)\n */\n\n/**\n * Insert all of the matched elements after another, specified, set of elements.\n * This operation is, essentially, the reverse of doing a regular\n * $(A).after(B), in that instead of inserting B after A, you're inserting\n * A after B.\n *\n * @example $(\"p\").insertAfter(\"#foo\");\n * @before <p>I would like to say: </p><div id=\"foo\">Hello</div>\n * @result <div id=\"foo\">Hello</div><p>I would like to say: </p>\n * @desc Same as $(\"#foo\").after(\"p\")\n *\n * @name insertAfter\n * @type jQuery\n * @param <Content> content Content to insert the selected element after.\n * @cat DOM/Manipulation\n * @see after(<Content>)\n */\n\njQuery.each({\n\tappendTo: \"append\",\n\tprependTo: \"prepend\",\n\tinsertBefore: \"before\",\n\tinsertAfter: \"after\"\n}, function(i,n){\n\tjQuery.fn[ i ] = function(){\n\t\tvar a = arguments;\n\t\treturn this.each(function(){\n\t\t\tfor ( var j = 0, al = a.length; j < al; j++ )\n\t\t\t\tjQuery(a[j])[n]( this );\n\t\t});\n\t};\n});\n\n/**\n * Remove an attribute from each of the matched elements.\n *\n * @example $(\"input\").removeAttr(\"disabled\")\n * @before <input disabled=\"disabled\"/>\n * @result <input/>\n *\n * @name removeAttr\n * @type jQuery"},{"path":"./1.1.4/src/jquery/jquery.js","lines":[2150,2424],"code":"\t\treturn this.pushStack( jQuery.unique(ret) );\n\t};\n});\n\n/**\n * Append all of the matched elements to another, specified, set of elements.\n * This operation is, essentially, the reverse of doing a regular\n * $(A).append(B), in that instead of appending B to A, you're appending\n * A to B.\n *\n * @example $(\"p\").appendTo(\"#foo\");\n * @before <p>I would like to say: </p><div id=\"foo\"></div>\n * @result <div id=\"foo\"><p>I would like to say: </p></div>\n * @desc Appends all paragraphs to the element with the ID \"foo\"\n *\n * @name appendTo\n * @type jQuery\n * @param <Content> content Content to append to the selected element to.\n * @cat DOM/Manipulation\n * @see append(<Content>)\n */\n\n/**\n * Prepend all of the matched elements to another, specified, set of elements.\n * This operation is, essentially, the reverse of doing a regular\n * $(A).prepend(B), in that instead of prepending B to A, you're prepending\n * A to B.\n *\n * @example $(\"p\").prependTo(\"#foo\");\n * @before <p>I would like to say: </p><div id=\"foo\"><b>Hello</b></div>\n * @result <div id=\"foo\"><p>I would like to say: </p><b>Hello</b></div>\n * @desc Prepends all paragraphs to the element with the ID \"foo\"\n *\n * @name prependTo\n * @type jQuery\n * @param <Content> content Content to prepend to the selected element to.\n * @cat DOM/Manipulation\n * @see prepend(<Content>)\n */\n\n/**\n * Insert all of the matched elements before another, specified, set of elements.\n * This operation is, essentially, the reverse of doing a regular\n * $(A).before(B), in that instead of inserting B before A, you're inserting\n * A before B.\n *\n * @example $(\"p\").insertBefore(\"#foo\");\n * @before <div id=\"foo\">Hello</div><p>I would like to say: </p>\n * @result <p>I would like to say: </p><div id=\"foo\">Hello</div>\n * @desc Same as $(\"#foo\").before(\"p\")\n *\n * @name insertBefore\n * @type jQuery\n * @param <Content> content Content to insert the selected element before.\n * @cat DOM/Manipulation\n * @see before(<Content>)\n */\n\n/**\n * Insert all of the matched elements after another, specified, set of elements.\n * This operation is, essentially, the reverse of doing a regular\n * $(A).after(B), in that instead of inserting B after A, you're inserting\n * A after B.\n *\n * @example $(\"p\").insertAfter(\"#foo\");\n * @before <p>I would like to say: </p><div id=\"foo\">Hello</div>\n * @result <div id=\"foo\">Hello</div><p>I would like to say: </p>\n * @desc Same as $(\"#foo\").after(\"p\")\n *\n * @name insertAfter\n * @type jQuery\n * @param <Content> content Content to insert the selected element after.\n * @cat DOM/Manipulation\n * @see after(<Content>)\n */\n\njQuery.each({\n\tappendTo: \"append\",\n\tprependTo: \"prepend\",\n\tinsertBefore: \"before\",\n\tinsertAfter: \"after\"\n}, function(i,n){\n\tjQuery.fn[ i ] = function(){\n\t\tvar a = arguments;\n\t\treturn this.each(function(){\n\t\t\tfor ( var j = 0, al = a.length; j < al; j++ )\n\t\t\t\tjQuery(a[j])[n]( this );\n\t\t});\n\t};\n});\n\n/**\n * Remove an attribute from each of the matched elements.\n *\n * @example $(\"input\").removeAttr(\"disabled\")\n * @before <input disabled=\"disabled\"/>\n * @result <input/>\n *\n * @name removeAttr\n * @type jQuery"}]},
{"id":"a996a7de5e98be57c6e555a3c516add737625e72","instances":[{"path":"./1.1/src/jquery/jquery.js","lines":[2157,2229],"code":"jQuery.each( [ \"eq\", \"lt\", \"gt\", \"contains\" ], function(i,n){\n\tjQuery.fn[ n ] = function(num,fn) {\n\t\treturn this.filter( \":\" + n + \"(\" + num + \")\", fn );\n\t};\n});\n\n/**\n * Get the current computed, pixel, width of the first matched element.\n *\n * @example $(\"p\").width();\n * @before <p>This is just a test.</p>\n * @result 300\n *\n * @name width\n * @type String\n * @cat CSS\n */\n\n/**\n * Set the CSS width of every matched element. If no explicit unit\n * was specified (like 'em' or '%') then \"px\" is added to the width.\n *\n * @example $(\"p\").width(20);\n * @before <p>This is just a test.</p>\n * @result <p style=\"width:20px;\">This is just a test.</p>\n *\n * @example $(\"p\").width(\"20em\");\n * @before <p>This is just a test.</p>\n * @result <p style=\"width:20em;\">This is just a test.</p>\n *\n * @name width\n * @type jQuery\n * @param String|Number val Set the CSS property to the specified value.\n * @cat CSS\n */\n \n/**\n * Get the current computed, pixel, height of the first matched element.\n *\n * @example $(\"p\").height();\n * @before <p>This is just a test.</p>\n * @result 300\n *\n * @name height\n * @type String\n * @cat CSS\n */\n\n/**\n * Set the CSS width of every matched element. If no explicit unit\n * was specified (like 'em' or '%') then \"px\" is added to the width.\n *\n * @example $(\"p\").height(20);\n * @before <p>This is just a test.</p>\n * @result <p style=\"height:20px;\">This is just a test.</p>\n *\n * @example $(\"p\").height(\"20em\");\n * @before <p>This is just a test.</p>\n * @result <p style=\"height:20em;\">This is just a test.</p>\n *\n * @name height\n * @type jQuery\n * @param String|Number val Set the CSS property to the specified value.\n * @cat CSS\n */\n\njQuery.each( [ \"height\", \"width\" ], function(i,n){\n\tjQuery.fn[ n ] = function(h) {\n\t\treturn h == undefined ?\n\t\t\t( this.length ? jQuery.css( this[0], n ) : null ) :\n\t\t\tthis.css( n, h.constructor == String ? h : h + \"px\" );\n\t};\n});"},{"path":"./1.1.4/src/jquery/jquery.js","lines":[2426,2498],"code":"jQuery.each( [ \"eq\", \"lt\", \"gt\", \"contains\" ], function(i,n){\n\tjQuery.fn[ n ] = function(num,fn) {\n\t\treturn this.filter( \":\" + n + \"(\" + num + \")\", fn );\n\t};\n});\n\n/**\n * Get the current computed, pixel, width of the first matched element.\n *\n * @example $(\"p\").width();\n * @before <p>This is just a test.</p>\n * @result 300\n *\n * @name width\n * @type String\n * @cat CSS\n */\n\n/**\n * Set the CSS width of every matched element. If no explicit unit\n * was specified (like 'em' or '%') then \"px\" is added to the width.\n *\n * @example $(\"p\").width(20);\n * @before <p>This is just a test.</p>\n * @result <p style=\"width:20px;\">This is just a test.</p>\n *\n * @example $(\"p\").width(\"20em\");\n * @before <p>This is just a test.</p>\n * @result <p style=\"width:20em;\">This is just a test.</p>\n *\n * @name width\n * @type jQuery\n * @param String|Number val Set the CSS property to the specified value.\n * @cat CSS\n */\n \n/**\n * Get the current computed, pixel, height of the first matched element.\n *\n * @example $(\"p\").height();\n * @before <p>This is just a test.</p>\n * @result 300\n *\n * @name height\n * @type String\n * @cat CSS\n */\n\n/**\n * Set the CSS height of every matched element. If no explicit unit\n * was specified (like 'em' or '%') then \"px\" is added to the width.\n *\n * @example $(\"p\").height(20);\n * @before <p>This is just a test.</p>\n * @result <p style=\"height:20px;\">This is just a test.</p>\n *\n * @example $(\"p\").height(\"20em\");\n * @before <p>This is just a test.</p>\n * @result <p style=\"height:20em;\">This is just a test.</p>\n *\n * @name height\n * @type jQuery\n * @param String|Number val Set the CSS property to the specified value.\n * @cat CSS\n */\n\njQuery.each( [ \"height\", \"width\" ], function(i,n){\n\tjQuery.fn[ n ] = function(h) {\n\t\treturn h == undefined ?\n\t\t\t( this.length ? jQuery.css( this[0], n ) : null ) :\n\t\t\tthis.css( n, h.constructor == String ? h : h + \"px\" );\n\t};\n});"}]},
{"id":"10b053689d44f7f08bab005747ee1c44f2cfce43","instances":[{"path":"./1.1/src/selector/selector.js","lines":[92,123],"code":"multiFilter: function( expr, elems, not ) {\n\tvar old, cur = [];\n\n\twhile ( expr && expr != old ) {\n\t\told = expr;\n\t\tvar f = jQuery.filter( expr, elems, not );\n\t\texpr = f.t.replace(/^\\s*,\\s*/, \"\" );\n\t\tcur = not ? elems = f.r : jQuery.merge( cur, f.r );\n\t}\n\n\treturn cur;\n},\n\n/**\n * @name $.find\n * @type Array<Element>\n * @private\n * @cat Core\n */\nfind: function( t, context ) {\n\t// Quickly handle non-string expressions\n\tif ( typeof t != \"string\" )\n\t\treturn [ t ];\n\n\t// Make sure that the context is a DOM Element\n\tif ( context && !context.nodeType )\n\t\tcontext = null;\n\n\t// Set the correct context (if none is provided)\n\tcontext = context || document;\n\n\t// Handle the common XPath // expression"},{"path":"./1.1.4/src/selector/selector.js","lines":[81,112],"code":"multiFilter: function( expr, elems, not ) {\n\tvar old, cur = [];\n\n\twhile ( expr && expr != old ) {\n\t\told = expr;\n\t\tvar f = jQuery.filter( expr, elems, not );\n\t\texpr = f.t.replace(/^\\s*,\\s*/, \"\" );\n\t\tcur = not ? elems = f.r : jQuery.merge( cur, f.r );\n\t}\n\n\treturn cur;\n},\n\n/**\n * @name $.find\n * @type Array<Element>\n * @private\n * @cat Core\n */\nfind: function( t, context ) {\n\t// Quickly handle non-string expressions\n\tif ( typeof t != \"string\" )\n\t\treturn [ t ];\n\n\t// Make sure that the context is a DOM Element\n\tif ( context && !context.nodeType )\n\t\tcontext = null;\n\n\t// Set the correct context (if none is provided)\n\tcontext = context || document;\n\n\t// DEPRECATED"}]},
{"id":"f0840cc724275d8e3ae626b16f0b03327c4e8582","instances":[{"path":"./1.1/src/selector/selectorTest.js","lines":[90,96],"code":"test(\"expressions - pseudo (:) selctors\", function() {\r\n\texpect(30);\r\n\tt( \"First Child\", \"p:first-child\", [\"firstp\",\"sndp\"] );\r\n\tt( \"Last Child\", \"p:last-child\", [\"sap\"] );\r\n\tt( \"Only Child\", \"a:only-child\", [\"simon1\",\"anchor1\",\"yahoo\",\"anchor2\"] );\r\n\tt( \"Empty\", \"ul:empty\", [\"firstUL\"] );\r\n\tt( \"Enabled UI Element\", \"input:enabled\", [\"text1\",\"radio1\",\"radio2\",\"check1\",\"check2\",\"hidden1\",\"hidden2\",\"name\"] );\r"},{"path":"./1.1.4/src/selector/selectorTest.js","lines":[163,169],"code":"test(\"pseudo (:) selectors\", function() {\n\texpect(30);\n\tt( \"First Child\", \"p:first-child\", [\"firstp\",\"sndp\"] );\n\tt( \"Last Child\", \"p:last-child\", [\"sap\"] );\n\tt( \"Only Child\", \"a:only-child\", [\"simon1\",\"anchor1\",\"yahoo\",\"anchor2\"] );\n\tt( \"Empty\", \"ul:empty\", [\"firstUL\"] );\n\tt( \"Enabled UI Element\", \"input:enabled\", [\"text1\",\"radio1\",\"radio2\",\"check1\",\"check2\",\"hidden1\",\"hidden2\",\"name\",\"length\",\"idTest\"] );"}]}]
