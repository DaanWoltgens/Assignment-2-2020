[{"id":"da1cef5c47ef7f09e54eccef8d9aa568fa267638","instances":[{"path":"./1.0.1/src/ajax/ajax.js","lines":[239,275],"code":"// Counter for holding the number of active queries\nactive: 0,\n\n// Determines if an XMLHttpRequest was successful or not\nhttpSuccess: function(r) {\n\ttry {\n\t\treturn !r.status && location.protocol == \"file:\" ||\n\t\t\t( r.status >= 200 && r.status < 300 ) || r.status == 304 ||\n\t\t\tjQuery.browser.safari && r.status == undefined;\n\t} catch(e){}\n\n\treturn false;\n},\n\n// Determines if an XMLHttpRequest returns NotModified\nhttpNotModified: function(xml, url) {\n\ttry {\n\t\tvar xmlRes = xml.getResponseHeader(\"Last-Modified\");\n\n\t\t// Firefox always returns 200. check Last-Modified date\n\t\treturn xml.status == 304 || xmlRes == jQuery.lastModified[url] ||\n\t\t\tjQuery.browser.safari && xml.status == undefined;\n\t} catch(e){}\n\n\treturn false;\n},\n\n// Get the data out of an XMLHttpRequest.\n// Return parsed XML if content-type header is \"xml\" and type is \"xml\" or omitted,\n// otherwise return plain text.\nhttpData: function(r,type) {\n\tvar ct = r.getResponseHeader(\"content-type\");\n\tvar data = !type && ct && ct.indexOf(\"xml\") >= 0;\n\tdata = type == \"xml\" || data ? r.responseXML : r.responseText;\n\n\t// If the type is \"script\", eval it\n\tif ( type == \"script\" ) eval.call( window, data );"},{"path":"./1.1.3/src/ajax/ajax.js","lines":[746,784],"code":"// Counter for holding the number of active queries\nactive: 0,\n\n// Determines if an XMLHttpRequest was successful or not\nhttpSuccess: function( r ) {\n\ttry {\n\t\treturn !r.status && location.protocol == \"file:\" ||\n\t\t\t( r.status >= 200 && r.status < 300 ) || r.status == 304 ||\n\t\t\tjQuery.browser.safari && r.status == undefined;\n\t} catch(e){}\n\treturn false;\n},\n\n// Determines if an XMLHttpRequest returns NotModified\nhttpNotModified: function( xml, url ) {\n\ttry {\n\t\tvar xmlRes = xml.getResponseHeader(\"Last-Modified\");\n\n\t\t// Firefox always returns 200. check Last-Modified date\n\t\treturn xml.status == 304 || xmlRes == jQuery.lastModified[url] ||\n\t\t\tjQuery.browser.safari && xml.status == undefined;\n\t} catch(e){}\n\treturn false;\n},\n\n/* Get the data out of an XMLHttpRequest.\n * Return parsed XML if content-type header is \"xml\" and type is \"xml\" or omitted,\n * otherwise return plain text.\n * (String) data - The type of data that you're expecting back,\n * (e.g. \"xml\", \"html\", \"script\")\n */\nhttpData: function( r, type ) {\n\tvar ct = r.getResponseHeader(\"content-type\");\n\tvar data = !type && ct && ct.indexOf(\"xml\") >= 0;\n\tdata = type == \"xml\" || data ? r.responseXML : r.responseText;\n\n\t// If the type is \"script\", eval it in global context\n\tif ( type == \"script\" )\n\t\tjQuery.globalEval( data );"}]},
{"id":"e690ceaa4b4df18b974f84eec44821e0782a5c05","instances":[{"path":"./1.0.1/src/fx/fx.js","lines":[259,306],"code":"\t/**\n\t * @private\n\t */\n\tanimate: function(prop,speed,callback) {\n\t\treturn this.queue(function(){\n\t\t\n\t\t\tthis.curAnim = prop;\n\t\t\t\n\t\t\tfor ( var p in prop ) {\n\t\t\t\tvar e = new jQuery.fx( this, jQuery.speed(speed,callback), p );\n\t\t\t\tif ( prop[p].constructor == Number )\n\t\t\t\t\te.custom( e.cur(), prop[p] );\n\t\t\t\telse\n\t\t\t\t\te[ prop[p] ]( prop );\n\t\t\t}\n\t\t\t\n\t\t});\n\t},\n\t\n\t/**\n\t *\n\t * @private\n\t */\n\tqueue: function(type,fn){\n\t\tif ( !fn ) {\n\t\t\tfn = type;\n\t\t\ttype = \"fx\";\n\t\t}\n\t\n\t\treturn this.each(function(){\n\t\t\tif ( !this.queue )\n\t\t\t\tthis.queue = {};\n\t\n\t\t\tif ( !this.queue[type] )\n\t\t\t\tthis.queue[type] = [];\n\t\n\t\t\tthis.queue[type].push( fn );\n\t\t\n\t\t\tif ( this.queue[type].length == 1 )\n\t\t\t\tfn.apply(this);\n\t\t});\n\t}\n\n});\n\njQuery.extend({\n\n\tsetAuto: function(e,p) {"},{"path":"./1.1.3/src/fx/fx.js","lines":[276,362],"code":"\t/**\n\t * A function for making your own, custom animations. The key aspect of\n\t * this function is the object of style properties that will be animated,\n\t * and to what end. Each key within the object represents a style property\n\t * that will also be animated (for example: \"height\", \"top\", or \"opacity\").\n\t *\n\t * Note that properties should be specified using camel case\n\t * eg. marginLeft instead of margin-left.\n\t *\n\t * The value associated with the key represents to what end the property\n\t * will be animated. If a number is provided as the value, then the style\n\t * property will be transitioned from its current state to that new number.\n\t * Otherwise if the string \"hide\", \"show\", or \"toggle\" is provided, a default\n\t * animation will be constructed for that property.\n\t *\n\t * @example $(\"p\").animate({\n\t *   height: 'toggle', opacity: 'toggle'\n\t * }, \"slow\");\n\t *\n\t * @example $(\"p\").animate({\n\t *   left: 50, opacity: 'show'\n\t * }, 500);\n\t *\n\t * @example $(\"p\").animate({\n\t *   opacity: 'show'\n\t * }, \"slow\", \"easein\");\n\t * @desc An example of using an 'easing' function to provide a different style of animation. This will only work if you have a plugin that provides this easing function (Only \"swing\" and \"linear\" are provided by default, with jQuery).\n\t *\n\t * @name animate\n\t * @type jQuery\n\t * @param Hash params A set of style attributes that you wish to animate, and to what end.\n\t * @param String|Number speed (optional) A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param String easing (optional) The name of the easing effect that you want to use (e.g. \"swing\" or \"linear\"). Defaults to \"swing\".\n\t * @param Function callback (optional) A function to be executed whenever the animation completes.\n\t * @cat Effects\n\t */\n\tanimate: function( prop, speed, easing, callback ) {\n\t\treturn this.queue(function(){\n\t\t\tvar hidden = jQuery(this).is(\":hidden\"),\n\t\t\t\topt = jQuery.speed(speed, easing, callback),\n\t\t\t\tself = this;\n\t\t\t\n\t\t\tfor ( var p in prop )\n\t\t\t\tif ( prop[p] == \"hide\" && hidden || prop[p] == \"show\" && !hidden )\n\t\t\t\t\treturn jQuery.isFunction(opt.complete) && opt.complete.apply(this);\n\n\t\t\tthis.curAnim = jQuery.extend({}, prop);\n\t\t\t\n\t\t\tjQuery.each( prop, function(name, val){\n\t\t\t\tvar e = new jQuery.fx( self, opt, name );\n\t\t\t\tif ( val.constructor == Number )\n\t\t\t\t\te.custom( e.cur(), val );\n\t\t\t\telse\n\t\t\t\t\te[ val == \"toggle\" ? hidden ? \"show\" : \"hide\" : val ]( prop );\n\t\t\t});\n\t\t});\n\t},\n\t\n\t/**\n\t *\n\t * @private\n\t */\n\tqueue: function(type,fn){\n\t\tif ( !fn ) {\n\t\t\tfn = type;\n\t\t\ttype = \"fx\";\n\t\t}\n\t\n\t\treturn this.each(function(){\n\t\t\tif ( !this.queue )\n\t\t\t\tthis.queue = {};\n\t\n\t\t\tif ( !this.queue[type] )\n\t\t\t\tthis.queue[type] = [];\n\t\n\t\t\tthis.queue[type].push( fn );\n\t\t\n\t\t\tif ( this.queue[type].length == 1 )\n\t\t\t\tfn.apply(this);\n\t\t});\n\t}\n\n});\n\njQuery.extend({\n\t\n\tspeed: function(speed, easing, fn) {"}]},
{"id":"6386bb5ae1da1ed54925e9652421ff08dd275067","instances":[{"path":"./1.0.1/src/fx/fx.js","lines":[351,376],"code":"\treturn o;\n},\n\nqueue: {},\n\ndequeue: function(elem,type){\n\ttype = type || \"fx\";\n\n\tif ( elem.queue && elem.queue[type] ) {\n\t\t// Remove self\n\t\telem.queue[type].shift();\n\n\t\t// Get next function\n\t\tvar f = elem.queue[type][0];\n\t\n\t\tif ( f ) f.apply( elem );\n\t}\n},\n\n/*\n * I originally wrote fx() as a clone of moo.fx and in the process\n * of making it small in size the code became illegible to sane\n * people. You've been warned.\n */\n\nfx: function( elem, options, prop ){"},{"path":"./1.1.3/src/fx/fx.js","lines":[390,410],"code":"\t\treturn ((-Math.cos(p*Math.PI)/2) + 0.5) * diff + firstNum;\n\t}\n},\n\nqueue: {},\n\ndequeue: function(elem,type){\n\ttype = type || \"fx\";\n\n\tif ( elem.queue && elem.queue[type] ) {\n\t\t// Remove self\n\t\telem.queue[type].shift();\n\n\t\t// Get next function\n\t\tvar f = elem.queue[type][0];\n\t\n\t\tif ( f ) f.apply( elem );\n\t}\n},\n\ntimers: [],"}]},
{"id":"16e6da46b0fede38694602be57eeda53aa5e1c9d","instances":[{"path":"./1.0.1/src/jquery/jquery.js","lines":[899,915],"code":"/**\n * Swap in/out style options.\n * @private\n */\nswap: function(e,o,f) {\n\tfor ( var i in o ) {\n\t\te.style[\"old\"+i] = e.style[i];\n\t\te.style[i] = o[i];\n\t}\n\tf.apply( e, [] );\n\tfor ( var i in o )\n\t\te.style[i] = e.style[\"old\"+i];\n},\n\ncss: function(e,p) {\n\tif ( p == \"height\" || p == \"width\" ) {\n\t\tvar old = {}, oHeight, oWidth, d = [\"Top\",\"Bottom\",\"Right\",\"Left\"];"},{"path":"./1.1.3/src/jquery/jquery.js","lines":[1383,1399],"code":"/**\n * Swap in/out style options.\n * @private\n */\nswap: function(e,o,f) {\n\tfor ( var i in o ) {\n\t\te.style[\"old\"+i] = e.style[i];\n\t\te.style[i] = o[i];\n\t}\n\tf.apply( e, [] );\n\tfor ( var i in o )\n\t\te.style[i] = e.style[\"old\"+i];\n},\n\ncss: function(e,p) {\n\tif ( p == \"height\" || p == \"width\" ) {\n\t\tvar old = {}, oHeight, oWidth, d = [\"Top\",\"Bottom\",\"Right\",\"Left\"];"}]},
{"id":"88d002ffb7edfc2493f973dabc93bd53b1c70c88","instances":[{"path":"./1.1.3/src/ajax/ajaxTest.js","lines":[99,108],"code":"test(\"test global handlers - success\", function() {\n\texpect(8);\n\tstop();\n\tvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\t\tsuccess = function() { counter.success++ },\n\t\terror = function() { counter.error++ },\n\t\tcomplete = function() { counter.complete++ },\n\t\tsend = function() { counter.send++ };\n\n\t$('#foo').ajaxStart(complete).ajaxStop(complete).ajaxSend(send).ajaxComplete(complete).ajaxError(error).ajaxSuccess(success);"},{"path":"./1.1.3/src/ajax/ajaxTest.js","lines":[127,135],"code":"test(\"test global handlers - failure\", function() {\n\texpect(8);\n\tstop();\n\tvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\t\tsuccess = function() { counter.success++ },\n\t\terror = function() { counter.error++ },\n\t\tcomplete = function() { counter.complete++ },\n\t\tsend = function() { counter.send++ };\n\t$.ajaxTimeout(0);"}]}]
