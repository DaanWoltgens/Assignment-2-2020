[{"id":"2c6f1feb5fc8e42063aa3f263f663dde9f197c6b","instances":[{"path":"./1.2.4/src/ajax.js","lines":[249,261],"code":"\tscript.charset = s.scriptCharset;\n\n// Handle Script loading\nif ( !jsonp ) {\n\tvar done = false;\n\n\t// Attach handlers for all browsers\n\tscript.onload = script.onreadystatechange = function(){\n\t\tif ( !done && (!this.readyState ||\n\t\t\t\tthis.readyState == \"loaded\" || this.readyState == \"complete\") ) {\n\t\t\tdone = true;\n\t\t\tsuccess();\n\t\t\tcomplete();"},{"path":"./1.4/src/ajax.js","lines":[296,309],"code":"\tscript.charset = s.scriptCharset;\n}\n\n// Handle Script loading\nif ( !jsonp ) {\n\tvar done = false;\n\n\t// Attach handlers for all browsers\n\tscript.onload = script.onreadystatechange = function() {\n\t\tif ( !done && (!this.readyState ||\n\t\t\t\tthis.readyState === \"loaded\" || this.readyState === \"complete\") ) {\n\t\t\tdone = true;\n\t\t\tsuccess();\n\t\t\tcomplete();"}]},
{"id":"6306bdfd4d6255fb5b81f6119388b52a8b133bf8","instances":[{"path":"./1.2.4/src/core.js","lines":[784,797],"code":"swap: function( elem, options, callback ) {\n\tvar old = {};\n\t// Remember the old values, and insert the new ones\n\tfor ( var name in options ) {\n\t\told[ name ] = elem.style[ name ];\n\t\telem.style[ name ] = options[ name ];\n\t}\n\n\tcallback.call( elem );\n\n\t// Revert the old values\n\tfor ( var name in options )\n\t\telem.style[ name ] = old[ name ];\n},"},{"path":"./1.4/src/css.js","lines":[196,208],"code":"swap: function( elem, options, callback ) {\n\tvar old = {};\n\n\t// Remember the old values, and insert the new ones\n\tfor ( var name in options ) {\n\t\told[ name ] = elem.style[ name ];\n\t\telem.style[ name ] = options[ name ];\n\t}\n\n\tcallback.call( elem );\n\n\t// Revert the old values\n\tfor ( var name in options ) {"}]},
{"id":"f28ccf87d3f844b3415bd770fd6c6c7b80c32303","instances":[{"path":"./1.2.4/src/fx.js","lines":[107,121],"code":"\tstart = e.cur(true) || 0;\n\nif ( parts ) {\n\tvar end = parseFloat(parts[2]),\n\t\tunit = parts[3] || \"px\";\n\n\t// We need to compute starting value\n\tif ( unit != \"px\" ) {\n\t\tself.style[ name ] = (end || 1) + unit;\n\t\tstart = ((end || 1) / e.cur(true)) * start;\n\t\tself.style[ name ] = start + unit;\n\t}\n\n\t// If a +=/-= token was provided, we're doing a relative animation\n\tif ( parts[1] )"},{"path":"./1.4/src/effects.js","lines":[162,176],"code":"\tstart = e.cur(true) || 0;\n\nif ( parts ) {\n\tvar end = parseFloat( parts[2] ),\n\t\tunit = parts[3] || \"px\";\n\n\t// We need to compute starting value\n\tif ( unit !== \"px\" ) {\n\t\tself.style[ name ] = (end || 1) + unit;\n\t\tstart = ((end || 1) / e.cur(true)) * start;\n\t\tself.style[ name ] = start + unit;\n\t}\n\n\t// If a +=/-= token was provided, we're doing a relative animation\n\tif ( parts[1] ) {"}]},
{"id":"2b61ff0cf35dbb46693fd47bdbe55e6657dae95b","instances":[{"path":"./1.2.4/src/fx.js","lines":[272,288],"code":"// Get the current size\ncur: function(force){\n\tif ( this.elem[this.prop] != null && this.elem.style[this.prop] == null )\n\t\treturn this.elem[ this.prop ];\n\n\tvar r = parseFloat(jQuery.css(this.elem, this.prop, force));\n\treturn r && r > -10000 ? r : parseFloat(jQuery.curCSS(this.elem, this.prop)) || 0;\n},\n\n// Start an animation from one number to another\ncustom: function(from, to, unit){\n\tthis.startTime = now();\n\tthis.start = from;\n\tthis.end = to;\n\tthis.unit = unit || this.unit || \"px\";\n\tthis.now = this.start;\n\tthis.pos = this.state = 0;"},{"path":"./1.4/src/effects.js","lines":[301,318],"code":"// Get the current size\ncur: function( force ) {\n\tif ( this.elem[this.prop] != null && (!this.elem.style || this.elem.style[this.prop] == null) ) {\n\t\treturn this.elem[ this.prop ];\n\t}\n\n\tvar r = parseFloat(jQuery.css(this.elem, this.prop, force));\n\treturn r && r > -10000 ? r : parseFloat(jQuery.curCSS(this.elem, this.prop)) || 0;\n},\n\n// Start an animation from one number to another\ncustom: function( from, to, unit ) {\n\tthis.startTime = now();\n\tthis.start = from;\n\tthis.end = to;\n\tthis.unit = unit || this.unit || \"px\";\n\tthis.now = this.start;\n\tthis.pos = this.state = 0;"}]},
{"id":"dc1561a4578e05bb4bc9877b9d207df44f7d6f39","instances":[{"path":"./1.2.4/src/fx.js","lines":[348,353],"code":"if ( gotoEnd || t > this.options.duration + this.startTime ) {\n\tthis.now = this.end;\n\tthis.pos = this.state = 1;\n\tthis.update();\n\n\tthis.options.curAnim[ this.prop ] = true;"},{"path":"./1.4/src/effects.js","lines":[361,366],"code":"if ( gotoEnd || t >= this.options.duration + this.startTime ) {\n\tthis.now = this.end;\n\tthis.pos = this.state = 1;\n\tthis.update();\n\n\tthis.options.curAnim[ this.prop ] = true;"}]},
{"id":"7dd58c83203ffc415f017bc790700a9ca5e4a1a0","instances":[{"path":"./1.4/src/offset.js","lines":[1,16],"code":"if ( \"getBoundingClientRect\" in document.documentElement ) {\n\tjQuery.fn.offset = function( options ) {\n\t\tvar elem = this[0];\n\n\t\tif ( !elem || !elem.ownerDocument ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif ( options ) { \n\t\t\treturn this.each(function( i ) {\n\t\t\t\tjQuery.offset.setOffset( this, options, i );\n\t\t\t});\n\t\t}\n\n\t\tif ( elem === elem.ownerDocument.body ) {\n\t\t\treturn jQuery.offset.bodyOffset( elem );"},{"path":"./1.4/src/offset.js","lines":[24,42],"code":"\t\treturn { top: top, left: left };\n\t};\n\n} else {\n\tjQuery.fn.offset = function( options ) {\n\t\tvar elem = this[0];\n\n\t\tif ( !elem || !elem.ownerDocument ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif ( options ) { \n\t\t\treturn this.each(function( i ) {\n\t\t\t\tjQuery.offset.setOffset( this, options, i );\n\t\t\t});\n\t\t}\n\n\t\tif ( elem === elem.ownerDocument.body ) {\n\t\t\treturn jQuery.offset.bodyOffset( elem );"}]}]
