[{"id":"5814b95ca4081788900d1b2c5cbf1eef3d85ba5d","instances":[{"path":"./1.0.4/src/ajax/ajaxTest.js","lines":[57,68],"code":"test(\"test global handlers - success\", function() {\n\texpect(8);\n\tstop();\n\tvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\t\tsuccess = function() { counter.success++ },\n\t\terror = function() { counter.error++ },\n\t\tcomplete = function() { counter.complete++ },\n\t\tsend = function() { counter.send++ };\n\n\t$('#foo').ajaxStart(complete).ajaxStop(complete).ajaxSend(send).ajaxComplete(complete).ajaxError(error).ajaxSuccess(success);\n\t// start with successful test\n\t$.ajax({url: \"data/name.php\", beforeSend: send, success: success, error: error, complete: function() {"},{"path":"./1.1.3/src/ajax/ajaxTest.js","lines":[99,110],"code":"test(\"test global handlers - success\", function() {\n\texpect(8);\n\tstop();\n\tvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\t\tsuccess = function() { counter.success++ },\n\t\terror = function() { counter.error++ },\n\t\tcomplete = function() { counter.complete++ },\n\t\tsend = function() { counter.send++ };\n\n\t$('#foo').ajaxStart(complete).ajaxStop(complete).ajaxSend(send).ajaxComplete(complete).ajaxError(error).ajaxSuccess(success);\n\t// start with successful test\n\t$.ajax({url: url(\"data/name.php\"), beforeSend: send, success: success, error: error, complete: function() {"}]},
{"id":"19b405a3b3b93024e556964cd13ba781c80d6197","instances":[{"path":"./1.0.4/src/ajax/ajaxTest.js","lines":[75,95],"code":"\t  $.ajax({url: \"data/name.php?wait=5\", beforeSend: send, success: success, error: error, complete: function() {\n\t    ok( counter.error == 2, 'Check failed request' );\n\t    ok( counter.success == 0, 'Check failed request' );\n\t    ok( counter.complete == 3, 'Check failed request' );\n\t    ok( counter.send == 2, 'Check failed request' );\n\t    start();\n\t  }});\n\t}});\n});\n\ntest(\"test global handlers - failure\", function() {\n\texpect(8);\n\tstop();\n\tvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\t\tsuccess = function() { counter.success++ },\n\t\terror = function() { counter.error++ },\n\t\tcomplete = function() { counter.complete++ },\n\t\tsend = function() { counter.send++ };\n\t$.ajaxTimeout(0);\n\t$('#foo').ajaxStart(complete).ajaxStop(complete).ajaxSend(send).ajaxComplete(complete).ajaxError(error).ajaxSuccess(success);\n\t$.ajax({url: \"data/name.php\", global: false, beforeSend: send, success: success, error: error, complete: function() {"},{"path":"./1.1.3/src/ajax/ajaxTest.js","lines":[117,137],"code":"\t  $.ajax({url: url(\"data/name.php?wait=5\"), beforeSend: send, success: success, error: error, complete: function() {\n\t    ok( counter.error == 2, 'Check failed request' );\n\t    ok( counter.success == 0, 'Check failed request' );\n\t    ok( counter.complete == 3, 'Check failed request' );\n\t    ok( counter.send == 2, 'Check failed request' );\n\t    start();\n\t  }});\n\t}});\n});\n\ntest(\"test global handlers - failure\", function() {\n\texpect(8);\n\tstop();\n\tvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\t\tsuccess = function() { counter.success++ },\n\t\terror = function() { counter.error++ },\n\t\tcomplete = function() { counter.complete++ },\n\t\tsend = function() { counter.send++ };\n\t$.ajaxTimeout(0);\n\t$('#foo').ajaxStart(complete).ajaxStop(complete).ajaxSend(send).ajaxComplete(complete).ajaxError(error).ajaxSuccess(success);\n\t$.ajax({url: url(\"data/name.php\"), global: false, beforeSend: send, success: success, error: error, complete: function() {"}]},
{"id":"ce76e7c62bd1f33af4db7c137873b3ab336d2e51","instances":[{"path":"./1.0.4/src/ajax/ajaxTest.js","lines":[68,75],"code":"$.ajax({url: \"data/name.php\", beforeSend: send, success: success, error: error, complete: function() {\n  ok( counter.error == 0, 'Check succesful request' );\n  ok( counter.success == 2, 'Check succesful request' );\n  ok( counter.complete == 3, 'Check succesful request' );\n  ok( counter.send == 2, 'Check succesful request' );\n  counter.error = counter.success = counter.complete = counter.send = 0;\n  $.ajaxTimeout(500);\n  $.ajax({url: \"data/name.php?wait=5\", beforeSend: send, success: success, error: error, complete: function() {"},{"path":"./1.1.3/src/ajax/ajaxTest.js","lines":[110,117],"code":"$.ajax({url: url(\"data/name.php\"), beforeSend: send, success: success, error: error, complete: function() {\n  ok( counter.error == 0, 'Check succesful request' );\n  ok( counter.success == 2, 'Check succesful request' );\n  ok( counter.complete == 3, 'Check succesful request' );\n  ok( counter.send == 2, 'Check succesful request' );\n  counter.error = counter.success = counter.complete = counter.send = 0;\n  $.ajaxTimeout(500);\n  $.ajax({url: url(\"data/name.php?wait=5\"), beforeSend: send, success: success, error: error, complete: function() {"}]},
{"id":"60cab5b9a751117ac78381836e92c72a09142cb9","instances":[{"path":"./1.0.4/src/ajax/ajaxTest.js","lines":[95,102],"code":"$.ajax({url: \"data/name.php\", global: false, beforeSend: send, success: success, error: error, complete: function() {\n  ok( counter.error == 0, 'Check sucesful request without globals' );\n  ok( counter.success == 1, 'Check sucesful request without globals' );\n  ok( counter.complete == 0, 'Check sucesful request without globals' );\n  ok( counter.send == 1, 'Check sucesful request without globals' );\n  counter.error = counter.success = counter.complete = counter.send = 0;\n  $.ajaxTimeout(500);\n  $.ajax({url: \"data/name.php?wait=5\", global: false, beforeSend: send, success: success, error: error, complete: function() {"},{"path":"./1.1.3/src/ajax/ajaxTest.js","lines":[137,144],"code":"$.ajax({url: url(\"data/name.php\"), global: false, beforeSend: send, success: success, error: error, complete: function() {\n  ok( counter.error == 0, 'Check sucesful request without globals' );\n  ok( counter.success == 1, 'Check sucesful request without globals' );\n  ok( counter.complete == 0, 'Check sucesful request without globals' );\n  ok( counter.send == 1, 'Check sucesful request without globals' );\n  counter.error = counter.success = counter.complete = counter.send = 0;\n  $.ajaxTimeout(500);\n  $.ajax({url: url(\"data/name.php?wait=5\"), global: false, beforeSend: send, success: success, error: error, complete: function() {"}]},
{"id":"3e6e98849332c91a2e129edeb9ad9eece53bab76","instances":[{"path":"./1.0.4/src/ajax/ajax.js","lines":[608,631],"code":"var status = jQuery.httpSuccess( xml ) && isTimeout != \"timeout\" ?\n\ts.ifModified && jQuery.httpNotModified( xml, s.url ) ? \"notmodified\" : \"success\" : \"error\";\n\n// Make sure that the request was successful or notmodified\nif ( status != \"error\" ) {\n\t// Cache Last-Modified header, if ifModified mode.\n\tvar modRes;\n\ttry {\n\t\tmodRes = xml.getResponseHeader(\"Last-Modified\");\n\t} catch(e) {} // swallow exception thrown by FF if header is not available\n\n\tif ( s.ifModified && modRes )\n\t\tjQuery.lastModified[s.url] = modRes;\n\n\t// process the data (runs the xml through httpData regardless of callback)\n\tvar data = jQuery.httpData( xml, s.dataType );\n\n\t// If a local callback was specified, fire it and pass it the data\n\tif ( s.success )\n\t\ts.success( data, status );\n\n\t// Fire the global callback\n\tif( s.global )\n\t\tjQuery.event.trigger( \"ajaxSuccess\", [xml, s] );"},{"path":"./1.1.3/src/ajax/ajax.js","lines":[658,682],"code":"status = jQuery.httpSuccess( xml ) && isTimeout != \"timeout\" ?\n\ts.ifModified && jQuery.httpNotModified( xml, s.url ) ? \"notmodified\" : \"success\" : \"error\";\n// Make sure that the request was successful or notmodified\nif ( status != \"error\" ) {\n\t// Cache Last-Modified header, if ifModified mode.\n\tvar modRes;\n\ttry {\n\t\tmodRes = xml.getResponseHeader(\"Last-Modified\");\n\t} catch(e) {} // swallow exception thrown by FF if header is not available\n\t\n\tif ( s.ifModified && modRes )\n\t\tjQuery.lastModified[s.url] = modRes;\n\t\n\t// process the data (runs the xml through httpData regardless of callback)\n\tvar data = jQuery.httpData( xml, s.dataType );\n\t\n\t// If a local callback was specified, fire it and pass it the data\n\tif ( s.success )\n\t\ts.success( data, status );\n\t\n\t// Fire the global callback\n\tif( s.global )\n\t\tjQuery.event.trigger( \"ajaxSuccess\", [xml, s] );\n} else\n\tjQuery.handleError(s, xml, status);"}]},
{"id":"30337c235f246b55771d2f465a503ff174a3edc4","instances":[{"path":"./1.0.4/src/ajax/ajax.js","lines":[684,723],"code":"// Counter for holding the number of active queries\nactive: 0,\n\n// Determines if an XMLHttpRequest was successful or not\nhttpSuccess: function(r) {\n\ttry {\n\t\treturn !r.status && location.protocol == \"file:\" ||\n\t\t\t( r.status >= 200 && r.status < 300 ) || r.status == 304 ||\n\t\t\tjQuery.browser.safari && r.status == undefined;\n\t} catch(e){}\n\n\treturn false;\n},\n\n// Determines if an XMLHttpRequest returns NotModified\nhttpNotModified: function(xml, url) {\n\ttry {\n\t\tvar xmlRes = xml.getResponseHeader(\"Last-Modified\");\n\n\t\t// Firefox always returns 200. check Last-Modified date\n\t\treturn xml.status == 304 || xmlRes == jQuery.lastModified[url] ||\n\t\t\tjQuery.browser.safari && xml.status == undefined;\n\t} catch(e){}\n\n\treturn false;\n},\n\n/* Get the data out of an XMLHttpRequest.\n * Return parsed XML if content-type header is \"xml\" and type is \"xml\" or omitted,\n * otherwise return plain text.\n * (String) data - The type of data that you're expecting back,\n * (e.g. \"xml\", \"html\", \"script\")\n */\nhttpData: function(r,type) {\n\tvar ct = r.getResponseHeader(\"content-type\");\n\tvar data = !type && ct && ct.indexOf(\"xml\") >= 0;\n\tdata = type == \"xml\" || data ? r.responseXML : r.responseText;\n\n\t// If the type is \"script\", eval it in global context\n\tif ( type == \"script\" ) {"},{"path":"./1.1.3/src/ajax/ajax.js","lines":[746,783],"code":"// Counter for holding the number of active queries\nactive: 0,\n\n// Determines if an XMLHttpRequest was successful or not\nhttpSuccess: function( r ) {\n\ttry {\n\t\treturn !r.status && location.protocol == \"file:\" ||\n\t\t\t( r.status >= 200 && r.status < 300 ) || r.status == 304 ||\n\t\t\tjQuery.browser.safari && r.status == undefined;\n\t} catch(e){}\n\treturn false;\n},\n\n// Determines if an XMLHttpRequest returns NotModified\nhttpNotModified: function( xml, url ) {\n\ttry {\n\t\tvar xmlRes = xml.getResponseHeader(\"Last-Modified\");\n\n\t\t// Firefox always returns 200. check Last-Modified date\n\t\treturn xml.status == 304 || xmlRes == jQuery.lastModified[url] ||\n\t\t\tjQuery.browser.safari && xml.status == undefined;\n\t} catch(e){}\n\treturn false;\n},\n\n/* Get the data out of an XMLHttpRequest.\n * Return parsed XML if content-type header is \"xml\" and type is \"xml\" or omitted,\n * otherwise return plain text.\n * (String) data - The type of data that you're expecting back,\n * (e.g. \"xml\", \"html\", \"script\")\n */\nhttpData: function( r, type ) {\n\tvar ct = r.getResponseHeader(\"content-type\");\n\tvar data = !type && ct && ct.indexOf(\"xml\") >= 0;\n\tdata = type == \"xml\" || data ? r.responseXML : r.responseText;\n\n\t// If the type is \"script\", eval it in global context\n\tif ( type == \"script\" )"}]},
{"id":"0ec6ffbddd177b62563e77e6ebdfae212eb9b8aa","instances":[{"path":"./1.0.4/src/ajax/ajaxTest.js","lines":[7,19],"code":"\tok( data == 'action=Test&text2=Test&radio1=on&radio2=on&check=on&=on&hidden=&foo[bar]=&name=name&=foobar&select1=&select2=3&select3=1', 'Check form serialization as query string' );\n});\n\ntest(\"param\", function() {\n\texpect(4);\n\tvar params = {foo:\"bar\", baz:42, quux:\"All your base are belong to us\"};\n\tok( $.param(params) == \"foo=bar&baz=42&quux=All%20your%20base%20are%20belong%20to%20us\", \"simple\" );\n\t\n\tparams = {someName: [1, 2, 3], regularThing: \"blah\" };\n\tok( $.param(params) == \"someName=1&someName=2&someName=3&regularThing=blah\", \"with array\" );\n\t\n\tparams = {\"foo[]\":[\"baz\", 42, \"All your base are belong to us\"]};\n\tok( $.param(params) == \"foo[]=baz&foo[]=42&foo[]=All%20your%20base%20are%20belong%20to%20us\", \"more array\" );"},{"path":"./1.1.3/src/ajax/ajaxTest.js","lines":[9,21],"code":"\tok( data == 'action=Test&text2=Test&radio1=on&radio2=on&check=on&=on&hidden=&foo%5Bbar%5D=&name=name&=foobar&select1=&select2=3&select3=1', 'Check form serialization as query string' );\n});\n\ntest(\"param\", function() {\n\texpect(4);\n\tvar params = {foo:\"bar\", baz:42, quux:\"All your base are belong to us\"};\n\tok( $.param(params) == \"foo=bar&baz=42&quux=All%20your%20base%20are%20belong%20to%20us\", \"simple\" );\n\t\n\tparams = {someName: [1, 2, 3], regularThing: \"blah\" };\n\tok( $.param(params) == \"someName=1&someName=2&someName=3&regularThing=blah\", \"with array\" );\n\t\n\tparams = {\"foo[]\":[\"baz\", 42, \"All your base are belong to us\"]};\n\tok( $.param(params) == \"foo%5B%5D=baz&foo%5B%5D=42&foo%5B%5D=All%20your%20base%20are%20belong%20to%20us\", \"more array\" );"}]},
{"id":"5e1101c87f7fde799481bb6bc9b90e125885a110","instances":[{"path":"./1.0.4/src/ajax/ajaxTest.js","lines":[153,165],"code":"\t$.getJSON(\"data/json.php\", {json: \"array\"}, function(json) {\n\t  ok( json[0].name == 'John', 'Check JSON: first, name' );\n\t  ok( json[0].age == 21, 'Check JSON: first, age' );\n\t  ok( json[1].name == 'Peter', 'Check JSON: second, name' );\n\t  ok( json[1].age == 25, 'Check JSON: second, age' );\n\t  start();\n\t});\n});\n\ntest(\"$.getJSON(String, Hash, Function) - JSON object\", function() {\n\texpect(2);\n\tstop();\n\t$.getJSON(\"data/json.php\", function(json) {"},{"path":"./1.1.3/src/ajax/ajaxTest.js","lines":[196,208],"code":"\t$.getJSON(url(\"data/json.php\"), {json: \"array\"}, function(json) {\n\t  ok( json[0].name == 'John', 'Check JSON: first, name' );\n\t  ok( json[0].age == 21, 'Check JSON: first, age' );\n\t  ok( json[1].name == 'Peter', 'Check JSON: second, name' );\n\t  ok( json[1].age == 25, 'Check JSON: second, age' );\n\t  start();\n\t});\n});\n\ntest(\"$.getJSON(String, Hash, Function) - JSON object\", function() {\n\texpect(2);\n\tstop();\n\t$.getJSON(url(\"data/json.php\"), function(json) {"}]},
{"id":"33c8b4f5c5d16d0787386f9ca5e0842e36de9d54","instances":[{"path":"./1.0.4/src/ajax/ajaxTest.js","lines":[175,206],"code":"\t$.post(\"data/name.php\", {xml: \"5-2\"}, function(xml){\n\t  $('math', xml).each(function() {\n\t\t    ok( $('calculation', this).text() == '5-2', 'Check for XML' );\n\t\t    ok( $('result', this).text() == '3', 'Check for XML' );\n\t\t });\n\t  start();\n\t});\n});\n\ntest(\"$.ajaxTimeout(Number) - with global timeout\", function() {\n\tstop();\n\tvar passed = 0;\n\tvar timeout;\n\t$.ajaxTimeout(1000);\n\tvar pass = function() {\n\t\tpassed++;\n\t\tif(passed == 2) {\n\t\t\tok( true, 'Check local and global callbacks after timeout' );\n\t\t\tclearTimeout(timeout);\n\t     $('#main').unbind(\"ajaxError\");\n\t\t\tstart();\n\t\t}\n\t};\n\tvar fail = function() {\n\t\tok( false, 'Check for timeout failed' );\n\t\tstart();\n\t};\n\ttimeout = setTimeout(fail, 1500);\n\t$('#main').ajaxError(pass);\n\t$.ajax({\n\t  type: \"GET\",\n\t  url: \"data/name.php?wait=5\","},{"path":"./1.1.3/src/ajax/ajaxTest.js","lines":[218,249],"code":"\t$.post(url(\"data/name.php\"), {xml: \"5-2\"}, function(xml){\n\t  $('math', xml).each(function() {\n\t\t    ok( $('calculation', this).text() == '5-2', 'Check for XML' );\n\t\t    ok( $('result', this).text() == '3', 'Check for XML' );\n\t\t });\n\t  start();\n\t});\n});\n\ntest(\"$.ajaxTimeout(Number) - with global timeout\", function() {\n\tstop();\n\tvar passed = 0;\n\tvar timeout;\n\t$.ajaxTimeout(1000);\n\tvar pass = function() {\n\t\tpassed++;\n\t\tif(passed == 2) {\n\t\t\tok( true, 'Check local and global callbacks after timeout' );\n\t\t\tclearTimeout(timeout);\n\t     $('#main').unbind(\"ajaxError\");\n\t\t\tstart();\n\t\t}\n\t};\n\tvar fail = function() {\n\t\tok( false, 'Check for timeout failed' );\n\t\tstart();\n\t};\n\ttimeout = setTimeout(fail, 1500);\n\t$('#main').ajaxError(pass);\n\t$.ajax({\n\t  type: \"GET\",\n\t  url: url(\"data/name.php?wait=5\"),"}]},
{"id":"b4a4e01fd273ba7c9efbabbd86e0f63265995225","instances":[{"path":"./1.0.4/src/fx/fx.js","lines":[288,359],"code":"\t/**\n\t * A function for making your own, custom, animations. The key aspect of\n\t * this function is the object of style properties that will be animated,\n\t * and to what end. Each key within the object represents a style property\n\t * that will also be animated (for example: \"height\", \"top\", or \"opacity\").\n\t *\n\t * The value associated with the key represents to what end the property\n\t * will be animated. If a number is provided as the value, then the style\n\t * property will be transitioned from its current state to that new number.\n\t * Oterwise if the string \"hide\", \"show\", or \"toggle\" is provided, a default\n\t * animation will be constructed for that property.\n\t *\n\t * @example $(\"p\").animate({\n\t *   height: 'toggle', opacity: 'toggle'\n\t * }, \"slow\");\n\t *\n\t * @example $(\"p\").animate({\n\t *   left: 50, opacity: 'show'\n\t * }, 500);\n\t *\n\t * @name animate\n\t * @type jQuery\n\t * @param Hash params A set of style attributes that you wish to animate, and to what end.\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param Function callback A function to be executed whenever the animation completes.\n\t * @cat Effects/Animations\n\t */\n\tanimate: function(prop,speed,callback) {\n\t\treturn this.queue(function(){\n\t\t\n\t\t\tthis.curAnim = jQuery.extend({}, prop);\n\t\t\t\n\t\t\tfor ( var p in prop ) {\n\t\t\t\tvar e = new jQuery.fx( this, jQuery.speed(speed,callback), p );\n\t\t\t\tif ( prop[p].constructor == Number )\n\t\t\t\t\te.custom( e.cur(), prop[p] );\n\t\t\t\telse\n\t\t\t\t\te[ prop[p] ]( prop );\n\t\t\t}\n\t\t\t\n\t\t});\n\t},\n\t\n\t/**\n\t *\n\t * @private\n\t */\n\tqueue: function(type,fn){\n\t\tif ( !fn ) {\n\t\t\tfn = type;\n\t\t\ttype = \"fx\";\n\t\t}\n\t\n\t\treturn this.each(function(){\n\t\t\tif ( !this.queue )\n\t\t\t\tthis.queue = {};\n\t\n\t\t\tif ( !this.queue[type] )\n\t\t\t\tthis.queue[type] = [];\n\t\n\t\t\tthis.queue[type].push( fn );\n\t\t\n\t\t\tif ( this.queue[type].length == 1 )\n\t\t\t\tfn.apply(this);\n\t\t});\n\t}\n\n});\n\njQuery.extend({\n\t\n\tspeed: function(s,o) {"},{"path":"./1.1.3/src/fx/fx.js","lines":[276,362],"code":"\t/**\n\t * A function for making your own, custom animations. The key aspect of\n\t * this function is the object of style properties that will be animated,\n\t * and to what end. Each key within the object represents a style property\n\t * that will also be animated (for example: \"height\", \"top\", or \"opacity\").\n\t *\n\t * Note that properties should be specified using camel case\n\t * eg. marginLeft instead of margin-left.\n\t *\n\t * The value associated with the key represents to what end the property\n\t * will be animated. If a number is provided as the value, then the style\n\t * property will be transitioned from its current state to that new number.\n\t * Otherwise if the string \"hide\", \"show\", or \"toggle\" is provided, a default\n\t * animation will be constructed for that property.\n\t *\n\t * @example $(\"p\").animate({\n\t *   height: 'toggle', opacity: 'toggle'\n\t * }, \"slow\");\n\t *\n\t * @example $(\"p\").animate({\n\t *   left: 50, opacity: 'show'\n\t * }, 500);\n\t *\n\t * @example $(\"p\").animate({\n\t *   opacity: 'show'\n\t * }, \"slow\", \"easein\");\n\t * @desc An example of using an 'easing' function to provide a different style of animation. This will only work if you have a plugin that provides this easing function (Only \"swing\" and \"linear\" are provided by default, with jQuery).\n\t *\n\t * @name animate\n\t * @type jQuery\n\t * @param Hash params A set of style attributes that you wish to animate, and to what end.\n\t * @param String|Number speed (optional) A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param String easing (optional) The name of the easing effect that you want to use (e.g. \"swing\" or \"linear\"). Defaults to \"swing\".\n\t * @param Function callback (optional) A function to be executed whenever the animation completes.\n\t * @cat Effects\n\t */\n\tanimate: function( prop, speed, easing, callback ) {\n\t\treturn this.queue(function(){\n\t\t\tvar hidden = jQuery(this).is(\":hidden\"),\n\t\t\t\topt = jQuery.speed(speed, easing, callback),\n\t\t\t\tself = this;\n\t\t\t\n\t\t\tfor ( var p in prop )\n\t\t\t\tif ( prop[p] == \"hide\" && hidden || prop[p] == \"show\" && !hidden )\n\t\t\t\t\treturn jQuery.isFunction(opt.complete) && opt.complete.apply(this);\n\n\t\t\tthis.curAnim = jQuery.extend({}, prop);\n\t\t\t\n\t\t\tjQuery.each( prop, function(name, val){\n\t\t\t\tvar e = new jQuery.fx( self, opt, name );\n\t\t\t\tif ( val.constructor == Number )\n\t\t\t\t\te.custom( e.cur(), val );\n\t\t\t\telse\n\t\t\t\t\te[ val == \"toggle\" ? hidden ? \"show\" : \"hide\" : val ]( prop );\n\t\t\t});\n\t\t});\n\t},\n\t\n\t/**\n\t *\n\t * @private\n\t */\n\tqueue: function(type,fn){\n\t\tif ( !fn ) {\n\t\t\tfn = type;\n\t\t\ttype = \"fx\";\n\t\t}\n\t\n\t\treturn this.each(function(){\n\t\t\tif ( !this.queue )\n\t\t\t\tthis.queue = {};\n\t\n\t\t\tif ( !this.queue[type] )\n\t\t\t\tthis.queue[type] = [];\n\t\n\t\t\tthis.queue[type].push( fn );\n\t\t\n\t\t\tif ( this.queue[type].length == 1 )\n\t\t\t\tfn.apply(this);\n\t\t});\n\t}\n\n});\n\njQuery.extend({\n\t\n\tspeed: function(speed, easing, fn) {"}]},
{"id":"6386bb5ae1da1ed54925e9652421ff08dd275067","instances":[{"path":"./1.0.4/src/fx/fx.js","lines":[376,401],"code":"\treturn o;\n},\n\nqueue: {},\n\ndequeue: function(elem,type){\n\ttype = type || \"fx\";\n\n\tif ( elem.queue && elem.queue[type] ) {\n\t\t// Remove self\n\t\telem.queue[type].shift();\n\n\t\t// Get next function\n\t\tvar f = elem.queue[type][0];\n\t\n\t\tif ( f ) f.apply( elem );\n\t}\n},\n\n/*\n * I originally wrote fx() as a clone of moo.fx and in the process\n * of making it small in size the code became illegible to sane\n * people. You've been warned.\n */\n\nfx: function( elem, options, prop ){"},{"path":"./1.1.3/src/fx/fx.js","lines":[390,410],"code":"\t\treturn ((-Math.cos(p*Math.PI)/2) + 0.5) * diff + firstNum;\n\t}\n},\n\nqueue: {},\n\ndequeue: function(elem,type){\n\ttype = type || \"fx\";\n\n\tif ( elem.queue && elem.queue[type] ) {\n\t\t// Remove self\n\t\telem.queue[type].shift();\n\n\t\t// Get next function\n\t\tvar f = elem.queue[type][0];\n\t\n\t\tif ( f ) f.apply( elem );\n\t}\n},\n\ntimers: [],"}]},
{"id":"0229f9ae282538c01901acfad98ee7dccbbfccd2","instances":[{"path":"./1.0.4/src/jquery/coreTest.js","lines":[1,14],"code":"module(\"core\");\r\n\r\ntest(\"Basic requirements\", function() {\r\n\texpect(7);\r\n\tok( Array.prototype.push, \"Array.push()\" );\r\n\tok( Function.prototype.apply, \"Function.apply()\" );\r\n\tok( document.getElementById, \"getElementById\" );\r\n\tok( document.getElementsByTagName, \"getElementsByTagName\" );\r\n\tok( RegExp, \"RegExp\" );\r\n\tok( jQuery, \"jQuery\" );\r\n\tok( $, \"$()\" );\r\n});\r\n\r\ntest(\"length\", function() {\r"},{"path":"./1.1.3/src/jquery/coreTest.js","lines":[1,14],"code":"module(\"core\");\n\ntest(\"Basic requirements\", function() {\n\texpect(7);\n\tok( Array.prototype.push, \"Array.push()\" );\n\tok( Function.prototype.apply, \"Function.apply()\" );\n\tok( document.getElementById, \"getElementById\" );\n\tok( document.getElementsByTagName, \"getElementsByTagName\" );\n\tok( RegExp, \"RegExp\" );\n\tok( jQuery, \"jQuery\" );\n\tok( $, \"$()\" );\n});\n\ntest(\"$()\", function() {"}]},
{"id":"9a06534c6362abe11b2931f5a7610552c6bd2ed2","instances":[{"path":"./1.0.4/src/jquery/coreTest.js","lines":[30,55],"code":"test(\"each(Function)\", function() {\r\n\texpect(1);\r\n\tvar div = $(\"div\");\r\n\tdiv.each(function(){this.foo = 'zoo';});\r\n\tvar pass = true;\r\n\tfor ( var i = 0; i < div.size(); i++ ) {\r\n\t  if ( div.get(i).foo != \"zoo\" ) pass = false;\r\n\t}\r\n\tok( pass, \"Execute a function, Relative\" );\r\n});\r\n\r\ntest(\"index(Object)\", function() {\r\n\texpect(8);\r\n\tok( $([window, document]).index(window) == 0, \"Check for index of elements\" );\r\n\tok( $([window, document]).index(document) == 1, \"Check for index of elements\" );\r\n\tvar inputElements = $('#radio1,#radio2,#check1,#check2');\r\n\tok( inputElements.index(document.getElementById('radio1')) == 0, \"Check for index of elements\" );\r\n\tok( inputElements.index(document.getElementById('radio2')) == 1, \"Check for index of elements\" );\r\n\tok( inputElements.index(document.getElementById('check1')) == 2, \"Check for index of elements\" );\r\n\tok( inputElements.index(document.getElementById('check2')) == 3, \"Check for index of elements\" );\r\n\tok( inputElements.index(window) == -1, \"Check for not found index\" );\r\n\tok( inputElements.index(document) == -1, \"Check for not found index\" );\r\n});\r\n\r\ntest(\"attr(String)\", function() {\r\n\texpect(12);\r"},{"path":"./1.1.3/src/jquery/coreTest.js","lines":[157,182],"code":"test(\"each(Function)\", function() {\n\texpect(1);\n\tvar div = $(\"div\");\n\tdiv.each(function(){this.foo = 'zoo';});\n\tvar pass = true;\n\tfor ( var i = 0; i < div.size(); i++ ) {\n\t  if ( div.get(i).foo != \"zoo\" ) pass = false;\n\t}\n\tok( pass, \"Execute a function, Relative\" );\n});\n\ntest(\"index(Object)\", function() {\n\texpect(8);\n\tok( $([window, document]).index(window) == 0, \"Check for index of elements\" );\n\tok( $([window, document]).index(document) == 1, \"Check for index of elements\" );\n\tvar inputElements = $('#radio1,#radio2,#check1,#check2');\n\tok( inputElements.index(document.getElementById('radio1')) == 0, \"Check for index of elements\" );\n\tok( inputElements.index(document.getElementById('radio2')) == 1, \"Check for index of elements\" );\n\tok( inputElements.index(document.getElementById('check1')) == 2, \"Check for index of elements\" );\n\tok( inputElements.index(document.getElementById('check2')) == 3, \"Check for index of elements\" );\n\tok( inputElements.index(window) == -1, \"Check for not found index\" );\n\tok( inputElements.index(document) == -1, \"Check for not found index\" );\n});\n\ntest(\"attr(String)\", function() {\n\texpect(13);"}]},
{"id":"4aabccdb5674638713355573b8554d30e91330ea","instances":[{"path":"./1.0.4/src/jquery/coreTest.js","lines":[70,80],"code":"test(\"attr(Hash)\", function() {\r\n\texpect(1);\r\n\tvar pass = true;\r\n\t$(\"div\").attr({foo: 'baz', zoo: 'ping'}).each(function(){\r\n\t  if ( this.getAttribute('foo') != \"baz\" && this.getAttribute('zoo') != \"ping\" ) pass = false;\r\n\t});\r\n\tok( pass, \"Set Multiple Attributes\" );\r\n});\r\n\r\ntest(\"attr(String, Object)\", function() {\r\n\texpect(6);\r"},{"path":"./1.1.3/src/jquery/coreTest.js","lines":[218,228],"code":"test(\"attr(Hash)\", function() {\n\texpect(1);\n\tvar pass = true;\n\t$(\"div\").attr({foo: 'baz', zoo: 'ping'}).each(function(){\n\t  if ( this.getAttribute('foo') != \"baz\" && this.getAttribute('zoo') != \"ping\" ) pass = false;\n\t});\n\tok( pass, \"Set Multiple Attributes\" );\n});\n\ntest(\"attr(String, Object)\", function() {\n\texpect(8);"}]},
{"id":"f1fae3d2a4bc04cbc2f4b4d2a369994039e61ce9","instances":[{"path":"./1.0.4/src/jquery/coreTest.js","lines":[101,116],"code":"test(\"attr(String, Object)x\", function() {\r\n\texpect(2);\r\n\tstop();\r\n\t$.get('data/dashboard.xml', function(xml) { \r\n\t  var titles = [];\r\n\t  $('tab', xml).each(function() {\r\n\t    titles.push($(this).attr('title'));\r\n\t  });\r\n\t  ok( titles[0] == 'Location', 'attr() in XML context: Check first title' );\r\n\t  ok( titles[1] == 'Users', 'attr() in XML context: Check second title' );\r\n\t  start();\r\n\t});\r\n});\r\n\r\ntest(\"css(String|Hash)\", function() {\r\n\texpect(8);\r"},{"path":"./1.1.3/src/jquery/coreTest.js","lines":[254,270],"code":"\ttest(\"attr(String, Object)x\", function() {\n\t\texpect(2);\n\t\tstop();\n\t\t$.get('data/dashboard.xml', function(xml) { \n\t  \tvar titles = [];\n\t  \t$('tab', xml).each(function() {\n\t    \ttitles.push($(this).attr('title'));\n\t  \t});\n\t  \tok( titles[0] == 'Location', 'attr() in XML context: Check first title' );\n\t  \tok( titles[1] == 'Users', 'attr() in XML context: Check second title' );\n\t  \tstart();\n\t\t});\n\t});\n}\n\ntest(\"css(String|Hash)\", function() {\n\texpect(19);"}]},
{"id":"b2fb346fae7fd25efed1e2c99939dc86c031da19","instances":[{"path":"./1.0.4/src/jquery/coreTest.js","lines":[250,261],"code":"\tok( 'Yahoo' == $('#foo').find('.blogTest').text(), 'Check for find' );\r\n});\r\n\r\ntest(\"clone()\", function() {\r\n\texpect(3);\r\n\tok( 'This is a normal link: Yahoo' == $('#en').text(), 'Assert text for #en' );\r\n\tvar clone = $('#yahoo').clone();\r\n\tok( 'Try them out:Yahoo' == $('#first').append(clone).text(), 'Check for clone' );\r\n\tok( 'This is a normal link: Yahoo' == $('#en').text(), 'Reassert text for #en' );\r\n});\r\n\r\ntest(\"filter()\", function() {\r"},{"path":"./1.1.3/src/jquery/coreTest.js","lines":[610,621],"code":"\tok( 'Yahoo' == $('#foo').find('.blogTest').text(), 'Check for find' );\n});\n\ntest(\"clone()\", function() {\n\texpect(3);\n\tok( 'This is a normal link: Yahoo' == $('#en').text(), 'Assert text for #en' );\n\tvar clone = $('#yahoo').clone();\n\tok( 'Try them out:Yahoo' == $('#first').append(clone).text(), 'Check for clone' );\n\tok( 'This is a normal link: Yahoo' == $('#en').text(), 'Reassert text for #en' );\n});\n\ntest(\"is(String)\", function() {"}]},
{"id":"65ff48b2907cbec6c0308a116ab4a45879a1093a","instances":[{"path":"./1.0.4/src/jquery/coreTest.js","lines":[297,324],"code":"test(\"$.extend(Object, Object)\", function() {\r\n\texpect(2);\r\n\tvar settings = { xnumber1: 5, xnumber2: 7, xstring1: \"peter\", xstring2: \"pan\" },\r\n\t\toptions =     { xnumber2: 1, xstring2: \"x\", xxx: \"newstring\" },\r\n\t\toptionsCopy = { xnumber2: 1, xstring2: \"x\", xxx: \"newstring\" },\r\n\t\tmerged = { xnumber1: 5, xnumber2: 1, xstring1: \"peter\", xstring2: \"x\", xxx: \"newstring\" };\r\n\tjQuery.extend(settings, options);\r\n\tisSet( settings, merged, \"Check if extended: settings must be extended\" );\r\n\tisSet ( options, optionsCopy, \"Check if not modified: options must not be modified\" );\r\n});\r\n\r\ntest(\"$.extend(Object, Object, Object, Object)\", function() {\r\n\texpect(4);\r\n\tvar defaults = { xnumber1: 5, xnumber2: 7, xstring1: \"peter\", xstring2: \"pan\" },\r\n\t\tdefaultsCopy = { xnumber1: 5, xnumber2: 7, xstring1: \"peter\", xstring2: \"pan\" },\r\n\t\toptions1 =     { xnumber2: 1, xstring2: \"x\" },\r\n\t\toptions1Copy = { xnumber2: 1, xstring2: \"x\" },\r\n\t\toptions2 =     { xstring2: \"xx\", xxx: \"newstringx\" },\r\n\t\toptions2Copy = { xstring2: \"xx\", xxx: \"newstringx\" },\r\n\t\tmerged = { xnumber1: 5, xnumber2: 1, xstring1: \"peter\", xstring2: \"xx\", xxx: \"newstringx\" };\r\n\tvar settings = jQuery.extend({}, defaults, options1, options2);\r\n\tisSet( settings, merged, \"Check if extended: settings must be extended\" );\r\n\tisSet ( defaults, defaultsCopy, \"Check if not modified: options1 must not be modified\" );\r\n\tisSet ( options1, options1Copy, \"Check if not modified: options1 must not be modified\" );\r\n\tisSet ( options2, options2Copy, \"Check if not modified: options2 must not be modified\" );\r\n});\r\n\r\ntest(\"expressions - element\", function() {\r"},{"path":"./1.1.3/src/jquery/coreTest.js","lines":[653,680],"code":"test(\"$.extend(Object, Object)\", function() {\n\texpect(2);\n\tvar settings = { xnumber1: 5, xnumber2: 7, xstring1: \"peter\", xstring2: \"pan\" },\n\t\toptions =     { xnumber2: 1, xstring2: \"x\", xxx: \"newstring\" },\n\t\toptionsCopy = { xnumber2: 1, xstring2: \"x\", xxx: \"newstring\" },\n\t\tmerged = { xnumber1: 5, xnumber2: 1, xstring1: \"peter\", xstring2: \"x\", xxx: \"newstring\" };\n\tjQuery.extend(settings, options);\n\tisObj( settings, merged, \"Check if extended: settings must be extended\" );\n\tisObj( options, optionsCopy, \"Check if not modified: options must not be modified\" );\n});\n\ntest(\"$.extend(Object, Object, Object, Object)\", function() {\n\texpect(4);\n\tvar defaults = { xnumber1: 5, xnumber2: 7, xstring1: \"peter\", xstring2: \"pan\" },\n\t\tdefaultsCopy = { xnumber1: 5, xnumber2: 7, xstring1: \"peter\", xstring2: \"pan\" },\n\t\toptions1 =     { xnumber2: 1, xstring2: \"x\" },\n\t\toptions1Copy = { xnumber2: 1, xstring2: \"x\" },\n\t\toptions2 =     { xstring2: \"xx\", xxx: \"newstringx\" },\n\t\toptions2Copy = { xstring2: \"xx\", xxx: \"newstringx\" },\n\t\tmerged = { xnumber1: 5, xnumber2: 1, xstring1: \"peter\", xstring2: \"xx\", xxx: \"newstringx\" };\n\tvar settings = jQuery.extend({}, defaults, options1, options2);\n\tisObj( settings, merged, \"Check if extended: settings must be extended\" );\n\tisObj( defaults, defaultsCopy, \"Check if not modified: options1 must not be modified\" );\n\tisObj( options1, options1Copy, \"Check if not modified: options1 must not be modified\" );\n\tisObj( options2, options2Copy, \"Check if not modified: options2 must not be modified\" );\n});\n\ntest(\"val()\", function() {"}]},
{"id":"f0840cc724275d8e3ae626b16f0b03327c4e8582","instances":[{"path":"./1.0.4/src/jquery/coreTest.js","lines":[401,407],"code":"test(\"expressions - pseudo (:) selctors\", function() {\r\n\texpect(30);\r\n\tt( \"First Child\", \"p:first-child\", [\"firstp\",\"sndp\"] );\r\n\tt( \"Last Child\", \"p:last-child\", [\"sap\"] );\r\n\tt( \"Only Child\", \"a:only-child\", [\"simon1\",\"anchor1\",\"yahoo\",\"anchor2\"] );\r\n\tt( \"Empty\", \"ul:empty\", [\"firstUL\"] );\r\n\tt( \"Enabled UI Element\", \"input:enabled\", [\"text1\",\"radio1\",\"radio2\",\"check1\",\"check2\",\"hidden1\",\"hidden2\",\"name\"] );\r"},{"path":"./1.1.3/src/selector/selectorTest.js","lines":[149,155],"code":"test(\"pseudo (:) selectors\", function() {\n\texpect(30);\n\tt( \"First Child\", \"p:first-child\", [\"firstp\",\"sndp\"] );\n\tt( \"Last Child\", \"p:last-child\", [\"sap\"] );\n\tt( \"Only Child\", \"a:only-child\", [\"simon1\",\"anchor1\",\"yahoo\",\"anchor2\"] );\n\tt( \"Empty\", \"ul:empty\", [\"firstUL\"] );\n\tt( \"Enabled UI Element\", \"input:enabled\", [\"text1\",\"radio1\",\"radio2\",\"check1\",\"check2\",\"hidden1\",\"hidden2\",\"name\",\"length\",\"idTest\"] );"}]},
{"id":"4767d09479585168d46c0a9d1345cb824ec393d4","instances":[{"path":"./1.0.4/src/jquery/coreTest.js","lines":[455,478],"code":"test(\"val()\", function() {\r\n\texpect(2);\r\n\tok( $(\"#text1\").val() == \"Test\", \"Check for value of input element\" );\r\n\tok( !$(\"#text1\").val() == \"\", \"Check for value of input element\" );\r\n});\r\n\r\ntest(\"val(String)\", function() {\r\n\texpect(2);\r\n\tdocument.getElementById('text1').value = \"bla\";\r\n\tok( $(\"#text1\").val() == \"bla\", \"Check for modified value of input element\" );\r\n\t$(\"#text1\").val('test');\r\n\tok ( document.getElementById('text1').value == \"test\", \"Check for modified (via val(String)) value of input element\" );\r\n});\r\n\r\ntest(\"html(String)\", function() {\r\n\texpect(1);\r\n\tvar div = $(\"div\");\r\n\tdiv.html(\"<b>test</b>\");\r\n\tvar pass = true;\r\n\tfor ( var i = 0; i < div.size(); i++ ) {\r\n\t  if ( div.get(i).childNodes.length == 0 ) pass = false;\r\n\t}\r\n\tok( pass, \"Set HTML\" );\r\n});\r"},{"path":"./1.1.3/src/jquery/coreTest.js","lines":[680,702],"code":"test(\"val()\", function() {\n\texpect(2);\n\tok( $(\"#text1\").val() == \"Test\", \"Check for value of input element\" );\n\tok( !$(\"#text1\").val() == \"\", \"Check for value of input element\" );\n});\n\ntest(\"val(String)\", function() {\n\texpect(2);\n\tdocument.getElementById('text1').value = \"bla\";\n\tok( $(\"#text1\").val() == \"bla\", \"Check for modified value of input element\" );\n\t$(\"#text1\").val('test');\n\tok ( document.getElementById('text1').value == \"test\", \"Check for modified (via val(String)) value of input element\" );\n});\n\ntest(\"html(String)\", function() {\n\texpect(1);\n\tvar div = $(\"div\");\n\tdiv.html(\"<b>test</b>\");\n\tvar pass = true;\n\tfor ( var i = 0; i < div.size(); i++ ) {\n\t  if ( div.get(i).childNodes.length == 0 ) pass = false;\n\t}\n\tok( pass, \"Set HTML\" );"}]},
{"id":"16e6da46b0fede38694602be57eeda53aa5e1c9d","instances":[{"path":"./1.0.4/src/jquery/jquery.js","lines":[1245,1261],"code":"/**\r\n * Swap in/out style options.\r\n * @private\r\n */\r\nswap: function(e,o,f) {\r\n\tfor ( var i in o ) {\r\n\t\te.style[\"old\"+i] = e.style[i];\r\n\t\te.style[i] = o[i];\r\n\t}\r\n\tf.apply( e, [] );\r\n\tfor ( var i in o )\r\n\t\te.style[i] = e.style[\"old\"+i];\r\n},\r\n\r\ncss: function(e,p) {\r\n\tif ( p == \"height\" || p == \"width\" ) {\r\n\t\tvar old = {}, oHeight, oWidth, d = [\"Top\",\"Bottom\",\"Right\",\"Left\"];\r"},{"path":"./1.1.3/src/jquery/jquery.js","lines":[1383,1399],"code":"/**\n * Swap in/out style options.\n * @private\n */\nswap: function(e,o,f) {\n\tfor ( var i in o ) {\n\t\te.style[\"old\"+i] = e.style[i];\n\t\te.style[i] = o[i];\n\t}\n\tf.apply( e, [] );\n\tfor ( var i in o )\n\t\te.style[i] = e.style[\"old\"+i];\n},\n\ncss: function(e,p) {\n\tif ( p == \"height\" || p == \"width\" ) {\n\t\tvar old = {}, oHeight, oWidth, d = [\"Top\",\"Bottom\",\"Right\",\"Left\"];"}]},
{"id":"1bb47b944ddf9a2e8944f84e6dfbfe479ae30e9f","instances":[{"path":"./1.0.4/src/jquery/jquery.js","lines":[1269,1279],"code":"if (jQuery.css(e,\"display\") != \"none\") {\r\n\toHeight = e.offsetHeight;\r\n\toWidth = e.offsetWidth;\r\n} else {\r\n\te = jQuery(e.cloneNode(true))\r\n\t\t.find(\":radio\").removeAttr(\"checked\").end()\r\n\t\t.css({\r\n\t\t\tvisibility: \"hidden\", position: \"absolute\", display: \"block\", right: \"0\", left: \"0\"\r\n\t\t}).appendTo(e.parentNode)[0];\r\n\r\n\tvar parPos = jQuery.css(e.parentNode,\"position\");\r"},{"path":"./1.1.3/src/jquery/jquery.js","lines":[1407,1417],"code":"if ( jQuery(e).is(':visible') ) {\n\toHeight = e.offsetHeight;\n\toWidth = e.offsetWidth;\n} else {\n\te = jQuery(e.cloneNode(true))\n\t\t.find(\":radio\").removeAttr(\"checked\").end()\n\t\t.css({\n\t\t\tvisibility: \"hidden\", position: \"absolute\", display: \"block\", right: \"0\", left: \"0\"\n\t\t}).appendTo(e.parentNode)[0];\n\n\tvar parPos = jQuery.css(e.parentNode,\"position\") || \"static\";"}]},
{"id":"38adfe18eedf6623aeab242dea5a4545374a7896","instances":[{"path":"./1.0.4/src/jquery/jquery.js","lines":[1315,1340],"code":"\t\t\tprop = \"float\";\r\n\r\n\t\tprop = prop.replace(/([A-Z])/g,\"-$1\").toLowerCase();\r\n\t\tvar cur = document.defaultView.getComputedStyle(elem, null);\r\n\r\n\t\tif ( cur )\r\n\t\t\tret = cur.getPropertyValue(prop);\r\n\t\telse if ( prop == 'display' )\r\n\t\t\tret = 'none';\r\n\t\telse\r\n\t\t\tjQuery.swap(elem, { display: 'block' }, function() {\r\n\t\t\t    var c = document.defaultView.getComputedStyle(this, '');\r\n\t\t\t    ret = c && c.getPropertyValue(prop) || '';\r\n\t\t\t});\r\n\r\n\t} else if (elem.currentStyle) {\r\n\r\n\t\tvar newProp = prop.replace(/\\-(\\w)/g,function(m,c){return c.toUpperCase();});\r\n\t\tret = elem.currentStyle[prop] || elem.currentStyle[newProp];\r\n\t\t\r\n\t}\r\n\r\n\treturn ret;\r\n},\r\n\r\nclean: function(a) {\r"},{"path":"./1.1.3/src/jquery/jquery.js","lines":[1454,1477],"code":"\t\t\tprop = \"float\";\n\n\t\tprop = prop.replace(/([A-Z])/g,\"-$1\").toLowerCase();\n\t\tvar cur = document.defaultView.getComputedStyle(elem, null);\n\n\t\tif ( cur )\n\t\t\tret = cur.getPropertyValue(prop);\n\t\telse if ( prop == \"display\" )\n\t\t\tret = \"none\";\n\t\telse\n\t\t\tjQuery.swap(elem, { display: \"block\" }, function() {\n\t\t\t    var c = document.defaultView.getComputedStyle(this, \"\");\n\t\t\t    ret = c && c.getPropertyValue(prop) || \"\";\n\t\t\t});\n\n\t} else if (elem.currentStyle) {\n\t\tvar newProp = prop.replace(/\\-(\\w)/g,function(m,c){return c.toUpperCase();});\n\t\tret = elem.currentStyle[prop] || elem.currentStyle[newProp];\n\t}\n\n\treturn ret;\n},\n\nclean: function(a, doc) {"}]}]
