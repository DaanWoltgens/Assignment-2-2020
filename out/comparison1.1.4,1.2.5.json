[{"id":"62c93fcaea6e8898a4b412cac01c41cf24aacd97","instances":[{"path":"./1.1.4/src/ajax/ajax.js","lines":[796,817],"code":"param: function( a ) {\n\tvar s = [];\n\n\t// If an array was passed in, assume that it is an array\n\t// of form elements\n\tif ( a.constructor == Array || a.jquery )\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function(){\n\t\t\ts.push( encodeURIComponent(this.name) + \"=\" + encodeURIComponent( this.value ) );\n\t\t});\n\n\t// Otherwise, assume that it's an object of key/value pairs\n\telse\n\t\t// Serialize the key/values\n\t\tfor ( var j in a )\n\t\t\t// If the value is an array then the key names need to be repeated\n\t\t\tif ( a[j] && a[j].constructor == Array )\n\t\t\t\tjQuery.each( a[j], function(){\n\t\t\t\t\ts.push( encodeURIComponent(j) + \"=\" + encodeURIComponent( this ) );\n\t\t\t\t});\n\t\t\telse\n\t\t\t\ts.push( encodeURIComponent(j) + \"=\" + encodeURIComponent( a[j] ) );"},{"path":"./1.2.5/src/ajax.js","lines":[488,509],"code":"param: function( a ) {\n\tvar s = [];\n\n\t// If an array was passed in, assume that it is an array\n\t// of form elements\n\tif ( a.constructor == Array || a.jquery )\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function(){\n\t\t\ts.push( encodeURIComponent(this.name) + \"=\" + encodeURIComponent( this.value ) );\n\t\t});\n\n\t// Otherwise, assume that it's an object of key/value pairs\n\telse\n\t\t// Serialize the key/values\n\t\tfor ( var j in a )\n\t\t\t// If the value is an array then the key names need to be repeated\n\t\t\tif ( a[j] && a[j].constructor == Array )\n\t\t\t\tjQuery.each( a[j], function(){\n\t\t\t\t\ts.push( encodeURIComponent(j) + \"=\" + encodeURIComponent( this ) );\n\t\t\t\t});\n\t\t\telse\n\t\t\t\ts.push( encodeURIComponent(j) + \"=\" + encodeURIComponent( jQuery.isFunction(a[j]) ? a[j]() : a[j] ) );"}]},
{"id":"8fb4dd304a0326dc325b175ef7ec680ac261b9ca","instances":[{"path":"./1.1.4/src/ajax/ajaxTest.js","lines":[188,198],"code":"test(\"test global handlers - success\", function() {\n\texpect( isLocal ? 4 : 8 );\n\tstop();\n\t\n\tvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\t\tsuccess = function() { counter.success++ },\n\t\terror = function() { counter.error++ },\n\t\tcomplete = function() { counter.complete++ },\n\t\tsend = function() { counter.send++ };\n\n\t$('#foo').ajaxStart(complete).ajaxStop(complete).ajaxSend(send).ajaxComplete(complete).ajaxError(error).ajaxSuccess(success);"},{"path":"./1.1.4/src/ajax/ajaxTest.js","lines":[223,233],"code":"test(\"test global handlers - failure\", function() {\n\texpect( isLocal ? 4 : 8 );\n\tstop();\n\t\n\tvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\t\tsuccess = function() { counter.success++ },\n\t\terror = function() { counter.error++ },\n\t\tcomplete = function() { counter.complete++ },\n\t\tsend = function() { counter.send++ };\n\t\t\n\t$.ajaxTimeout(0);"}]},
{"id":"8d072e89bfd5609c052e5401ccc12b452097bee2","instances":[{"path":"./1.1.4/src/fx/fx.js","lines":[1,42],"code":"jQuery.fn.extend({\n\n\t/**\n\t * Displays each of the set of matched elements if they are hidden.\n\t *\n\t * @example $(\"p\").show()\n\t * @before <p style=\"display: none\">Hello</p>\n\t * @result [ <p style=\"display: block\">Hello</p> ]\n\t *\n\t * @name show\n\t * @type jQuery\n\t * @cat Effects\n\t */\n\t\n\t/**\n\t * Show all matched elements using a graceful animation and firing an\n\t * optional callback after completion.\n\t *\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").show(\"slow\");\n\t *\n\t * @example $(\"p\").show(\"slow\",function(){\n\t *   alert(\"Animation Done.\");\n\t * });\n\t *\n\t * @name show\n\t * @type jQuery\n\t * @param String|Number speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param Function callback (optional) A function to be executed whenever the animation completes.\n\t * @cat Effects\n\t * @see hide(String|Number,Function)\n\t */\n\tshow: function(speed,callback){\n\t\treturn speed ?\n\t\t\tthis.animate({\n\t\t\t\theight: \"show\", width: \"show\", opacity: \"show\"\n\t\t\t}, speed, callback) :\n\t\t\t\n\t\t\tthis.filter(\":hidden\").each(function(){\n\t\t\t\tthis.style.display = this.oldblock ? this.oldblock : \"\";"},{"path":"./1.2.5/src/fx.js","lines":[1,9],"code":"jQuery.fn.extend({\n\tshow: function(speed,callback){\n\t\treturn speed ?\n\t\t\tthis.animate({\n\t\t\t\theight: \"show\", width: \"show\", opacity: \"show\"\n\t\t\t}, speed, callback) :\n\n\t\t\tthis.filter(\":hidden\").each(function(){\n\t\t\t\tthis.style.display = this.oldblock || \"\";"}]},
{"id":"3f2cd9dbc9a93b9a4236f9c2696fd56513b2c77a","instances":[{"path":"./1.1.4/src/fx/fx.js","lines":[80,87],"code":"hide: function(speed,callback){\n\treturn speed ?\n\t\tthis.animate({\n\t\t\theight: \"hide\", width: \"hide\", opacity: \"hide\"\n\t\t}, speed, callback) :\n\t\t\n\t\tthis.filter(\":visible\").each(function(){\n\t\t\tthis.oldblock = this.oldblock || jQuery.css(this,\"display\");"},{"path":"./1.2.5/src/fx.js","lines":[21,28],"code":"hide: function(speed,callback){\n\treturn speed ?\n\t\tthis.animate({\n\t\t\theight: \"hide\", width: \"hide\", opacity: \"hide\"\n\t\t}, speed, callback) :\n\n\t\tthis.filter(\":visible\").each(function(){\n\t\t\tthis.oldblock = this.oldblock || jQuery.css(this,\"display\");"}]},
{"id":"a4d8f783ef6c3376e64ddaa886509b6c28dfbf5d","instances":[{"path":"./1.1.4/src/fx/fx.js","lines":[375,387],"code":"jQuery.extend({\n\t\n\tspeed: function(speed, easing, fn) {\n\t\tvar opt = speed && speed.constructor == Object ? speed : {\n\t\t\tcomplete: fn || !fn && easing || \n\t\t\t\tjQuery.isFunction( speed ) && speed,\n\t\t\tduration: speed,\n\t\t\teasing: fn && easing || easing && easing.constructor != Function && easing\n\t\t};\n\n\t\topt.duration = (opt.duration && opt.duration.constructor == Number ? \n\t\t\topt.duration : \n\t\t\t{ slow: 600, fast: 200 }[opt.duration]) || 400;"},{"path":"./1.2.5/src/fx.js","lines":[209,221],"code":"jQuery.extend({\n\n\tspeed: function(speed, easing, fn) {\n\t\tvar opt = speed && speed.constructor == Object ? speed : {\n\t\t\tcomplete: fn || !fn && easing ||\n\t\t\t\tjQuery.isFunction( speed ) && speed,\n\t\t\tduration: speed,\n\t\t\teasing: fn && easing || easing && easing.constructor != Function && easing\n\t\t};\n\n\t\topt.duration = (opt.duration && opt.duration.constructor == Number ?\n\t\t\topt.duration :\n\t\t\tjQuery.fx.speeds[opt.duration]) || jQuery.fx.speeds.def;"}]},
{"id":"b77b50a13ba156d1d3a854fea9f4bdc8ae8713a8","instances":[{"path":"./1.1.4/src/jquery/jquery.js","lines":[1967,1982],"code":"// Figure out what browser is being used\njQuery.browser = {\n\tversion: (userAgent.match(/.+(?:rv|it|ra|ie)[\\/: ]([\\d.]+)/) || [])[1],\n\tsafari: /webkit/.test(userAgent),\n\topera: /opera/.test(userAgent),\n\tmsie: /msie/.test(userAgent) && !/opera/.test(userAgent),\n\tmozilla: /mozilla/.test(userAgent) && !/(compatible|webkit)/.test(userAgent)\n};\n\nvar styleFloat = jQuery.browser.msie ? \"styleFloat\" : \"cssFloat\";\n\t\njQuery.extend({\n\t// Check to see if the W3C box model is being used\n\tboxModel: !jQuery.browser.msie || document.compatMode == \"CSS1Compat\",\n\t\n\tstyleFloat: jQuery.browser.msie ? \"styleFloat\" : \"cssFloat\","},{"path":"./1.2.5/src/core.js","lines":[1217,1234],"code":"// Figure out what browser is being used\njQuery.browser = {\n\tversion: (userAgent.match( /.+(?:rv|it|ra|ie)[\\/: ]([\\d.]+)/ ) || [])[1],\n\tsafari: /webkit/.test( userAgent ),\n\topera: /opera/.test( userAgent ),\n\tmsie: /msie/.test( userAgent ) && !/opera/.test( userAgent ),\n\tmozilla: /mozilla/.test( userAgent ) && !/(compatible|webkit)/.test( userAgent )\n};\n\nvar styleFloat = jQuery.browser.msie ?\n\t\"styleFloat\" :\n\t\"cssFloat\";\n\njQuery.extend({\n\t// Check to see if the W3C box model is being used\n\tboxModel: !jQuery.browser.msie || document.compatMode == \"CSS1Compat\",\n\n\tprops: {"}]},
{"id":"222dc0db0d35e9daad4126cb211de9814b68a796","instances":[{"path":"./1.1.4/src/selector/selector.js","lines":[65,106],"code":"// The regular expressions that power the parsing engine\nparse: [\n\t// Match: [@value='test'], [@foo]\n\t/^\\[ *(@)([\\w-]+) *([!*$^~=]*) *('?\"?)(.*?)\\4 *\\]/,\n\n\t// DEPRECATED\n\t// Match: [div], [div p]\n\t/^(\\[)\\s*(.*?(\\[.*?\\])?[^[]*?)\\s*\\]/,\n\n\t// Match: :contains('foo')\n\t/^(:)([\\w-]+)\\(\"?'?(.*?(\\(.*?\\))?[^(]*?)\"?'?\\)/,\n\n\t// Match: :even, :last-chlid, #id, .class\n\tnew RegExp(\"^([:.#]*)(\" + chars + \"+)\")\n],\n\nmultiFilter: function( expr, elems, not ) {\n\tvar old, cur = [];\n\n\twhile ( expr && expr != old ) {\n\t\told = expr;\n\t\tvar f = jQuery.filter( expr, elems, not );\n\t\texpr = f.t.replace(/^\\s*,\\s*/, \"\" );\n\t\tcur = not ? elems = f.r : jQuery.merge( cur, f.r );\n\t}\n\n\treturn cur;\n},\n\n/**\n * @name $.find\n * @type Array<Element>\n * @private\n * @cat Core\n */\nfind: function( t, context ) {\n\t// Quickly handle non-string expressions\n\tif ( typeof t != \"string\" )\n\t\treturn [ t ];\n\n\t// Make sure that the context is a DOM Element\n\tif ( context && !context.nodeType )"},{"path":"./1.2.5/src/selector.js","lines":[68,99],"code":"// The regular expressions that power the parsing engine\nparse: [\n\t// Match: [@value='test'], [@foo]\n\t/^(\\[) *@?([\\w-]+) *([!*$^~=]*) *('?\"?)(.*?)\\4 *\\]/,\n\n\t// Match: :contains('foo')\n\t/^(:)([\\w-]+)\\(\"?'?(.*?(\\(.*?\\))?[^(]*?)\"?'?\\)/,\n\n\t// Match: :even, :last-child, #id, .class\n\tnew RegExp(\"^([:.#]*)(\" + chars + \"+)\")\n],\n\nmultiFilter: function( expr, elems, not ) {\n\tvar old, cur = [];\n\n\twhile ( expr && expr != old ) {\n\t\told = expr;\n\t\tvar f = jQuery.filter( expr, elems, not );\n\t\texpr = f.t.replace(/^\\s*,\\s*/, \"\" );\n\t\tcur = not ? elems = f.r : jQuery.merge( cur, f.r );\n\t}\n\n\treturn cur;\n},\n\nfind: function( t, context ) {\n\t// Quickly handle non-string expressions\n\tif ( typeof t != \"string\" )\n\t\treturn [ t ];\n\n\t// check to make sure context is a DOM element or a document\n\tif ( context && context.nodeType != 1 && context.nodeType != 9)"}]},
{"id":"c3287bfe5c88af5e11548e410f00fabfd36d1f9c","instances":[{"path":"./1.1.4/src/selector/selector.js","lines":[187,250],"code":"\t\tret = r;\n\n\t\t// And remove the token\n\t\tt = jQuery.trim( t.replace( re, \"\" ) );\n\t\tfoundToken = true;\n\t}\n}\n\n// See if there's still an expression, and that we haven't already\n// matched a token\nif ( t && !foundToken ) {\n\t// Handle multiple expressions\n\tif ( !t.indexOf(\",\") ) {\n\t\t// Clean the result set\n\t\tif ( context == ret[0] ) ret.shift();\n\n\t\t// Merge the result sets\n\t\tdone = jQuery.merge( done, ret );\n\n\t\t// Reset the context\n\t\tr = ret = [context];\n\n\t\t// Touch up the selector string\n\t\tt = \" \" + t.substr(1,t.length);\n\n\t} else {\n\t\t// Optimize for the case nodeName#idName\n\t\tvar re2 = quickID;\n\t\tvar m = re2.exec(t);\n\t\t\n\t\t// Re-organize the results, so that they're consistent\n\t\tif ( m ) {\n\t\t   m = [ 0, m[2], m[3], m[1] ];\n\n\t\t} else {\n\t\t\t// Otherwise, do a traditional filter check for\n\t\t\t// ID, class, and element selectors\n\t\t\tre2 = quickClass;\n\t\t\tm = re2.exec(t);\n\t\t}\n\n\t\tm[2] = m[2].replace(/\\\\/g, \"\");\n\n\t\tvar elem = ret[ret.length-1];\n\n\t\t// Try to do a global search by ID, where we can\n\t\tif ( m[1] == \"#\" && elem && elem.getElementById && !jQuery.isXMLDoc(elem) ) {\n\t\t\t// Optimization for HTML document case\n\t\t\tvar oid = elem.getElementById(m[2]);\n\t\t\t\n\t\t\t// Do a quick check for the existence of the actual ID attribute\n\t\t\t// to avoid selecting by the name attribute in IE\n\t\t\t// also check to insure id is a string to avoid selecting an element with the name of 'id' inside a form\n\t\t\tif ( (jQuery.browser.msie||jQuery.browser.opera) && oid && typeof oid.id == \"string\" && oid.id != m[2] )\n\t\t\t\toid = jQuery('[@id=\"'+m[2]+'\"]', elem)[0];\n\n\t\t\t// Do a quick check for node name (where applicable) so\n\t\t\t// that div#foo searches will be really fast\n\t\t\tret = r = oid && (!m[3] || jQuery.nodeName(oid, m[3])) ? [oid] : [];\n\t\t} else {\n\t\t\t// We need to find all descendant elements\n\t\t\tfor ( var i = 0; ret[i]; i++ ) {\n\t\t\t\t// Grab the tag name being searched for\n\t\t\t\tvar tag = m[1] != \"\" || m[0] == \"\" ? \"*\" : m[2];"},{"path":"./1.2.5/src/selector.js","lines":[164,227],"code":"\t\tret = r;\n\n\t\t// And remove the token\n\t\tt = jQuery.trim( t.replace( re, \"\" ) );\n\t\tfoundToken = true;\n\t}\n}\n\n// See if there's still an expression, and that we haven't already\n// matched a token\nif ( t && !foundToken ) {\n\t// Handle multiple expressions\n\tif ( !t.indexOf(\",\") ) {\n\t\t// Clean the result set\n\t\tif ( context == ret[0] ) ret.shift();\n\n\t\t// Merge the result sets\n\t\tdone = jQuery.merge( done, ret );\n\n\t\t// Reset the context\n\t\tr = ret = [context];\n\n\t\t// Touch up the selector string\n\t\tt = \" \" + t.substr(1,t.length);\n\n\t} else {\n\t\t// Optimize for the case nodeName#idName\n\t\tvar re2 = quickID;\n\t\tvar m = re2.exec(t);\n\n\t\t// Re-organize the results, so that they're consistent\n\t\tif ( m ) {\n\t\t\tm = [ 0, m[2], m[3], m[1] ];\n\n\t\t} else {\n\t\t\t// Otherwise, do a traditional filter check for\n\t\t\t// ID, class, and element selectors\n\t\t\tre2 = quickClass;\n\t\t\tm = re2.exec(t);\n\t\t}\n\n\t\tm[2] = m[2].replace(/\\\\/g, \"\");\n\n\t\tvar elem = ret[ret.length-1];\n\n\t\t// Try to do a global search by ID, where we can\n\t\tif ( m[1] == \"#\" && elem && elem.getElementById && !jQuery.isXMLDoc(elem) ) {\n\t\t\t// Optimization for HTML document case\n\t\t\tvar oid = elem.getElementById(m[2]);\n\n\t\t\t// Do a quick check for the existence of the actual ID attribute\n\t\t\t// to avoid selecting by the name attribute in IE\n\t\t\t// also check to insure id is a string to avoid selecting an element with the name of 'id' inside a form\n\t\t\tif ( (jQuery.browser.msie||jQuery.browser.opera) && oid && typeof oid.id == \"string\" && oid.id != m[2] )\n\t\t\t\toid = jQuery('[@id=\"'+m[2]+'\"]', elem)[0];\n\n\t\t\t// Do a quick check for node name (where applicable) so\n\t\t\t// that div#foo searches will be really fast\n\t\t\tret = r = oid && (!m[3] || jQuery.nodeName(oid, m[3])) ? [oid] : [];\n\t\t} else {\n\t\t\t// We need to find all descendant elements\n\t\t\tfor ( var i = 0; ret[i]; i++ ) {\n\t\t\t\t// Grab the tag name being searched for\n\t\t\t\tvar tag = m[1] == \"#\" && m[3] ? m[3] : m[1] != \"\" || m[0] == \"\" ? \"*\" : m[2];"}]},
{"id":"677fb1bfa1fee32e49a6b8f1e1b5874587ab9b37","instances":[{"path":"./1.1.4/src/selector/selector.js","lines":[309,347],"code":"classFilter: function(r,m,not){\n\tm = \" \" + m + \" \";\n\tvar tmp = [];\n\tfor ( var i = 0; r[i]; i++ ) {\n\t\tvar pass = (\" \" + r[i].className + \" \").indexOf( m ) >= 0;\n\t\tif ( !not && pass || not && !pass )\n\t\t\ttmp.push( r[i] );\n\t}\n\treturn tmp;\n},\n\nfilter: function(t,r,not) {\n\tvar last;\n\n\t// Look for common filter expressions\n\twhile ( t  && t != last ) {\n\t\tlast = t;\n\n\t\tvar p = jQuery.parse, m;\n\n\t\tfor ( var i = 0; p[i]; i++ ) {\n\t\t\tm = p[i].exec( t );\n\n\t\t\tif ( m ) {\n\t\t\t\t// Remove what we just matched\n\t\t\t\tt = t.substring( m[0].length );\n\n\t\t\t\tm[2] = m[2].replace(/\\\\/g, \"\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif ( !m )\n\t\t\tbreak;\n\n\t\t// :not() is a special case that can be optimized by\n\t\t// keeping it out of the expression list\n\t\tif ( m[1] == \":\" && m[2] == \"not\" )\n\t\t\tr = jQuery.filter(m[3], r, true).r;"},{"path":"./1.2.5/src/selector.js","lines":[286,325],"code":"classFilter: function(r,m,not){\n\tm = \" \" + m + \" \";\n\tvar tmp = [];\n\tfor ( var i = 0; r[i]; i++ ) {\n\t\tvar pass = (\" \" + r[i].className + \" \").indexOf( m ) >= 0;\n\t\tif ( !not && pass || not && !pass )\n\t\t\ttmp.push( r[i] );\n\t}\n\treturn tmp;\n},\n\nfilter: function(t,r,not) {\n\tvar last;\n\n\t// Look for common filter expressions\n\twhile ( t && t != last ) {\n\t\tlast = t;\n\n\t\tvar p = jQuery.parse, m;\n\n\t\tfor ( var i = 0; p[i]; i++ ) {\n\t\t\tm = p[i].exec( t );\n\n\t\t\tif ( m ) {\n\t\t\t\t// Remove what we just matched\n\t\t\t\tt = t.substring( m[0].length );\n\n\t\t\t\tm[2] = m[2].replace(/\\\\/g, \"\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif ( !m )\n\t\t\tbreak;\n\n\t\t// :not() is a special case that can be optimized by\n\t\t// keeping it out of the expression list\n\t\tif ( m[1] == \":\" && m[2] == \"not\" )\n\t\t\t// optimize if only one selector found (most common case)\n\t\t\tr = isSimple.test( m[3] ) ?"}]},
{"id":"4ab746c0f9ccad15f7a058c1e7d43ad44cc3cd9f","instances":[{"path":"./1.1.4/src/selector/selector.js","lines":[353,375],"code":"else if ( m[1] == \"@\" ) {\n\tvar tmp = [], type = m[3];\n\t\n\tfor ( var i = 0, rl = r.length; i < rl; i++ ) {\n\t\tvar a = r[i], z = a[ jQuery.props[m[2]] || m[2] ];\n\t\t\n\t\tif ( z == null || /href|src|selected/.test(m[2]) )\n\t\t\tz = jQuery.attr(a,m[2]) || '';\n\n\t\tif ( (type == \"\" && !!z ||\n\t\t\t type == \"=\" && z == m[5] ||\n\t\t\t type == \"!=\" && z != m[5] ||\n\t\t\t type == \"^=\" && z && !z.indexOf(m[5]) ||\n\t\t\t type == \"$=\" && z.substr(z.length - m[5].length) == m[5] ||\n\t\t\t (type == \"*=\" || type == \"~=\") && z.indexOf(m[5]) >= 0) ^ not )\n\t\t\t\ttmp.push( a );\n\t}\n\t\n\tr = tmp;\n\n// We can get a speed boost by handling nth-child here\n} else if ( m[1] == \":\" && m[2] == \"nth-child\" ) {\n\tvar num = jQuery.mergeNum++, tmp = [],"},{"path":"./1.2.5/src/selector.js","lines":[333,355],"code":"else if ( m[1] == \"[\" ) {\n\tvar tmp = [], type = m[3];\n\n\tfor ( var i = 0, rl = r.length; i < rl; i++ ) {\n\t\tvar a = r[i], z = a[ jQuery.props[m[2]] || m[2] ];\n\n\t\tif ( z == null || /href|src|selected/.test(m[2]) )\n\t\t\tz = jQuery.attr(a,m[2]) || '';\n\n\t\tif ( (type == \"\" && !!z ||\n\t\t\t type == \"=\" && z == m[5] ||\n\t\t\t type == \"!=\" && z != m[5] ||\n\t\t\t type == \"^=\" && z && !z.indexOf(m[5]) ||\n\t\t\t type == \"$=\" && z.substr(z.length - m[5].length) == m[5] ||\n\t\t\t (type == \"*=\" || type == \"~=\") && z.indexOf(m[5]) >= 0) ^ not )\n\t\t\t\ttmp.push( a );\n\t}\n\n\tr = tmp;\n\n// We can get a speed boost by handling nth-child here\n} else if ( m[1] == \":\" && m[2] == \"nth-child\" ) {\n\tvar merge = {}, tmp = [],"}]}]
