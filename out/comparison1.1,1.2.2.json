[{"id":"d3420d15738502c4d94d042e7a06218eadc20ca1","instances":[{"path":"./1.1/src/ajax/ajax.js","lines":[786,802],"code":"param: function( a ) {\n\tvar s = [];\n\n\t// If an array was passed in, assume that it is an array\n\t// of form elements\n\tif ( a.constructor == Array || a.jquery )\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function(){\n\t\t\ts.push( encodeURIComponent(this.name) + \"=\" + encodeURIComponent( this.value ) );\n\t\t});\n\n\t// Otherwise, assume that it's an object of key/value pairs\n\telse\n\t\t// Serialize the key/values\n\t\tfor ( var j in a )\n\t\t\t// If the value is an array then the key names need to be repeated\n\t\t\tif ( a[j].constructor == Array )"},{"path":"./1.2.2/src/ajax.js","lines":[466,482],"code":"param: function( a ) {\n\tvar s = [];\n\n\t// If an array was passed in, assume that it is an array\n\t// of form elements\n\tif ( a.constructor == Array || a.jquery )\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function(){\n\t\t\ts.push( encodeURIComponent(this.name) + \"=\" + encodeURIComponent( this.value ) );\n\t\t});\n\n\t// Otherwise, assume that it's an object of key/value pairs\n\telse\n\t\t// Serialize the key/values\n\t\tfor ( var j in a )\n\t\t\t// If the value is an array then the key names need to be repeated\n\t\t\tif ( a[j] && a[j].constructor == Array )"}]},
{"id":"88d002ffb7edfc2493f973dabc93bd53b1c70c88","instances":[{"path":"./1.1/src/ajax/ajaxTest.js","lines":[99,108],"code":"test(\"test global handlers - success\", function() {\n\texpect(8);\n\tstop();\n\tvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\t\tsuccess = function() { counter.success++ },\n\t\terror = function() { counter.error++ },\n\t\tcomplete = function() { counter.complete++ },\n\t\tsend = function() { counter.send++ };\n\n\t$('#foo').ajaxStart(complete).ajaxStop(complete).ajaxSend(send).ajaxComplete(complete).ajaxError(error).ajaxSuccess(success);"},{"path":"./1.1/src/ajax/ajaxTest.js","lines":[127,135],"code":"test(\"test global handlers - failure\", function() {\n\texpect(8);\n\tstop();\n\tvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\t\tsuccess = function() { counter.success++ },\n\t\terror = function() { counter.error++ },\n\t\tcomplete = function() { counter.complete++ },\n\t\tsend = function() { counter.send++ };\n\t$.ajaxTimeout(0);"}]},
{"id":"20c087d2152eccad51e74b814e4ad69ef8ba4d19","instances":[{"path":"./1.1/src/fx/fx.js","lines":[355,371],"code":"jQuery.extend({\n\t\n\tspeed: function(speed, easing, fn) {\n\t\tvar opt = speed && speed.constructor == Object ? speed : {\n\t\t\tcomplete: fn || !fn && easing || \n\t\t\t\tjQuery.isFunction( speed ) && speed,\n\t\t\tduration: speed,\n\t\t\teasing: fn && easing || easing && easing.constructor != Function && easing\n\t\t};\n\n\t\topt.duration = (opt.duration && opt.duration.constructor == Number ? \n\t\t\topt.duration : \n\t\t\t{ slow: 600, fast: 200 }[opt.duration]) || 400;\n\t\n\t\t// Queueing\n\t\topt.old = opt.complete;\n\t\topt.complete = function(){"},{"path":"./1.2.2/src/fx.js","lines":[210,226],"code":"jQuery.extend({\n\t\n\tspeed: function(speed, easing, fn) {\n\t\tvar opt = speed && speed.constructor == Object ? speed : {\n\t\t\tcomplete: fn || !fn && easing || \n\t\t\t\tjQuery.isFunction( speed ) && speed,\n\t\t\tduration: speed,\n\t\t\teasing: fn && easing || easing && easing.constructor != Function && easing\n\t\t};\n\n\t\topt.duration = (opt.duration && opt.duration.constructor == Number ? \n\t\t\topt.duration : \n\t\t\t{ slow: 600, fast: 200 }[opt.duration]) || 400;\n\t\n\t\t// Queueing\n\t\topt.old = opt.complete;\n\t\topt.complete = function(){"}]},
{"id":"43d18d1ecd0a5b536e75adb84fc00a92a0164e0e","instances":[{"path":"./1.1/src/jquery/jquery.js","lines":[48,60],"code":"\t\tjQuery.find( a, c );\n}\n\nreturn this.setArray(\n\t// HANDLE: $(array)\n\ta.constructor == Array && a ||\n\n\t// HANDLE: $(arraylike)\n\t// Watch for when an array-like object is passed as the selector\n\t(a.jquery || a.length && a != window && !a.nodeType && a[0] != undefined && a[0].nodeType) && jQuery.makeArray( a ) ||\n\n\t// HANDLE: $(*)\n\t[ a ] );"},{"path":"./1.2.2/src/core.js","lines":[88,99],"code":"\treturn new jQuery( document )[ jQuery.fn.ready ? \"ready\" : \"load\" ]( selector );\n\nreturn this.setArray(\n\t// HANDLE: $(array)\n\tselector.constructor == Array && selector ||\n\n\t// HANDLE: $(arraylike)\n\t// Watch for when an array-like object, contains DOM nodes, is passed in as the selector\n\t(selector.jquery || selector.length && selector != window && !selector.nodeType && selector[0] != undefined && selector[0].nodeType) && jQuery.makeArray( selector ) ||\n\n\t// HANDLE: $(*)\n\t[ selector ] );"}]},
{"id":"5bdb67db4a75a783036924d228c64fee716b8f0a","instances":[{"path":"./1.1/src/jquery/jquery.js","lines":[1661,1672],"code":"var result = [], r = [];\n\n// Go through the array, translating each of the items to their\n// new value (or values).\nfor ( var i = 0, el = elems.length; i < el; i++ ) {\n\tvar val = fn(elems[i],i);\n\n\tif ( val !== null && val != undefined ) {\n\t\tif ( val.constructor != Array ) val = [val];\n\t\tresult = result.concat( val );\n\t}\n}"},{"path":"./1.2.2/src/core.js","lines":[1175,1188],"code":"var ret = [];\n\n// Go through the array, translating each of the items to their\n// new value (or values).\nfor ( var i = 0, length = elems.length; i < length; i++ ) {\n\tvar value = callback( elems[ i ], i );\n\n\tif ( value !== null && value != undefined ) {\n\t\tif ( value.constructor != Array )\n\t\t\tvalue = [ value ];\n\n\t\tret = ret.concat( value );\n\t}\n}"}]},
{"id":"16745e95d2ef3f74dc2f19e22484447b36d2bb60","instances":[{"path":"./1.1/src/selector/selector.js","lines":[92,117],"code":"multiFilter: function( expr, elems, not ) {\n\tvar old, cur = [];\n\n\twhile ( expr && expr != old ) {\n\t\told = expr;\n\t\tvar f = jQuery.filter( expr, elems, not );\n\t\texpr = f.t.replace(/^\\s*,\\s*/, \"\" );\n\t\tcur = not ? elems = f.r : jQuery.merge( cur, f.r );\n\t}\n\n\treturn cur;\n},\n\n/**\n * @name $.find\n * @type Array<Element>\n * @private\n * @cat Core\n */\nfind: function( t, context ) {\n\t// Quickly handle non-string expressions\n\tif ( typeof t != \"string\" )\n\t\treturn [ t ];\n\n\t// Make sure that the context is a DOM Element\n\tif ( context && !context.nodeType )"},{"path":"./1.2.2/src/selector.js","lines":[81,100],"code":"multiFilter: function( expr, elems, not ) {\n\tvar old, cur = [];\n\n\twhile ( expr && expr != old ) {\n\t\told = expr;\n\t\tvar f = jQuery.filter( expr, elems, not );\n\t\texpr = f.t.replace(/^\\s*,\\s*/, \"\" );\n\t\tcur = not ? elems = f.r : jQuery.merge( cur, f.r );\n\t}\n\n\treturn cur;\n},\n\nfind: function( t, context ) {\n\t// Quickly handle non-string expressions\n\tif ( typeof t != \"string\" )\n\t\treturn [ t ];\n\n\t// check to make sure context is a DOM element or a document\n\tif ( context && context.nodeType != 1 && context.nodeType != 9)"}]}]
